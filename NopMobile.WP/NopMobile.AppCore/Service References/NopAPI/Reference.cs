//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NopMobile.AppCore.NopAPI {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDTO", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
    public partial class ProductDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.List<NopMobile.AppCore.NopAPI.AttributeDTO> AttributesField;
        
        private string DescriptionField;
        
        private string ExtendedDescriptionField;
        
        private int IdField;
        
        private System.Collections.Generic.List<byte[]> ImageField;
        
        private string NameField;
        
        private decimal PriceField;
        
        private int RatingField;
        
        private bool inStockField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.AttributeDTO> Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtendedDescription {
            get {
                return this.ExtendedDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedDescriptionField, value) != true)) {
                    this.ExtendedDescriptionField = value;
                    this.RaisePropertyChanged("ExtendedDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<byte[]> Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool inStock {
            get {
                return this.inStockField;
            }
            set {
                if ((this.inStockField.Equals(value) != true)) {
                    this.inStockField = value;
                    this.RaisePropertyChanged("inStock");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeDTO", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
    public partial class AttributeDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private NopMobile.AppCore.NopAPI.AttributeControlType AttributeControlField;
        
        private int IdField;
        
        private string NameField;
        
        private System.Collections.Generic.List<string> ValuesField;
        
        private bool isRequiredField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NopMobile.AppCore.NopAPI.AttributeControlType AttributeControl {
            get {
                return this.AttributeControlField;
            }
            set {
                if ((this.AttributeControlField.Equals(value) != true)) {
                    this.AttributeControlField = value;
                    this.RaisePropertyChanged("AttributeControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isRequired {
            get {
                return this.isRequiredField;
            }
            set {
                if ((this.isRequiredField.Equals(value) != true)) {
                    this.isRequiredField = value;
                    this.RaisePropertyChanged("isRequired");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeControlType", Namespace="http://schemas.datacontract.org/2004/07/Nop.Core.Domain.Catalog")]
    public enum AttributeControlType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropdownList = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RadioList = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Checkboxes = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextBox = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultilineTextbox = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Datepicker = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileUpload = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ColorSquares = 40,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryDTO", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
    public partial class CategoryDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int DisplayOrderField;
        
        private int IdField;
        
        private byte[] ImageField;
        
        private string NameField;
        
        private int ParentIdField;
        
        private bool ShowOnHomePageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayOrder {
            get {
                return this.DisplayOrderField;
            }
            set {
                if ((this.DisplayOrderField.Equals(value) != true)) {
                    this.DisplayOrderField = value;
                    this.RaisePropertyChanged("DisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowOnHomePage {
            get {
                return this.ShowOnHomePageField;
            }
            set {
                if ((this.ShowOnHomePageField.Equals(value) != true)) {
                    this.ShowOnHomePageField = value;
                    this.RaisePropertyChanged("ShowOnHomePage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductSortingEnum", Namespace="http://schemas.datacontract.org/2004/07/Nop.Core.Domain.Catalog")]
    public enum ProductSortingEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Position = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NameAsc = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NameDesc = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceAsc = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceDesc = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedOn = 15,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryDTO", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
    public partial class CountryDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NameField;
        
        private System.Collections.Generic.List<string> ProvincesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Provinces {
            get {
                return this.ProvincesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvincesField, value) != true)) {
                    this.ProvincesField = value;
                    this.RaisePropertyChanged("Provinces");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShoppingCartType", Namespace="http://schemas.datacontract.org/2004/07/Nop.Core.Domain.Orders")]
    public enum ShoppingCartType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShoppingCart = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wishlist = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderStatus", Namespace="http://schemas.datacontract.org/2004/07/Nop.Core.Domain.Orders")]
    public enum OrderStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Processing = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Complete = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelled = 40,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentStatus", Namespace="http://schemas.datacontract.org/2004/07/Nop.Core.Domain.Payments")]
    public enum PaymentStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Authorized = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paid = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartiallyRefunded = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Refunded = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voided = 50,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShippingStatus", Namespace="http://schemas.datacontract.org/2004/07/Nop.Core.Domain.Shipping")]
    public enum ShippingStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShippingNotRequired = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotYetShipped = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartiallyShipped = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shipped = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delivered = 40,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDTO", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
    public partial class OrderDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private NopMobile.AppCore.NopAPI.AddressDTO BillingAddressField;
        
        private System.DateTime CreateDateField;
        
        private string OrderEmailField;
        
        private int OrderIDField;
        
        private NopMobile.AppCore.NopAPI.OrderStatus OrderStatusField;
        
        private NopMobile.AppCore.NopAPI.PaymentStatus PayStatusField;
        
        private System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderItemDTO> ProductsListField;
        
        private NopMobile.AppCore.NopAPI.AddressDTO ShippingAddressField;
        
        private NopMobile.AppCore.NopAPI.ShippingStatus ShippingStatusField;
        
        private decimal TotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NopMobile.AppCore.NopAPI.AddressDTO BillingAddress {
            get {
                return this.BillingAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingAddressField, value) != true)) {
                    this.BillingAddressField = value;
                    this.RaisePropertyChanged("BillingAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderEmail {
            get {
                return this.OrderEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderEmailField, value) != true)) {
                    this.OrderEmailField = value;
                    this.RaisePropertyChanged("OrderEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NopMobile.AppCore.NopAPI.OrderStatus OrderStatus {
            get {
                return this.OrderStatusField;
            }
            set {
                if ((this.OrderStatusField.Equals(value) != true)) {
                    this.OrderStatusField = value;
                    this.RaisePropertyChanged("OrderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NopMobile.AppCore.NopAPI.PaymentStatus PayStatus {
            get {
                return this.PayStatusField;
            }
            set {
                if ((this.PayStatusField.Equals(value) != true)) {
                    this.PayStatusField = value;
                    this.RaisePropertyChanged("PayStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderItemDTO> ProductsList {
            get {
                return this.ProductsListField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsListField, value) != true)) {
                    this.ProductsListField = value;
                    this.RaisePropertyChanged("ProductsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NopMobile.AppCore.NopAPI.AddressDTO ShippingAddress {
            get {
                return this.ShippingAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingAddressField, value) != true)) {
                    this.ShippingAddressField = value;
                    this.RaisePropertyChanged("ShippingAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NopMobile.AppCore.NopAPI.ShippingStatus ShippingStatus {
            get {
                return this.ShippingStatusField;
            }
            set {
                if ((this.ShippingStatusField.Equals(value) != true)) {
                    this.ShippingStatusField = value;
                    this.RaisePropertyChanged("ShippingStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressDTO", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
    public partial class AddressDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CityField;
        
        private string CompanyField;
        
        private string CountryField;
        
        private string FirstnameField;
        
        private int IdField;
        
        private string LastnameField;
        
        private string PhoneField;
        
        private string PostalCodeField;
        
        private string StreetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderItemDTO", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
    public partial class OrderItemDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int OrderIdField;
        
        private NopMobile.AppCore.NopAPI.ProductDTO ProductField;
        
        private int ProductIdField;
        
        private int QuantityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NopMobile.AppCore.NopAPI.ProductDTO Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDTO", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
    public partial class CustomerDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool ActiveField;
        
        private System.DateTime ActivityField;
        
        private System.Collections.Generic.List<NopMobile.AppCore.NopAPI.AddressDTO> AddressesField;
        
        private string AdminCommentField;
        
        private string BirthdayField;
        
        private string CompanyField;
        
        private string EmailField;
        
        private string FullNameField;
        
        private string GenderField;
        
        private int IdField;
        
        private bool IsAdminField;
        
        private string PhoneField;
        
        private System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CartItemDTO> ShoppingCartField;
        
        private string UsernameField;
        
        private System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CartItemDTO> WishlistField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Activity {
            get {
                return this.ActivityField;
            }
            set {
                if ((this.ActivityField.Equals(value) != true)) {
                    this.ActivityField = value;
                    this.RaisePropertyChanged("Activity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.AddressDTO> Addresses {
            get {
                return this.AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesField, value) != true)) {
                    this.AddressesField = value;
                    this.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminComment {
            get {
                return this.AdminCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminCommentField, value) != true)) {
                    this.AdminCommentField = value;
                    this.RaisePropertyChanged("AdminComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthdayField, value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CartItemDTO> ShoppingCart {
            get {
                return this.ShoppingCartField;
            }
            set {
                if ((object.ReferenceEquals(this.ShoppingCartField, value) != true)) {
                    this.ShoppingCartField = value;
                    this.RaisePropertyChanged("ShoppingCart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CartItemDTO> Wishlist {
            get {
                return this.WishlistField;
            }
            set {
                if ((object.ReferenceEquals(this.WishlistField, value) != true)) {
                    this.WishlistField = value;
                    this.RaisePropertyChanged("Wishlist");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CartItemDTO", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
    public partial class CartItemDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private NopMobile.AppCore.NopAPI.ProductDTO ProductField;
        
        private int QuantityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NopMobile.AppCore.NopAPI.ProductDTO Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeywordDTO", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
    public partial class KeywordDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CountField;
        
        private string KeywordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BestsellerDTO", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
    public partial class BestsellerDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal AmountField;
        
        private NopMobile.AppCore.NopAPI.ProductDTO ProductField;
        
        private int QuantityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NopMobile.AppCore.NopAPI.ProductDTO Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderError", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Misc.WebServices")]
    public partial class OrderError : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorMessageField;
        
        private int OrderIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NopAPI.INopService")]
    public interface INopService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/CheckLogin", ReplyAction="http://tempuri.org/INopService/CheckLoginResponse")]
        System.IAsyncResult BeginCheckLogin(string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/CheckLoginClient", ReplyAction="http://tempuri.org/INopService/CheckLoginClientResponse")]
        System.IAsyncResult BeginCheckLoginClient(string UsernameOrEmail, string UserPassword, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckLoginClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/RegisterClient", ReplyAction="http://tempuri.org/INopService/RegisterClientResponse")]
        System.IAsyncResult BeginRegisterClient(bool Male, string Firstname, string Lastname, System.DateTime Birthday, string Email, string Company, string Password, System.AsyncCallback callback, object asyncState);
        
        bool EndRegisterClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/FeaturedProducts", ReplyAction="http://tempuri.org/INopService/FeaturedProductsResponse")]
        System.IAsyncResult BeginFeaturedProducts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> EndFeaturedProducts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/RecentlyViewedProducts", ReplyAction="http://tempuri.org/INopService/RecentlyViewedProductsResponse")]
        System.IAsyncResult BeginRecentlyViewedProducts(int number, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> EndRecentlyViewedProducts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetMainCategories", ReplyAction="http://tempuri.org/INopService/GetMainCategoriesResponse")]
        System.IAsyncResult BeginGetMainCategories(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO> EndGetMainCategories(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetSubCategoriesFromParent", ReplyAction="http://tempuri.org/INopService/GetSubCategoriesFromParentResponse")]
        System.IAsyncResult BeginGetSubCategoriesFromParent(int Id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO> EndGetSubCategoriesFromParent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/RemoveFromCart", ReplyAction="http://tempuri.org/INopService/RemoveFromCartResponse")]
        System.IAsyncResult BeginRemoveFromCart(string Username, int CartItemId, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveFromCart(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetStoreUrl", ReplyAction="http://tempuri.org/INopService/GetStoreUrlResponse")]
        System.IAsyncResult BeginGetStoreUrl(System.AsyncCallback callback, object asyncState);
        
        string EndGetStoreUrl(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/CategoryProductsSortedFiltered", ReplyAction="http://tempuri.org/INopService/CategoryProductsSortedFilteredResponse")]
        System.IAsyncResult BeginCategoryProductsSortedFiltered(int CatId, bool Sorted, bool Filtered, NopMobile.AppCore.NopAPI.ProductSortingEnum Sorting, decimal Max, decimal Min, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> EndCategoryProductsSortedFiltered(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/ShippingMethods", ReplyAction="http://tempuri.org/INopService/ShippingMethodsResponse")]
        System.IAsyncResult BeginShippingMethods(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndShippingMethods(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/PaymentMethods", ReplyAction="http://tempuri.org/INopService/PaymentMethodsResponse")]
        System.IAsyncResult BeginPaymentMethods(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndPaymentMethods(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetShippingFees", ReplyAction="http://tempuri.org/INopService/GetShippingFeesResponse")]
        System.IAsyncResult BeginGetShippingFees(int CustomerId, System.AsyncCallback callback, object asyncState);
        
        decimal EndGetShippingFees(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetTaxFees", ReplyAction="http://tempuri.org/INopService/GetTaxFeesResponse")]
        System.IAsyncResult BeginGetTaxFees(int CustomerId, System.AsyncCallback callback, object asyncState);
        
        decimal EndGetTaxFees(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/ReOrder", ReplyAction="http://tempuri.org/INopService/ReOrderResponse")]
        System.IAsyncResult BeginReOrder(int OrderId, System.AsyncCallback callback, object asyncState);
        
        bool EndReOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetPdfInvoice", ReplyAction="http://tempuri.org/INopService/GetPdfInvoiceResponse")]
        System.IAsyncResult BeginGetPdfInvoice(int OrderId, System.AsyncCallback callback, object asyncState);
        
        string EndGetPdfInvoice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/AddAddress", ReplyAction="http://tempuri.org/INopService/AddAddressResponse")]
        System.IAsyncResult BeginAddAddress(string Email, string Firstname, string Lastname, string CountryName, string Province, string City, string Street, string PostalCode, string PhoneNumber, System.AsyncCallback callback, object asyncState);
        
        bool EndAddAddress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetAllCountries", ReplyAction="http://tempuri.org/INopService/GetAllCountriesResponse")]
        System.IAsyncResult BeginGetAllCountries(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CountryDTO> EndGetAllCountries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/AddNewOrder", ReplyAction="http://tempuri.org/INopService/AddNewOrderResponse")]
        System.IAsyncResult BeginAddNewOrder(int CustomerId, int BillingAddressId, int ShippingAddressId, string ShippingMethod, string PaymentMethod, bool GiftWrap, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndAddNewOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/AddToCart", ReplyAction="http://tempuri.org/INopService/AddToCartResponse")]
        System.IAsyncResult BeginAddToCart(string Username, int ProdId, int Quantity, System.Collections.Generic.List<string> Attributes, NopMobile.AppCore.NopAPI.ShoppingCartType Type, System.AsyncCallback callback, object asyncState);
        
        bool EndAddToCart(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetProductById", ReplyAction="http://tempuri.org/INopService/GetProductByIdResponse")]
        System.IAsyncResult BeginGetProductById(int id, System.AsyncCallback callback, object asyncState);
        
        NopMobile.AppCore.NopAPI.ProductDTO EndGetProductById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetAllProductsFromCategory", ReplyAction="http://tempuri.org/INopService/GetAllProductsFromCategoryResponse")]
        System.IAsyncResult BeginGetAllProductsFromCategory(int id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> EndGetAllProductsFromCategory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCategoryById", ReplyAction="http://tempuri.org/INopService/GetCategoryByIdResponse")]
        System.IAsyncResult BeginGetCategoryById(int id, System.AsyncCallback callback, object asyncState);
        
        NopMobile.AppCore.NopAPI.CategoryDTO EndGetCategoryById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetProductsByKeywords", ReplyAction="http://tempuri.org/INopService/GetProductsByKeywordsResponse")]
        System.IAsyncResult BeginGetProductsByKeywords(string Words, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> EndGetProductsByKeywords(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetUserName", ReplyAction="http://tempuri.org/INopService/GetUserNameResponse")]
        System.IAsyncResult BeginGetUserName(string usernameOrEmail, System.AsyncCallback callback, object asyncState);
        
        string EndGetUserName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetOrders", ReplyAction="http://tempuri.org/INopService/GetOrdersResponse")]
        System.IAsyncResult BeginGetOrders(int storeId, int vendorId, int customerId, int productId, int affiliateId, System.Nullable<NopMobile.AppCore.NopAPI.OrderStatus> os, System.Nullable<NopMobile.AppCore.NopAPI.PaymentStatus> ps, System.Nullable<NopMobile.AppCore.NopAPI.ShippingStatus> ss, string billingEmail, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderDTO> EndGetOrders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetOrderById", ReplyAction="http://tempuri.org/INopService/GetOrderByIdResponse")]
        System.IAsyncResult BeginGetOrderById(int id, System.AsyncCallback callback, object asyncState);
        
        NopMobile.AppCore.NopAPI.OrderDTO EndGetOrderById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCustomerList", ReplyAction="http://tempuri.org/INopService/GetCustomerListResponse")]
        System.IAsyncResult BeginGetCustomerList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomerList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetPendingTotal", ReplyAction="http://tempuri.org/INopService/GetPendingTotalResponse")]
        System.IAsyncResult BeginGetPendingTotal(System.AsyncCallback callback, object asyncState);
        
        decimal EndGetPendingTotal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/EndSession", ReplyAction="http://tempuri.org/INopService/EndSessionResponse")]
        System.IAsyncResult BeginEndSession(System.AsyncCallback callback, object asyncState);
        
        void EndEndSession(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCompleteTotal", ReplyAction="http://tempuri.org/INopService/GetCompleteTotalResponse")]
        System.IAsyncResult BeginGetCompleteTotal(System.AsyncCallback callback, object asyncState);
        
        int EndGetCompleteTotal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCancelledTotal", ReplyAction="http://tempuri.org/INopService/GetCancelledTotalResponse")]
        System.IAsyncResult BeginGetCancelledTotal(System.AsyncCallback callback, object asyncState);
        
        int EndGetCancelledTotal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetStoreName", ReplyAction="http://tempuri.org/INopService/GetStoreNameResponse")]
        System.IAsyncResult BeginGetStoreName(System.AsyncCallback callback, object asyncState);
        
        string EndGetStoreName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetRegisteredUsersCountByTime", ReplyAction="http://tempuri.org/INopService/GetRegisteredUsersCountByTimeResponse")]
        System.IAsyncResult BeginGetRegisteredUsersCountByTime(int days, System.AsyncCallback callback, object asyncState);
        
        int EndGetRegisteredUsersCountByTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetTotalSalesByTime", ReplyAction="http://tempuri.org/INopService/GetTotalSalesByTimeResponse")]
        System.IAsyncResult BeginGetTotalSalesByTime(int days, System.AsyncCallback callback, object asyncState);
        
        decimal EndGetTotalSalesByTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetTotalPendingByReason", ReplyAction="http://tempuri.org/INopService/GetTotalPendingByReasonResponse")]
        System.IAsyncResult BeginGetTotalPendingByReason(string reason, System.AsyncCallback callback, object asyncState);
        
        decimal EndGetTotalPendingByReason(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetPendingOrdersCount", ReplyAction="http://tempuri.org/INopService/GetPendingOrdersCountResponse")]
        System.IAsyncResult BeginGetPendingOrdersCount(System.AsyncCallback callback, object asyncState);
        
        int EndGetPendingOrdersCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCurrentCartsCount", ReplyAction="http://tempuri.org/INopService/GetCurrentCartsCountResponse")]
        System.IAsyncResult BeginGetCurrentCartsCount(System.AsyncCallback callback, object asyncState);
        
        int EndGetCurrentCartsCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetWishlistCount", ReplyAction="http://tempuri.org/INopService/GetWishlistCountResponse")]
        System.IAsyncResult BeginGetWishlistCount(System.AsyncCallback callback, object asyncState);
        
        int EndGetWishlistCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetOnlineCount", ReplyAction="http://tempuri.org/INopService/GetOnlineCountResponse")]
        System.IAsyncResult BeginGetOnlineCount(System.AsyncCallback callback, object asyncState);
        
        int EndGetOnlineCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetRegisteredCustomersCount", ReplyAction="http://tempuri.org/INopService/GetRegisteredCustomersCountResponse")]
        System.IAsyncResult BeginGetRegisteredCustomersCount(System.AsyncCallback callback, object asyncState);
        
        int EndGetRegisteredCustomersCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetVendorsCount", ReplyAction="http://tempuri.org/INopService/GetVendorsCountResponse")]
        System.IAsyncResult BeginGetVendorsCount(System.AsyncCallback callback, object asyncState);
        
        int EndGetVendorsCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetPopularKeywords", ReplyAction="http://tempuri.org/INopService/GetPopularKeywordsResponse")]
        System.IAsyncResult BeginGetPopularKeywords(int KeywordNumber, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.KeywordDTO> EndGetPopularKeywords(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetBestsellersByAmount", ReplyAction="http://tempuri.org/INopService/GetBestsellersByAmountResponse")]
        System.IAsyncResult BeginGetBestsellersByAmount(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO> EndGetBestsellersByAmount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetBestsellersByQuantity", ReplyAction="http://tempuri.org/INopService/GetBestsellersByQuantityResponse")]
        System.IAsyncResult BeginGetBestsellersByQuantity(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO> EndGetBestsellersByQuantity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCurrency", ReplyAction="http://tempuri.org/INopService/GetCurrencyResponse")]
        System.IAsyncResult BeginGetCurrency(System.AsyncCallback callback, object asyncState);
        
        string EndGetCurrency(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCustomersByEmail", ReplyAction="http://tempuri.org/INopService/GetCustomersByEmailResponse")]
        System.IAsyncResult BeginGetCustomersByEmail(string Email, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCustomersByUsername", ReplyAction="http://tempuri.org/INopService/GetCustomersByUsernameResponse")]
        System.IAsyncResult BeginGetCustomersByUsername(string Username, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByUsername(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCustomersByFirstname", ReplyAction="http://tempuri.org/INopService/GetCustomersByFirstnameResponse")]
        System.IAsyncResult BeginGetCustomersByFirstname(string Firstname, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByFirstname(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCustomersByLastname", ReplyAction="http://tempuri.org/INopService/GetCustomersByLastnameResponse")]
        System.IAsyncResult BeginGetCustomersByLastname(string Lastname, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByLastname(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCustomersByFullname", ReplyAction="http://tempuri.org/INopService/GetCustomersByFullnameResponse")]
        System.IAsyncResult BeginGetCustomersByFullname(string Fullname, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByFullname(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCustomersByCompany", ReplyAction="http://tempuri.org/INopService/GetCustomersByCompanyResponse")]
        System.IAsyncResult BeginGetCustomersByCompany(string Company, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByCompany(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCustomersByPhone", ReplyAction="http://tempuri.org/INopService/GetCustomersByPhoneResponse")]
        System.IAsyncResult BeginGetCustomersByPhone(string Phone, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByPhone(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCustomersByPostalCode", ReplyAction="http://tempuri.org/INopService/GetCustomersByPostalCodeResponse")]
        System.IAsyncResult BeginGetCustomersByPostalCode(string PostalCode, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByPostalCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetCurrentCarts", ReplyAction="http://tempuri.org/INopService/GetCurrentCartsResponse")]
        System.IAsyncResult BeginGetCurrentCarts(string Filter, string Email, System.Nullable<int> LowerItems, System.Nullable<int> HigherItems, System.Nullable<decimal> LowerTotal, System.Nullable<decimal> HigherTotal, System.Nullable<bool> Abandoned, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCurrentCarts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/GetBestCustomers", ReplyAction="http://tempuri.org/INopService/GetBestCustomersResponse")]
        System.IAsyncResult BeginGetBestCustomers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetBestCustomers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/ExecuteNonQuery", ReplyAction="http://tempuri.org/INopService/ExecuteNonQueryResponse")]
        System.IAsyncResult BeginExecuteNonQuery(string sqlStatement, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState);
        
        void EndExecuteNonQuery(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/ExecuteScalar", ReplyAction="http://tempuri.org/INopService/ExecuteScalarResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.ProductDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<NopMobile.AppCore.NopAPI.AttributeDTO>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.AttributeDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.CategoryDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CountryDTO>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.CountryDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderDTO>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.OrderDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.AddressDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderItemDTO>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.OrderItemDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.CustomerDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<NopMobile.AppCore.NopAPI.AddressDTO>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CartItemDTO>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.CartItemDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<NopMobile.AppCore.NopAPI.KeywordDTO>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.KeywordDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.BestsellerDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.OrderError))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.AttributeControlType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.ProductSortingEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<byte[]>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.ShoppingCartType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.OrderStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.PaymentStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NopMobile.AppCore.NopAPI.ShippingStatus))]
        System.IAsyncResult BeginExecuteScalar(string sqlStatement, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState);
        
        object EndExecuteScalar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/DeleteOrders", ReplyAction="http://tempuri.org/INopService/DeleteOrdersResponse")]
        System.IAsyncResult BeginDeleteOrders(System.Collections.Generic.List<int> ordersId, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> EndDeleteOrders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/DeleteOrdersWithoutUser", ReplyAction="http://tempuri.org/INopService/DeleteOrdersWithoutUserResponse")]
        System.IAsyncResult BeginDeleteOrdersWithoutUser(System.Collections.Generic.List<int> ordersId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> EndDeleteOrdersWithoutUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/ChangeOrderStatus", ReplyAction="http://tempuri.org/INopService/ChangeOrderStatusResponse")]
        System.IAsyncResult BeginChangeOrderStatus(int id, NopMobile.AppCore.NopAPI.OrderStatus status, System.AsyncCallback callback, object asyncState);
        
        void EndChangeOrderStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/ChangePaymentStatus", ReplyAction="http://tempuri.org/INopService/ChangePaymentStatusResponse")]
        System.IAsyncResult BeginChangePaymentStatus(int id, NopMobile.AppCore.NopAPI.PaymentStatus status, System.AsyncCallback callback, object asyncState);
        
        void EndChangePaymentStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/ChangeShippingStatus", ReplyAction="http://tempuri.org/INopService/ChangeShippingStatusResponse")]
        System.IAsyncResult BeginChangeShippingStatus(int id, NopMobile.AppCore.NopAPI.ShippingStatus status, System.AsyncCallback callback, object asyncState);
        
        void EndChangeShippingStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/AddCommentToCustomer", ReplyAction="http://tempuri.org/INopService/AddCommentToCustomerResponse")]
        System.IAsyncResult BeginAddCommentToCustomer(string email, string comment, System.AsyncCallback callback, object asyncState);
        
        void EndAddCommentToCustomer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/AddOrderNote", ReplyAction="http://tempuri.org/INopService/AddOrderNoteResponse")]
        System.IAsyncResult BeginAddOrderNote(int orderId, string note, bool displayToCustomer, System.AsyncCallback callback, object asyncState);
        
        void EndAddOrderNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/UpdateOrderBillingInfo", ReplyAction="http://tempuri.org/INopService/UpdateOrderBillingInfoResponse")]
        System.IAsyncResult BeginUpdateOrderBillingInfo(
                    int orderId, 
                    string firstName, 
                    string lastName, 
                    string phone, 
                    string email, 
                    string fax, 
                    string company, 
                    string address1, 
                    string address2, 
                    string city, 
                    string region, 
                    string country, 
                    string postalCode, 
                    string usernameOrEmail, 
                    string userPassword, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        void EndUpdateOrderBillingInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/UpdateOrderShippingInfo", ReplyAction="http://tempuri.org/INopService/UpdateOrderShippingInfoResponse")]
        System.IAsyncResult BeginUpdateOrderShippingInfo(
                    int orderId, 
                    string firstName, 
                    string lastName, 
                    string phone, 
                    string email, 
                    string fax, 
                    string company, 
                    string address1, 
                    string address2, 
                    string city, 
                    string region, 
                    string country, 
                    string postalCode, 
                    string usernameOrEmail, 
                    string userPassword, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        void EndUpdateOrderShippingInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/SetOrderPaymentPaid", ReplyAction="http://tempuri.org/INopService/SetOrderPaymentPaidResponse")]
        System.IAsyncResult BeginSetOrderPaymentPaid(int orderId, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState);
        
        void EndSetOrderPaymentPaid(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/SetOrderPaymentPaidWithMethod", ReplyAction="http://tempuri.org/INopService/SetOrderPaymentPaidWithMethodResponse")]
        System.IAsyncResult BeginSetOrderPaymentPaidWithMethod(int orderId, string paymentMethodName, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState);
        
        void EndSetOrderPaymentPaidWithMethod(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/SetOrderPaymentPending", ReplyAction="http://tempuri.org/INopService/SetOrderPaymentPendingResponse")]
        System.IAsyncResult BeginSetOrderPaymentPending(int orderId, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState);
        
        void EndSetOrderPaymentPending(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/SetOrderPaymentRefund", ReplyAction="http://tempuri.org/INopService/SetOrderPaymentRefundResponse")]
        System.IAsyncResult BeginSetOrderPaymentRefund(int orderId, bool offline, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState);
        
        void EndSetOrderPaymentRefund(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INopService/SetOrdersStatusCanceled", ReplyAction="http://tempuri.org/INopService/SetOrdersStatusCanceledResponse")]
        System.IAsyncResult BeginSetOrdersStatusCanceled(System.Collections.Generic.List<int> ordersId, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> EndSetOrdersStatusCanceled(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INopServiceChannel : NopMobile.AppCore.NopAPI.INopService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckLoginClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckLoginClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FeaturedProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FeaturedProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecentlyViewedProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RecentlyViewedProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMainCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMainCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSubCategoriesFromParentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSubCategoriesFromParentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveFromCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveFromCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStoreUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStoreUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CategoryProductsSortedFilteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CategoryProductsSortedFilteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShippingMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ShippingMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PaymentMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PaymentMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetShippingFeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetShippingFeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTaxFeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTaxFeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPdfInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPdfInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CountryDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CountryDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddToCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddToCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NopMobile.AppCore.NopAPI.ProductDTO Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NopMobile.AppCore.NopAPI.ProductDTO)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllProductsFromCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllProductsFromCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCategoryByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCategoryByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NopMobile.AppCore.NopAPI.CategoryDTO Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NopMobile.AppCore.NopAPI.CategoryDTO)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductsByKeywordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductsByKeywordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrderByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrderByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NopMobile.AppCore.NopAPI.OrderDTO Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NopMobile.AppCore.NopAPI.OrderDTO)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPendingTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPendingTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCompleteTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompleteTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCancelledTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCancelledTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStoreNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStoreNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRegisteredUsersCountByTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRegisteredUsersCountByTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTotalSalesByTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTotalSalesByTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTotalPendingByReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTotalPendingByReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPendingOrdersCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPendingOrdersCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentCartsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentCartsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWishlistCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWishlistCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOnlineCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOnlineCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRegisteredCustomersCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRegisteredCustomersCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVendorsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVendorsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPopularKeywordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPopularKeywordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.KeywordDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.KeywordDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBestsellersByAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBestsellersByAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBestsellersByQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBestsellersByQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomersByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomersByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomersByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomersByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomersByFirstnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomersByFirstnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomersByLastnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomersByLastnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomersByFullnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomersByFullnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomersByCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomersByCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomersByPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomersByPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomersByPostalCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomersByPostalCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentCartsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentCartsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBestCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBestCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecuteScalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecuteScalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public object Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteOrdersWithoutUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteOrdersWithoutUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetOrdersStatusCanceledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetOrdersStatusCanceledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NopServiceClient : System.ServiceModel.ClientBase<NopMobile.AppCore.NopAPI.INopService>, NopMobile.AppCore.NopAPI.INopService {
        
        private BeginOperationDelegate onBeginCheckLoginDelegate;
        
        private EndOperationDelegate onEndCheckLoginDelegate;
        
        private System.Threading.SendOrPostCallback onCheckLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckLoginClientDelegate;
        
        private EndOperationDelegate onEndCheckLoginClientDelegate;
        
        private System.Threading.SendOrPostCallback onCheckLoginClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterClientDelegate;
        
        private EndOperationDelegate onEndRegisterClientDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginFeaturedProductsDelegate;
        
        private EndOperationDelegate onEndFeaturedProductsDelegate;
        
        private System.Threading.SendOrPostCallback onFeaturedProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecentlyViewedProductsDelegate;
        
        private EndOperationDelegate onEndRecentlyViewedProductsDelegate;
        
        private System.Threading.SendOrPostCallback onRecentlyViewedProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMainCategoriesDelegate;
        
        private EndOperationDelegate onEndGetMainCategoriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetMainCategoriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSubCategoriesFromParentDelegate;
        
        private EndOperationDelegate onEndGetSubCategoriesFromParentDelegate;
        
        private System.Threading.SendOrPostCallback onGetSubCategoriesFromParentCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveFromCartDelegate;
        
        private EndOperationDelegate onEndRemoveFromCartDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveFromCartCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStoreUrlDelegate;
        
        private EndOperationDelegate onEndGetStoreUrlDelegate;
        
        private System.Threading.SendOrPostCallback onGetStoreUrlCompletedDelegate;
        
        private BeginOperationDelegate onBeginCategoryProductsSortedFilteredDelegate;
        
        private EndOperationDelegate onEndCategoryProductsSortedFilteredDelegate;
        
        private System.Threading.SendOrPostCallback onCategoryProductsSortedFilteredCompletedDelegate;
        
        private BeginOperationDelegate onBeginShippingMethodsDelegate;
        
        private EndOperationDelegate onEndShippingMethodsDelegate;
        
        private System.Threading.SendOrPostCallback onShippingMethodsCompletedDelegate;
        
        private BeginOperationDelegate onBeginPaymentMethodsDelegate;
        
        private EndOperationDelegate onEndPaymentMethodsDelegate;
        
        private System.Threading.SendOrPostCallback onPaymentMethodsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetShippingFeesDelegate;
        
        private EndOperationDelegate onEndGetShippingFeesDelegate;
        
        private System.Threading.SendOrPostCallback onGetShippingFeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTaxFeesDelegate;
        
        private EndOperationDelegate onEndGetTaxFeesDelegate;
        
        private System.Threading.SendOrPostCallback onGetTaxFeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginReOrderDelegate;
        
        private EndOperationDelegate onEndReOrderDelegate;
        
        private System.Threading.SendOrPostCallback onReOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPdfInvoiceDelegate;
        
        private EndOperationDelegate onEndGetPdfInvoiceDelegate;
        
        private System.Threading.SendOrPostCallback onGetPdfInvoiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddAddressDelegate;
        
        private EndOperationDelegate onEndAddAddressDelegate;
        
        private System.Threading.SendOrPostCallback onAddAddressCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCountriesDelegate;
        
        private EndOperationDelegate onEndGetAllCountriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCountriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewOrderDelegate;
        
        private EndOperationDelegate onEndAddNewOrderDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddToCartDelegate;
        
        private EndOperationDelegate onEndAddToCartDelegate;
        
        private System.Threading.SendOrPostCallback onAddToCartCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductByIdDelegate;
        
        private EndOperationDelegate onEndGetProductByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllProductsFromCategoryDelegate;
        
        private EndOperationDelegate onEndGetAllProductsFromCategoryDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllProductsFromCategoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCategoryByIdDelegate;
        
        private EndOperationDelegate onEndGetCategoryByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetCategoryByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductsByKeywordsDelegate;
        
        private EndOperationDelegate onEndGetProductsByKeywordsDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductsByKeywordsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserNameDelegate;
        
        private EndOperationDelegate onEndGetUserNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrdersDelegate;
        
        private EndOperationDelegate onEndGetOrdersDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrdersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrderByIdDelegate;
        
        private EndOperationDelegate onEndGetOrderByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrderByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerListDelegate;
        
        private EndOperationDelegate onEndGetCustomerListDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPendingTotalDelegate;
        
        private EndOperationDelegate onEndGetPendingTotalDelegate;
        
        private System.Threading.SendOrPostCallback onGetPendingTotalCompletedDelegate;
        
        private BeginOperationDelegate onBeginEndSessionDelegate;
        
        private EndOperationDelegate onEndEndSessionDelegate;
        
        private System.Threading.SendOrPostCallback onEndSessionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompleteTotalDelegate;
        
        private EndOperationDelegate onEndGetCompleteTotalDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompleteTotalCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCancelledTotalDelegate;
        
        private EndOperationDelegate onEndGetCancelledTotalDelegate;
        
        private System.Threading.SendOrPostCallback onGetCancelledTotalCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStoreNameDelegate;
        
        private EndOperationDelegate onEndGetStoreNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetStoreNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRegisteredUsersCountByTimeDelegate;
        
        private EndOperationDelegate onEndGetRegisteredUsersCountByTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetRegisteredUsersCountByTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTotalSalesByTimeDelegate;
        
        private EndOperationDelegate onEndGetTotalSalesByTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetTotalSalesByTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTotalPendingByReasonDelegate;
        
        private EndOperationDelegate onEndGetTotalPendingByReasonDelegate;
        
        private System.Threading.SendOrPostCallback onGetTotalPendingByReasonCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPendingOrdersCountDelegate;
        
        private EndOperationDelegate onEndGetPendingOrdersCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetPendingOrdersCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentCartsCountDelegate;
        
        private EndOperationDelegate onEndGetCurrentCartsCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentCartsCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWishlistCountDelegate;
        
        private EndOperationDelegate onEndGetWishlistCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetWishlistCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOnlineCountDelegate;
        
        private EndOperationDelegate onEndGetOnlineCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetOnlineCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRegisteredCustomersCountDelegate;
        
        private EndOperationDelegate onEndGetRegisteredCustomersCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetRegisteredCustomersCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVendorsCountDelegate;
        
        private EndOperationDelegate onEndGetVendorsCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetVendorsCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPopularKeywordsDelegate;
        
        private EndOperationDelegate onEndGetPopularKeywordsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPopularKeywordsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBestsellersByAmountDelegate;
        
        private EndOperationDelegate onEndGetBestsellersByAmountDelegate;
        
        private System.Threading.SendOrPostCallback onGetBestsellersByAmountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBestsellersByQuantityDelegate;
        
        private EndOperationDelegate onEndGetBestsellersByQuantityDelegate;
        
        private System.Threading.SendOrPostCallback onGetBestsellersByQuantityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrencyDelegate;
        
        private EndOperationDelegate onEndGetCurrencyDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrencyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomersByEmailDelegate;
        
        private EndOperationDelegate onEndGetCustomersByEmailDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomersByEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomersByUsernameDelegate;
        
        private EndOperationDelegate onEndGetCustomersByUsernameDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomersByUsernameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomersByFirstnameDelegate;
        
        private EndOperationDelegate onEndGetCustomersByFirstnameDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomersByFirstnameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomersByLastnameDelegate;
        
        private EndOperationDelegate onEndGetCustomersByLastnameDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomersByLastnameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomersByFullnameDelegate;
        
        private EndOperationDelegate onEndGetCustomersByFullnameDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomersByFullnameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomersByCompanyDelegate;
        
        private EndOperationDelegate onEndGetCustomersByCompanyDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomersByCompanyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomersByPhoneDelegate;
        
        private EndOperationDelegate onEndGetCustomersByPhoneDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomersByPhoneCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomersByPostalCodeDelegate;
        
        private EndOperationDelegate onEndGetCustomersByPostalCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomersByPostalCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentCartsDelegate;
        
        private EndOperationDelegate onEndGetCurrentCartsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentCartsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBestCustomersDelegate;
        
        private EndOperationDelegate onEndGetBestCustomersDelegate;
        
        private System.Threading.SendOrPostCallback onGetBestCustomersCompletedDelegate;
        
        private BeginOperationDelegate onBeginExecuteNonQueryDelegate;
        
        private EndOperationDelegate onEndExecuteNonQueryDelegate;
        
        private System.Threading.SendOrPostCallback onExecuteNonQueryCompletedDelegate;
        
        private BeginOperationDelegate onBeginExecuteScalarDelegate;
        
        private EndOperationDelegate onEndExecuteScalarDelegate;
        
        private System.Threading.SendOrPostCallback onExecuteScalarCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteOrdersDelegate;
        
        private EndOperationDelegate onEndDeleteOrdersDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteOrdersCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteOrdersWithoutUserDelegate;
        
        private EndOperationDelegate onEndDeleteOrdersWithoutUserDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteOrdersWithoutUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeOrderStatusDelegate;
        
        private EndOperationDelegate onEndChangeOrderStatusDelegate;
        
        private System.Threading.SendOrPostCallback onChangeOrderStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangePaymentStatusDelegate;
        
        private EndOperationDelegate onEndChangePaymentStatusDelegate;
        
        private System.Threading.SendOrPostCallback onChangePaymentStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeShippingStatusDelegate;
        
        private EndOperationDelegate onEndChangeShippingStatusDelegate;
        
        private System.Threading.SendOrPostCallback onChangeShippingStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddCommentToCustomerDelegate;
        
        private EndOperationDelegate onEndAddCommentToCustomerDelegate;
        
        private System.Threading.SendOrPostCallback onAddCommentToCustomerCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddOrderNoteDelegate;
        
        private EndOperationDelegate onEndAddOrderNoteDelegate;
        
        private System.Threading.SendOrPostCallback onAddOrderNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateOrderBillingInfoDelegate;
        
        private EndOperationDelegate onEndUpdateOrderBillingInfoDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateOrderBillingInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateOrderShippingInfoDelegate;
        
        private EndOperationDelegate onEndUpdateOrderShippingInfoDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateOrderShippingInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetOrderPaymentPaidDelegate;
        
        private EndOperationDelegate onEndSetOrderPaymentPaidDelegate;
        
        private System.Threading.SendOrPostCallback onSetOrderPaymentPaidCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetOrderPaymentPaidWithMethodDelegate;
        
        private EndOperationDelegate onEndSetOrderPaymentPaidWithMethodDelegate;
        
        private System.Threading.SendOrPostCallback onSetOrderPaymentPaidWithMethodCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetOrderPaymentPendingDelegate;
        
        private EndOperationDelegate onEndSetOrderPaymentPendingDelegate;
        
        private System.Threading.SendOrPostCallback onSetOrderPaymentPendingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetOrderPaymentRefundDelegate;
        
        private EndOperationDelegate onEndSetOrderPaymentRefundDelegate;
        
        private System.Threading.SendOrPostCallback onSetOrderPaymentRefundCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetOrdersStatusCanceledDelegate;
        
        private EndOperationDelegate onEndSetOrdersStatusCanceledDelegate;
        
        private System.Threading.SendOrPostCallback onSetOrdersStatusCanceledCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public NopServiceClient() : 
                base(NopServiceClient.GetDefaultBinding(), NopServiceClient.GetDefaultEndpointAddress()) {
        }
        
        public NopServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(NopServiceClient.GetBindingForEndpoint(endpointConfiguration), NopServiceClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public NopServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(NopServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public NopServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(NopServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public NopServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<CheckLoginCompletedEventArgs> CheckLoginCompleted;
        
        public event System.EventHandler<CheckLoginClientCompletedEventArgs> CheckLoginClientCompleted;
        
        public event System.EventHandler<RegisterClientCompletedEventArgs> RegisterClientCompleted;
        
        public event System.EventHandler<FeaturedProductsCompletedEventArgs> FeaturedProductsCompleted;
        
        public event System.EventHandler<RecentlyViewedProductsCompletedEventArgs> RecentlyViewedProductsCompleted;
        
        public event System.EventHandler<GetMainCategoriesCompletedEventArgs> GetMainCategoriesCompleted;
        
        public event System.EventHandler<GetSubCategoriesFromParentCompletedEventArgs> GetSubCategoriesFromParentCompleted;
        
        public event System.EventHandler<RemoveFromCartCompletedEventArgs> RemoveFromCartCompleted;
        
        public event System.EventHandler<GetStoreUrlCompletedEventArgs> GetStoreUrlCompleted;
        
        public event System.EventHandler<CategoryProductsSortedFilteredCompletedEventArgs> CategoryProductsSortedFilteredCompleted;
        
        public event System.EventHandler<ShippingMethodsCompletedEventArgs> ShippingMethodsCompleted;
        
        public event System.EventHandler<PaymentMethodsCompletedEventArgs> PaymentMethodsCompleted;
        
        public event System.EventHandler<GetShippingFeesCompletedEventArgs> GetShippingFeesCompleted;
        
        public event System.EventHandler<GetTaxFeesCompletedEventArgs> GetTaxFeesCompleted;
        
        public event System.EventHandler<ReOrderCompletedEventArgs> ReOrderCompleted;
        
        public event System.EventHandler<GetPdfInvoiceCompletedEventArgs> GetPdfInvoiceCompleted;
        
        public event System.EventHandler<AddAddressCompletedEventArgs> AddAddressCompleted;
        
        public event System.EventHandler<GetAllCountriesCompletedEventArgs> GetAllCountriesCompleted;
        
        public event System.EventHandler<AddNewOrderCompletedEventArgs> AddNewOrderCompleted;
        
        public event System.EventHandler<AddToCartCompletedEventArgs> AddToCartCompleted;
        
        public event System.EventHandler<GetProductByIdCompletedEventArgs> GetProductByIdCompleted;
        
        public event System.EventHandler<GetAllProductsFromCategoryCompletedEventArgs> GetAllProductsFromCategoryCompleted;
        
        public event System.EventHandler<GetCategoryByIdCompletedEventArgs> GetCategoryByIdCompleted;
        
        public event System.EventHandler<GetProductsByKeywordsCompletedEventArgs> GetProductsByKeywordsCompleted;
        
        public event System.EventHandler<GetUserNameCompletedEventArgs> GetUserNameCompleted;
        
        public event System.EventHandler<GetOrdersCompletedEventArgs> GetOrdersCompleted;
        
        public event System.EventHandler<GetOrderByIdCompletedEventArgs> GetOrderByIdCompleted;
        
        public event System.EventHandler<GetCustomerListCompletedEventArgs> GetCustomerListCompleted;
        
        public event System.EventHandler<GetPendingTotalCompletedEventArgs> GetPendingTotalCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EndSessionCompleted;
        
        public event System.EventHandler<GetCompleteTotalCompletedEventArgs> GetCompleteTotalCompleted;
        
        public event System.EventHandler<GetCancelledTotalCompletedEventArgs> GetCancelledTotalCompleted;
        
        public event System.EventHandler<GetStoreNameCompletedEventArgs> GetStoreNameCompleted;
        
        public event System.EventHandler<GetRegisteredUsersCountByTimeCompletedEventArgs> GetRegisteredUsersCountByTimeCompleted;
        
        public event System.EventHandler<GetTotalSalesByTimeCompletedEventArgs> GetTotalSalesByTimeCompleted;
        
        public event System.EventHandler<GetTotalPendingByReasonCompletedEventArgs> GetTotalPendingByReasonCompleted;
        
        public event System.EventHandler<GetPendingOrdersCountCompletedEventArgs> GetPendingOrdersCountCompleted;
        
        public event System.EventHandler<GetCurrentCartsCountCompletedEventArgs> GetCurrentCartsCountCompleted;
        
        public event System.EventHandler<GetWishlistCountCompletedEventArgs> GetWishlistCountCompleted;
        
        public event System.EventHandler<GetOnlineCountCompletedEventArgs> GetOnlineCountCompleted;
        
        public event System.EventHandler<GetRegisteredCustomersCountCompletedEventArgs> GetRegisteredCustomersCountCompleted;
        
        public event System.EventHandler<GetVendorsCountCompletedEventArgs> GetVendorsCountCompleted;
        
        public event System.EventHandler<GetPopularKeywordsCompletedEventArgs> GetPopularKeywordsCompleted;
        
        public event System.EventHandler<GetBestsellersByAmountCompletedEventArgs> GetBestsellersByAmountCompleted;
        
        public event System.EventHandler<GetBestsellersByQuantityCompletedEventArgs> GetBestsellersByQuantityCompleted;
        
        public event System.EventHandler<GetCurrencyCompletedEventArgs> GetCurrencyCompleted;
        
        public event System.EventHandler<GetCustomersByEmailCompletedEventArgs> GetCustomersByEmailCompleted;
        
        public event System.EventHandler<GetCustomersByUsernameCompletedEventArgs> GetCustomersByUsernameCompleted;
        
        public event System.EventHandler<GetCustomersByFirstnameCompletedEventArgs> GetCustomersByFirstnameCompleted;
        
        public event System.EventHandler<GetCustomersByLastnameCompletedEventArgs> GetCustomersByLastnameCompleted;
        
        public event System.EventHandler<GetCustomersByFullnameCompletedEventArgs> GetCustomersByFullnameCompleted;
        
        public event System.EventHandler<GetCustomersByCompanyCompletedEventArgs> GetCustomersByCompanyCompleted;
        
        public event System.EventHandler<GetCustomersByPhoneCompletedEventArgs> GetCustomersByPhoneCompleted;
        
        public event System.EventHandler<GetCustomersByPostalCodeCompletedEventArgs> GetCustomersByPostalCodeCompleted;
        
        public event System.EventHandler<GetCurrentCartsCompletedEventArgs> GetCurrentCartsCompleted;
        
        public event System.EventHandler<GetBestCustomersCompletedEventArgs> GetBestCustomersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ExecuteNonQueryCompleted;
        
        public event System.EventHandler<ExecuteScalarCompletedEventArgs> ExecuteScalarCompleted;
        
        public event System.EventHandler<DeleteOrdersCompletedEventArgs> DeleteOrdersCompleted;
        
        public event System.EventHandler<DeleteOrdersWithoutUserCompletedEventArgs> DeleteOrdersWithoutUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ChangeOrderStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ChangePaymentStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ChangeShippingStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddCommentToCustomerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddOrderNoteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateOrderBillingInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateOrderShippingInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetOrderPaymentPaidCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetOrderPaymentPaidWithMethodCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetOrderPaymentPendingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetOrderPaymentRefundCompleted;
        
        public event System.EventHandler<SetOrdersStatusCanceledCompletedEventArgs> SetOrdersStatusCanceledCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginCheckLogin(string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckLogin(usernameOrEmail, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool NopMobile.AppCore.NopAPI.INopService.EndCheckLogin(System.IAsyncResult result) {
            return base.Channel.EndCheckLogin(result);
        }
        
        private System.IAsyncResult OnBeginCheckLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string usernameOrEmail = ((string)(inValues[0]));
            string userPassword = ((string)(inValues[1]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginCheckLogin(usernameOrEmail, userPassword, callback, asyncState);
        }
        
        private object[] OnEndCheckLogin(System.IAsyncResult result) {
            bool retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndCheckLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckLoginCompleted(object state) {
            if ((this.CheckLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckLoginCompleted(this, new CheckLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckLoginAsync(string usernameOrEmail, string userPassword) {
            this.CheckLoginAsync(usernameOrEmail, userPassword, null);
        }
        
        public void CheckLoginAsync(string usernameOrEmail, string userPassword, object userState) {
            if ((this.onBeginCheckLoginDelegate == null)) {
                this.onBeginCheckLoginDelegate = new BeginOperationDelegate(this.OnBeginCheckLogin);
            }
            if ((this.onEndCheckLoginDelegate == null)) {
                this.onEndCheckLoginDelegate = new EndOperationDelegate(this.OnEndCheckLogin);
            }
            if ((this.onCheckLoginCompletedDelegate == null)) {
                this.onCheckLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckLoginCompleted);
            }
            base.InvokeAsync(this.onBeginCheckLoginDelegate, new object[] {
                        usernameOrEmail,
                        userPassword}, this.onEndCheckLoginDelegate, this.onCheckLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginCheckLoginClient(string UsernameOrEmail, string UserPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckLoginClient(UsernameOrEmail, UserPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool NopMobile.AppCore.NopAPI.INopService.EndCheckLoginClient(System.IAsyncResult result) {
            return base.Channel.EndCheckLoginClient(result);
        }
        
        private System.IAsyncResult OnBeginCheckLoginClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UsernameOrEmail = ((string)(inValues[0]));
            string UserPassword = ((string)(inValues[1]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginCheckLoginClient(UsernameOrEmail, UserPassword, callback, asyncState);
        }
        
        private object[] OnEndCheckLoginClient(System.IAsyncResult result) {
            bool retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndCheckLoginClient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckLoginClientCompleted(object state) {
            if ((this.CheckLoginClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckLoginClientCompleted(this, new CheckLoginClientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckLoginClientAsync(string UsernameOrEmail, string UserPassword) {
            this.CheckLoginClientAsync(UsernameOrEmail, UserPassword, null);
        }
        
        public void CheckLoginClientAsync(string UsernameOrEmail, string UserPassword, object userState) {
            if ((this.onBeginCheckLoginClientDelegate == null)) {
                this.onBeginCheckLoginClientDelegate = new BeginOperationDelegate(this.OnBeginCheckLoginClient);
            }
            if ((this.onEndCheckLoginClientDelegate == null)) {
                this.onEndCheckLoginClientDelegate = new EndOperationDelegate(this.OnEndCheckLoginClient);
            }
            if ((this.onCheckLoginClientCompletedDelegate == null)) {
                this.onCheckLoginClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckLoginClientCompleted);
            }
            base.InvokeAsync(this.onBeginCheckLoginClientDelegate, new object[] {
                        UsernameOrEmail,
                        UserPassword}, this.onEndCheckLoginClientDelegate, this.onCheckLoginClientCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginRegisterClient(bool Male, string Firstname, string Lastname, System.DateTime Birthday, string Email, string Company, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterClient(Male, Firstname, Lastname, Birthday, Email, Company, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool NopMobile.AppCore.NopAPI.INopService.EndRegisterClient(System.IAsyncResult result) {
            return base.Channel.EndRegisterClient(result);
        }
        
        private System.IAsyncResult OnBeginRegisterClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool Male = ((bool)(inValues[0]));
            string Firstname = ((string)(inValues[1]));
            string Lastname = ((string)(inValues[2]));
            System.DateTime Birthday = ((System.DateTime)(inValues[3]));
            string Email = ((string)(inValues[4]));
            string Company = ((string)(inValues[5]));
            string Password = ((string)(inValues[6]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginRegisterClient(Male, Firstname, Lastname, Birthday, Email, Company, Password, callback, asyncState);
        }
        
        private object[] OnEndRegisterClient(System.IAsyncResult result) {
            bool retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndRegisterClient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterClientCompleted(object state) {
            if ((this.RegisterClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterClientCompleted(this, new RegisterClientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterClientAsync(bool Male, string Firstname, string Lastname, System.DateTime Birthday, string Email, string Company, string Password) {
            this.RegisterClientAsync(Male, Firstname, Lastname, Birthday, Email, Company, Password, null);
        }
        
        public void RegisterClientAsync(bool Male, string Firstname, string Lastname, System.DateTime Birthday, string Email, string Company, string Password, object userState) {
            if ((this.onBeginRegisterClientDelegate == null)) {
                this.onBeginRegisterClientDelegate = new BeginOperationDelegate(this.OnBeginRegisterClient);
            }
            if ((this.onEndRegisterClientDelegate == null)) {
                this.onEndRegisterClientDelegate = new EndOperationDelegate(this.OnEndRegisterClient);
            }
            if ((this.onRegisterClientCompletedDelegate == null)) {
                this.onRegisterClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterClientCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterClientDelegate, new object[] {
                        Male,
                        Firstname,
                        Lastname,
                        Birthday,
                        Email,
                        Company,
                        Password}, this.onEndRegisterClientDelegate, this.onRegisterClientCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginFeaturedProducts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFeaturedProducts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> NopMobile.AppCore.NopAPI.INopService.EndFeaturedProducts(System.IAsyncResult result) {
            return base.Channel.EndFeaturedProducts(result);
        }
        
        private System.IAsyncResult OnBeginFeaturedProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginFeaturedProducts(callback, asyncState);
        }
        
        private object[] OnEndFeaturedProducts(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndFeaturedProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFeaturedProductsCompleted(object state) {
            if ((this.FeaturedProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FeaturedProductsCompleted(this, new FeaturedProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FeaturedProductsAsync() {
            this.FeaturedProductsAsync(null);
        }
        
        public void FeaturedProductsAsync(object userState) {
            if ((this.onBeginFeaturedProductsDelegate == null)) {
                this.onBeginFeaturedProductsDelegate = new BeginOperationDelegate(this.OnBeginFeaturedProducts);
            }
            if ((this.onEndFeaturedProductsDelegate == null)) {
                this.onEndFeaturedProductsDelegate = new EndOperationDelegate(this.OnEndFeaturedProducts);
            }
            if ((this.onFeaturedProductsCompletedDelegate == null)) {
                this.onFeaturedProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFeaturedProductsCompleted);
            }
            base.InvokeAsync(this.onBeginFeaturedProductsDelegate, null, this.onEndFeaturedProductsDelegate, this.onFeaturedProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginRecentlyViewedProducts(int number, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecentlyViewedProducts(number, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> NopMobile.AppCore.NopAPI.INopService.EndRecentlyViewedProducts(System.IAsyncResult result) {
            return base.Channel.EndRecentlyViewedProducts(result);
        }
        
        private System.IAsyncResult OnBeginRecentlyViewedProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int number = ((int)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginRecentlyViewedProducts(number, callback, asyncState);
        }
        
        private object[] OnEndRecentlyViewedProducts(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndRecentlyViewedProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRecentlyViewedProductsCompleted(object state) {
            if ((this.RecentlyViewedProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecentlyViewedProductsCompleted(this, new RecentlyViewedProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecentlyViewedProductsAsync(int number) {
            this.RecentlyViewedProductsAsync(number, null);
        }
        
        public void RecentlyViewedProductsAsync(int number, object userState) {
            if ((this.onBeginRecentlyViewedProductsDelegate == null)) {
                this.onBeginRecentlyViewedProductsDelegate = new BeginOperationDelegate(this.OnBeginRecentlyViewedProducts);
            }
            if ((this.onEndRecentlyViewedProductsDelegate == null)) {
                this.onEndRecentlyViewedProductsDelegate = new EndOperationDelegate(this.OnEndRecentlyViewedProducts);
            }
            if ((this.onRecentlyViewedProductsCompletedDelegate == null)) {
                this.onRecentlyViewedProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecentlyViewedProductsCompleted);
            }
            base.InvokeAsync(this.onBeginRecentlyViewedProductsDelegate, new object[] {
                        number}, this.onEndRecentlyViewedProductsDelegate, this.onRecentlyViewedProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetMainCategories(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMainCategories(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO> NopMobile.AppCore.NopAPI.INopService.EndGetMainCategories(System.IAsyncResult result) {
            return base.Channel.EndGetMainCategories(result);
        }
        
        private System.IAsyncResult OnBeginGetMainCategories(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetMainCategories(callback, asyncState);
        }
        
        private object[] OnEndGetMainCategories(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetMainCategories(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMainCategoriesCompleted(object state) {
            if ((this.GetMainCategoriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMainCategoriesCompleted(this, new GetMainCategoriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMainCategoriesAsync() {
            this.GetMainCategoriesAsync(null);
        }
        
        public void GetMainCategoriesAsync(object userState) {
            if ((this.onBeginGetMainCategoriesDelegate == null)) {
                this.onBeginGetMainCategoriesDelegate = new BeginOperationDelegate(this.OnBeginGetMainCategories);
            }
            if ((this.onEndGetMainCategoriesDelegate == null)) {
                this.onEndGetMainCategoriesDelegate = new EndOperationDelegate(this.OnEndGetMainCategories);
            }
            if ((this.onGetMainCategoriesCompletedDelegate == null)) {
                this.onGetMainCategoriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMainCategoriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetMainCategoriesDelegate, null, this.onEndGetMainCategoriesDelegate, this.onGetMainCategoriesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetSubCategoriesFromParent(int Id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSubCategoriesFromParent(Id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO> NopMobile.AppCore.NopAPI.INopService.EndGetSubCategoriesFromParent(System.IAsyncResult result) {
            return base.Channel.EndGetSubCategoriesFromParent(result);
        }
        
        private System.IAsyncResult OnBeginGetSubCategoriesFromParent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Id = ((int)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetSubCategoriesFromParent(Id, callback, asyncState);
        }
        
        private object[] OnEndGetSubCategoriesFromParent(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetSubCategoriesFromParent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSubCategoriesFromParentCompleted(object state) {
            if ((this.GetSubCategoriesFromParentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSubCategoriesFromParentCompleted(this, new GetSubCategoriesFromParentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSubCategoriesFromParentAsync(int Id) {
            this.GetSubCategoriesFromParentAsync(Id, null);
        }
        
        public void GetSubCategoriesFromParentAsync(int Id, object userState) {
            if ((this.onBeginGetSubCategoriesFromParentDelegate == null)) {
                this.onBeginGetSubCategoriesFromParentDelegate = new BeginOperationDelegate(this.OnBeginGetSubCategoriesFromParent);
            }
            if ((this.onEndGetSubCategoriesFromParentDelegate == null)) {
                this.onEndGetSubCategoriesFromParentDelegate = new EndOperationDelegate(this.OnEndGetSubCategoriesFromParent);
            }
            if ((this.onGetSubCategoriesFromParentCompletedDelegate == null)) {
                this.onGetSubCategoriesFromParentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSubCategoriesFromParentCompleted);
            }
            base.InvokeAsync(this.onBeginGetSubCategoriesFromParentDelegate, new object[] {
                        Id}, this.onEndGetSubCategoriesFromParentDelegate, this.onGetSubCategoriesFromParentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginRemoveFromCart(string Username, int CartItemId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveFromCart(Username, CartItemId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool NopMobile.AppCore.NopAPI.INopService.EndRemoveFromCart(System.IAsyncResult result) {
            return base.Channel.EndRemoveFromCart(result);
        }
        
        private System.IAsyncResult OnBeginRemoveFromCart(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Username = ((string)(inValues[0]));
            int CartItemId = ((int)(inValues[1]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginRemoveFromCart(Username, CartItemId, callback, asyncState);
        }
        
        private object[] OnEndRemoveFromCart(System.IAsyncResult result) {
            bool retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndRemoveFromCart(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveFromCartCompleted(object state) {
            if ((this.RemoveFromCartCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveFromCartCompleted(this, new RemoveFromCartCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveFromCartAsync(string Username, int CartItemId) {
            this.RemoveFromCartAsync(Username, CartItemId, null);
        }
        
        public void RemoveFromCartAsync(string Username, int CartItemId, object userState) {
            if ((this.onBeginRemoveFromCartDelegate == null)) {
                this.onBeginRemoveFromCartDelegate = new BeginOperationDelegate(this.OnBeginRemoveFromCart);
            }
            if ((this.onEndRemoveFromCartDelegate == null)) {
                this.onEndRemoveFromCartDelegate = new EndOperationDelegate(this.OnEndRemoveFromCart);
            }
            if ((this.onRemoveFromCartCompletedDelegate == null)) {
                this.onRemoveFromCartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveFromCartCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveFromCartDelegate, new object[] {
                        Username,
                        CartItemId}, this.onEndRemoveFromCartDelegate, this.onRemoveFromCartCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetStoreUrl(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStoreUrl(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string NopMobile.AppCore.NopAPI.INopService.EndGetStoreUrl(System.IAsyncResult result) {
            return base.Channel.EndGetStoreUrl(result);
        }
        
        private System.IAsyncResult OnBeginGetStoreUrl(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetStoreUrl(callback, asyncState);
        }
        
        private object[] OnEndGetStoreUrl(System.IAsyncResult result) {
            string retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetStoreUrl(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStoreUrlCompleted(object state) {
            if ((this.GetStoreUrlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStoreUrlCompleted(this, new GetStoreUrlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStoreUrlAsync() {
            this.GetStoreUrlAsync(null);
        }
        
        public void GetStoreUrlAsync(object userState) {
            if ((this.onBeginGetStoreUrlDelegate == null)) {
                this.onBeginGetStoreUrlDelegate = new BeginOperationDelegate(this.OnBeginGetStoreUrl);
            }
            if ((this.onEndGetStoreUrlDelegate == null)) {
                this.onEndGetStoreUrlDelegate = new EndOperationDelegate(this.OnEndGetStoreUrl);
            }
            if ((this.onGetStoreUrlCompletedDelegate == null)) {
                this.onGetStoreUrlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStoreUrlCompleted);
            }
            base.InvokeAsync(this.onBeginGetStoreUrlDelegate, null, this.onEndGetStoreUrlDelegate, this.onGetStoreUrlCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginCategoryProductsSortedFiltered(int CatId, bool Sorted, bool Filtered, NopMobile.AppCore.NopAPI.ProductSortingEnum Sorting, decimal Max, decimal Min, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCategoryProductsSortedFiltered(CatId, Sorted, Filtered, Sorting, Max, Min, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> NopMobile.AppCore.NopAPI.INopService.EndCategoryProductsSortedFiltered(System.IAsyncResult result) {
            return base.Channel.EndCategoryProductsSortedFiltered(result);
        }
        
        private System.IAsyncResult OnBeginCategoryProductsSortedFiltered(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CatId = ((int)(inValues[0]));
            bool Sorted = ((bool)(inValues[1]));
            bool Filtered = ((bool)(inValues[2]));
            NopMobile.AppCore.NopAPI.ProductSortingEnum Sorting = ((NopMobile.AppCore.NopAPI.ProductSortingEnum)(inValues[3]));
            decimal Max = ((decimal)(inValues[4]));
            decimal Min = ((decimal)(inValues[5]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginCategoryProductsSortedFiltered(CatId, Sorted, Filtered, Sorting, Max, Min, callback, asyncState);
        }
        
        private object[] OnEndCategoryProductsSortedFiltered(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndCategoryProductsSortedFiltered(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCategoryProductsSortedFilteredCompleted(object state) {
            if ((this.CategoryProductsSortedFilteredCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CategoryProductsSortedFilteredCompleted(this, new CategoryProductsSortedFilteredCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CategoryProductsSortedFilteredAsync(int CatId, bool Sorted, bool Filtered, NopMobile.AppCore.NopAPI.ProductSortingEnum Sorting, decimal Max, decimal Min) {
            this.CategoryProductsSortedFilteredAsync(CatId, Sorted, Filtered, Sorting, Max, Min, null);
        }
        
        public void CategoryProductsSortedFilteredAsync(int CatId, bool Sorted, bool Filtered, NopMobile.AppCore.NopAPI.ProductSortingEnum Sorting, decimal Max, decimal Min, object userState) {
            if ((this.onBeginCategoryProductsSortedFilteredDelegate == null)) {
                this.onBeginCategoryProductsSortedFilteredDelegate = new BeginOperationDelegate(this.OnBeginCategoryProductsSortedFiltered);
            }
            if ((this.onEndCategoryProductsSortedFilteredDelegate == null)) {
                this.onEndCategoryProductsSortedFilteredDelegate = new EndOperationDelegate(this.OnEndCategoryProductsSortedFiltered);
            }
            if ((this.onCategoryProductsSortedFilteredCompletedDelegate == null)) {
                this.onCategoryProductsSortedFilteredCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCategoryProductsSortedFilteredCompleted);
            }
            base.InvokeAsync(this.onBeginCategoryProductsSortedFilteredDelegate, new object[] {
                        CatId,
                        Sorted,
                        Filtered,
                        Sorting,
                        Max,
                        Min}, this.onEndCategoryProductsSortedFilteredDelegate, this.onCategoryProductsSortedFilteredCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginShippingMethods(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginShippingMethods(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> NopMobile.AppCore.NopAPI.INopService.EndShippingMethods(System.IAsyncResult result) {
            return base.Channel.EndShippingMethods(result);
        }
        
        private System.IAsyncResult OnBeginShippingMethods(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginShippingMethods(callback, asyncState);
        }
        
        private object[] OnEndShippingMethods(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndShippingMethods(result);
            return new object[] {
                    retVal};
        }
        
        private void OnShippingMethodsCompleted(object state) {
            if ((this.ShippingMethodsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ShippingMethodsCompleted(this, new ShippingMethodsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ShippingMethodsAsync() {
            this.ShippingMethodsAsync(null);
        }
        
        public void ShippingMethodsAsync(object userState) {
            if ((this.onBeginShippingMethodsDelegate == null)) {
                this.onBeginShippingMethodsDelegate = new BeginOperationDelegate(this.OnBeginShippingMethods);
            }
            if ((this.onEndShippingMethodsDelegate == null)) {
                this.onEndShippingMethodsDelegate = new EndOperationDelegate(this.OnEndShippingMethods);
            }
            if ((this.onShippingMethodsCompletedDelegate == null)) {
                this.onShippingMethodsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnShippingMethodsCompleted);
            }
            base.InvokeAsync(this.onBeginShippingMethodsDelegate, null, this.onEndShippingMethodsDelegate, this.onShippingMethodsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginPaymentMethods(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPaymentMethods(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> NopMobile.AppCore.NopAPI.INopService.EndPaymentMethods(System.IAsyncResult result) {
            return base.Channel.EndPaymentMethods(result);
        }
        
        private System.IAsyncResult OnBeginPaymentMethods(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginPaymentMethods(callback, asyncState);
        }
        
        private object[] OnEndPaymentMethods(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndPaymentMethods(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPaymentMethodsCompleted(object state) {
            if ((this.PaymentMethodsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PaymentMethodsCompleted(this, new PaymentMethodsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PaymentMethodsAsync() {
            this.PaymentMethodsAsync(null);
        }
        
        public void PaymentMethodsAsync(object userState) {
            if ((this.onBeginPaymentMethodsDelegate == null)) {
                this.onBeginPaymentMethodsDelegate = new BeginOperationDelegate(this.OnBeginPaymentMethods);
            }
            if ((this.onEndPaymentMethodsDelegate == null)) {
                this.onEndPaymentMethodsDelegate = new EndOperationDelegate(this.OnEndPaymentMethods);
            }
            if ((this.onPaymentMethodsCompletedDelegate == null)) {
                this.onPaymentMethodsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPaymentMethodsCompleted);
            }
            base.InvokeAsync(this.onBeginPaymentMethodsDelegate, null, this.onEndPaymentMethodsDelegate, this.onPaymentMethodsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetShippingFees(int CustomerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetShippingFees(CustomerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        decimal NopMobile.AppCore.NopAPI.INopService.EndGetShippingFees(System.IAsyncResult result) {
            return base.Channel.EndGetShippingFees(result);
        }
        
        private System.IAsyncResult OnBeginGetShippingFees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CustomerId = ((int)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetShippingFees(CustomerId, callback, asyncState);
        }
        
        private object[] OnEndGetShippingFees(System.IAsyncResult result) {
            decimal retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetShippingFees(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetShippingFeesCompleted(object state) {
            if ((this.GetShippingFeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetShippingFeesCompleted(this, new GetShippingFeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetShippingFeesAsync(int CustomerId) {
            this.GetShippingFeesAsync(CustomerId, null);
        }
        
        public void GetShippingFeesAsync(int CustomerId, object userState) {
            if ((this.onBeginGetShippingFeesDelegate == null)) {
                this.onBeginGetShippingFeesDelegate = new BeginOperationDelegate(this.OnBeginGetShippingFees);
            }
            if ((this.onEndGetShippingFeesDelegate == null)) {
                this.onEndGetShippingFeesDelegate = new EndOperationDelegate(this.OnEndGetShippingFees);
            }
            if ((this.onGetShippingFeesCompletedDelegate == null)) {
                this.onGetShippingFeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetShippingFeesCompleted);
            }
            base.InvokeAsync(this.onBeginGetShippingFeesDelegate, new object[] {
                        CustomerId}, this.onEndGetShippingFeesDelegate, this.onGetShippingFeesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetTaxFees(int CustomerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTaxFees(CustomerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        decimal NopMobile.AppCore.NopAPI.INopService.EndGetTaxFees(System.IAsyncResult result) {
            return base.Channel.EndGetTaxFees(result);
        }
        
        private System.IAsyncResult OnBeginGetTaxFees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CustomerId = ((int)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetTaxFees(CustomerId, callback, asyncState);
        }
        
        private object[] OnEndGetTaxFees(System.IAsyncResult result) {
            decimal retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetTaxFees(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTaxFeesCompleted(object state) {
            if ((this.GetTaxFeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTaxFeesCompleted(this, new GetTaxFeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTaxFeesAsync(int CustomerId) {
            this.GetTaxFeesAsync(CustomerId, null);
        }
        
        public void GetTaxFeesAsync(int CustomerId, object userState) {
            if ((this.onBeginGetTaxFeesDelegate == null)) {
                this.onBeginGetTaxFeesDelegate = new BeginOperationDelegate(this.OnBeginGetTaxFees);
            }
            if ((this.onEndGetTaxFeesDelegate == null)) {
                this.onEndGetTaxFeesDelegate = new EndOperationDelegate(this.OnEndGetTaxFees);
            }
            if ((this.onGetTaxFeesCompletedDelegate == null)) {
                this.onGetTaxFeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTaxFeesCompleted);
            }
            base.InvokeAsync(this.onBeginGetTaxFeesDelegate, new object[] {
                        CustomerId}, this.onEndGetTaxFeesDelegate, this.onGetTaxFeesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginReOrder(int OrderId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReOrder(OrderId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool NopMobile.AppCore.NopAPI.INopService.EndReOrder(System.IAsyncResult result) {
            return base.Channel.EndReOrder(result);
        }
        
        private System.IAsyncResult OnBeginReOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int OrderId = ((int)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginReOrder(OrderId, callback, asyncState);
        }
        
        private object[] OnEndReOrder(System.IAsyncResult result) {
            bool retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndReOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReOrderCompleted(object state) {
            if ((this.ReOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReOrderCompleted(this, new ReOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReOrderAsync(int OrderId) {
            this.ReOrderAsync(OrderId, null);
        }
        
        public void ReOrderAsync(int OrderId, object userState) {
            if ((this.onBeginReOrderDelegate == null)) {
                this.onBeginReOrderDelegate = new BeginOperationDelegate(this.OnBeginReOrder);
            }
            if ((this.onEndReOrderDelegate == null)) {
                this.onEndReOrderDelegate = new EndOperationDelegate(this.OnEndReOrder);
            }
            if ((this.onReOrderCompletedDelegate == null)) {
                this.onReOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReOrderCompleted);
            }
            base.InvokeAsync(this.onBeginReOrderDelegate, new object[] {
                        OrderId}, this.onEndReOrderDelegate, this.onReOrderCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetPdfInvoice(int OrderId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPdfInvoice(OrderId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string NopMobile.AppCore.NopAPI.INopService.EndGetPdfInvoice(System.IAsyncResult result) {
            return base.Channel.EndGetPdfInvoice(result);
        }
        
        private System.IAsyncResult OnBeginGetPdfInvoice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int OrderId = ((int)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetPdfInvoice(OrderId, callback, asyncState);
        }
        
        private object[] OnEndGetPdfInvoice(System.IAsyncResult result) {
            string retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetPdfInvoice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPdfInvoiceCompleted(object state) {
            if ((this.GetPdfInvoiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPdfInvoiceCompleted(this, new GetPdfInvoiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPdfInvoiceAsync(int OrderId) {
            this.GetPdfInvoiceAsync(OrderId, null);
        }
        
        public void GetPdfInvoiceAsync(int OrderId, object userState) {
            if ((this.onBeginGetPdfInvoiceDelegate == null)) {
                this.onBeginGetPdfInvoiceDelegate = new BeginOperationDelegate(this.OnBeginGetPdfInvoice);
            }
            if ((this.onEndGetPdfInvoiceDelegate == null)) {
                this.onEndGetPdfInvoiceDelegate = new EndOperationDelegate(this.OnEndGetPdfInvoice);
            }
            if ((this.onGetPdfInvoiceCompletedDelegate == null)) {
                this.onGetPdfInvoiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPdfInvoiceCompleted);
            }
            base.InvokeAsync(this.onBeginGetPdfInvoiceDelegate, new object[] {
                        OrderId}, this.onEndGetPdfInvoiceDelegate, this.onGetPdfInvoiceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginAddAddress(string Email, string Firstname, string Lastname, string CountryName, string Province, string City, string Street, string PostalCode, string PhoneNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddAddress(Email, Firstname, Lastname, CountryName, Province, City, Street, PostalCode, PhoneNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool NopMobile.AppCore.NopAPI.INopService.EndAddAddress(System.IAsyncResult result) {
            return base.Channel.EndAddAddress(result);
        }
        
        private System.IAsyncResult OnBeginAddAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Email = ((string)(inValues[0]));
            string Firstname = ((string)(inValues[1]));
            string Lastname = ((string)(inValues[2]));
            string CountryName = ((string)(inValues[3]));
            string Province = ((string)(inValues[4]));
            string City = ((string)(inValues[5]));
            string Street = ((string)(inValues[6]));
            string PostalCode = ((string)(inValues[7]));
            string PhoneNumber = ((string)(inValues[8]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginAddAddress(Email, Firstname, Lastname, CountryName, Province, City, Street, PostalCode, PhoneNumber, callback, asyncState);
        }
        
        private object[] OnEndAddAddress(System.IAsyncResult result) {
            bool retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndAddAddress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddAddressCompleted(object state) {
            if ((this.AddAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddAddressCompleted(this, new AddAddressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAddressAsync(string Email, string Firstname, string Lastname, string CountryName, string Province, string City, string Street, string PostalCode, string PhoneNumber) {
            this.AddAddressAsync(Email, Firstname, Lastname, CountryName, Province, City, Street, PostalCode, PhoneNumber, null);
        }
        
        public void AddAddressAsync(string Email, string Firstname, string Lastname, string CountryName, string Province, string City, string Street, string PostalCode, string PhoneNumber, object userState) {
            if ((this.onBeginAddAddressDelegate == null)) {
                this.onBeginAddAddressDelegate = new BeginOperationDelegate(this.OnBeginAddAddress);
            }
            if ((this.onEndAddAddressDelegate == null)) {
                this.onEndAddAddressDelegate = new EndOperationDelegate(this.OnEndAddAddress);
            }
            if ((this.onAddAddressCompletedDelegate == null)) {
                this.onAddAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddAddressCompleted);
            }
            base.InvokeAsync(this.onBeginAddAddressDelegate, new object[] {
                        Email,
                        Firstname,
                        Lastname,
                        CountryName,
                        Province,
                        City,
                        Street,
                        PostalCode,
                        PhoneNumber}, this.onEndAddAddressDelegate, this.onAddAddressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetAllCountries(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCountries(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CountryDTO> NopMobile.AppCore.NopAPI.INopService.EndGetAllCountries(System.IAsyncResult result) {
            return base.Channel.EndGetAllCountries(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCountries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetAllCountries(callback, asyncState);
        }
        
        private object[] OnEndGetAllCountries(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CountryDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetAllCountries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCountriesCompleted(object state) {
            if ((this.GetAllCountriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCountriesCompleted(this, new GetAllCountriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCountriesAsync() {
            this.GetAllCountriesAsync(null);
        }
        
        public void GetAllCountriesAsync(object userState) {
            if ((this.onBeginGetAllCountriesDelegate == null)) {
                this.onBeginGetAllCountriesDelegate = new BeginOperationDelegate(this.OnBeginGetAllCountries);
            }
            if ((this.onEndGetAllCountriesDelegate == null)) {
                this.onEndGetAllCountriesDelegate = new EndOperationDelegate(this.OnEndGetAllCountries);
            }
            if ((this.onGetAllCountriesCompletedDelegate == null)) {
                this.onGetAllCountriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCountriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCountriesDelegate, null, this.onEndGetAllCountriesDelegate, this.onGetAllCountriesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginAddNewOrder(int CustomerId, int BillingAddressId, int ShippingAddressId, string ShippingMethod, string PaymentMethod, bool GiftWrap, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewOrder(CustomerId, BillingAddressId, ShippingAddressId, ShippingMethod, PaymentMethod, GiftWrap, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> NopMobile.AppCore.NopAPI.INopService.EndAddNewOrder(System.IAsyncResult result) {
            return base.Channel.EndAddNewOrder(result);
        }
        
        private System.IAsyncResult OnBeginAddNewOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CustomerId = ((int)(inValues[0]));
            int BillingAddressId = ((int)(inValues[1]));
            int ShippingAddressId = ((int)(inValues[2]));
            string ShippingMethod = ((string)(inValues[3]));
            string PaymentMethod = ((string)(inValues[4]));
            bool GiftWrap = ((bool)(inValues[5]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginAddNewOrder(CustomerId, BillingAddressId, ShippingAddressId, ShippingMethod, PaymentMethod, GiftWrap, callback, asyncState);
        }
        
        private object[] OnEndAddNewOrder(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndAddNewOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewOrderCompleted(object state) {
            if ((this.AddNewOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewOrderCompleted(this, new AddNewOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewOrderAsync(int CustomerId, int BillingAddressId, int ShippingAddressId, string ShippingMethod, string PaymentMethod, bool GiftWrap) {
            this.AddNewOrderAsync(CustomerId, BillingAddressId, ShippingAddressId, ShippingMethod, PaymentMethod, GiftWrap, null);
        }
        
        public void AddNewOrderAsync(int CustomerId, int BillingAddressId, int ShippingAddressId, string ShippingMethod, string PaymentMethod, bool GiftWrap, object userState) {
            if ((this.onBeginAddNewOrderDelegate == null)) {
                this.onBeginAddNewOrderDelegate = new BeginOperationDelegate(this.OnBeginAddNewOrder);
            }
            if ((this.onEndAddNewOrderDelegate == null)) {
                this.onEndAddNewOrderDelegate = new EndOperationDelegate(this.OnEndAddNewOrder);
            }
            if ((this.onAddNewOrderCompletedDelegate == null)) {
                this.onAddNewOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewOrderCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewOrderDelegate, new object[] {
                        CustomerId,
                        BillingAddressId,
                        ShippingAddressId,
                        ShippingMethod,
                        PaymentMethod,
                        GiftWrap}, this.onEndAddNewOrderDelegate, this.onAddNewOrderCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginAddToCart(string Username, int ProdId, int Quantity, System.Collections.Generic.List<string> Attributes, NopMobile.AppCore.NopAPI.ShoppingCartType Type, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddToCart(Username, ProdId, Quantity, Attributes, Type, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool NopMobile.AppCore.NopAPI.INopService.EndAddToCart(System.IAsyncResult result) {
            return base.Channel.EndAddToCart(result);
        }
        
        private System.IAsyncResult OnBeginAddToCart(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Username = ((string)(inValues[0]));
            int ProdId = ((int)(inValues[1]));
            int Quantity = ((int)(inValues[2]));
            System.Collections.Generic.List<string> Attributes = ((System.Collections.Generic.List<string>)(inValues[3]));
            NopMobile.AppCore.NopAPI.ShoppingCartType Type = ((NopMobile.AppCore.NopAPI.ShoppingCartType)(inValues[4]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginAddToCart(Username, ProdId, Quantity, Attributes, Type, callback, asyncState);
        }
        
        private object[] OnEndAddToCart(System.IAsyncResult result) {
            bool retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndAddToCart(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddToCartCompleted(object state) {
            if ((this.AddToCartCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddToCartCompleted(this, new AddToCartCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddToCartAsync(string Username, int ProdId, int Quantity, System.Collections.Generic.List<string> Attributes, NopMobile.AppCore.NopAPI.ShoppingCartType Type) {
            this.AddToCartAsync(Username, ProdId, Quantity, Attributes, Type, null);
        }
        
        public void AddToCartAsync(string Username, int ProdId, int Quantity, System.Collections.Generic.List<string> Attributes, NopMobile.AppCore.NopAPI.ShoppingCartType Type, object userState) {
            if ((this.onBeginAddToCartDelegate == null)) {
                this.onBeginAddToCartDelegate = new BeginOperationDelegate(this.OnBeginAddToCart);
            }
            if ((this.onEndAddToCartDelegate == null)) {
                this.onEndAddToCartDelegate = new EndOperationDelegate(this.OnEndAddToCart);
            }
            if ((this.onAddToCartCompletedDelegate == null)) {
                this.onAddToCartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddToCartCompleted);
            }
            base.InvokeAsync(this.onBeginAddToCartDelegate, new object[] {
                        Username,
                        ProdId,
                        Quantity,
                        Attributes,
                        Type}, this.onEndAddToCartDelegate, this.onAddToCartCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetProductById(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductById(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NopMobile.AppCore.NopAPI.ProductDTO NopMobile.AppCore.NopAPI.INopService.EndGetProductById(System.IAsyncResult result) {
            return base.Channel.EndGetProductById(result);
        }
        
        private System.IAsyncResult OnBeginGetProductById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetProductById(id, callback, asyncState);
        }
        
        private object[] OnEndGetProductById(System.IAsyncResult result) {
            NopMobile.AppCore.NopAPI.ProductDTO retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetProductById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductByIdCompleted(object state) {
            if ((this.GetProductByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductByIdCompleted(this, new GetProductByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductByIdAsync(int id) {
            this.GetProductByIdAsync(id, null);
        }
        
        public void GetProductByIdAsync(int id, object userState) {
            if ((this.onBeginGetProductByIdDelegate == null)) {
                this.onBeginGetProductByIdDelegate = new BeginOperationDelegate(this.OnBeginGetProductById);
            }
            if ((this.onEndGetProductByIdDelegate == null)) {
                this.onEndGetProductByIdDelegate = new EndOperationDelegate(this.OnEndGetProductById);
            }
            if ((this.onGetProductByIdCompletedDelegate == null)) {
                this.onGetProductByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductByIdDelegate, new object[] {
                        id}, this.onEndGetProductByIdDelegate, this.onGetProductByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetAllProductsFromCategory(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllProductsFromCategory(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> NopMobile.AppCore.NopAPI.INopService.EndGetAllProductsFromCategory(System.IAsyncResult result) {
            return base.Channel.EndGetAllProductsFromCategory(result);
        }
        
        private System.IAsyncResult OnBeginGetAllProductsFromCategory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetAllProductsFromCategory(id, callback, asyncState);
        }
        
        private object[] OnEndGetAllProductsFromCategory(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetAllProductsFromCategory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllProductsFromCategoryCompleted(object state) {
            if ((this.GetAllProductsFromCategoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllProductsFromCategoryCompleted(this, new GetAllProductsFromCategoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllProductsFromCategoryAsync(int id) {
            this.GetAllProductsFromCategoryAsync(id, null);
        }
        
        public void GetAllProductsFromCategoryAsync(int id, object userState) {
            if ((this.onBeginGetAllProductsFromCategoryDelegate == null)) {
                this.onBeginGetAllProductsFromCategoryDelegate = new BeginOperationDelegate(this.OnBeginGetAllProductsFromCategory);
            }
            if ((this.onEndGetAllProductsFromCategoryDelegate == null)) {
                this.onEndGetAllProductsFromCategoryDelegate = new EndOperationDelegate(this.OnEndGetAllProductsFromCategory);
            }
            if ((this.onGetAllProductsFromCategoryCompletedDelegate == null)) {
                this.onGetAllProductsFromCategoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllProductsFromCategoryCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllProductsFromCategoryDelegate, new object[] {
                        id}, this.onEndGetAllProductsFromCategoryDelegate, this.onGetAllProductsFromCategoryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCategoryById(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCategoryById(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NopMobile.AppCore.NopAPI.CategoryDTO NopMobile.AppCore.NopAPI.INopService.EndGetCategoryById(System.IAsyncResult result) {
            return base.Channel.EndGetCategoryById(result);
        }
        
        private System.IAsyncResult OnBeginGetCategoryById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCategoryById(id, callback, asyncState);
        }
        
        private object[] OnEndGetCategoryById(System.IAsyncResult result) {
            NopMobile.AppCore.NopAPI.CategoryDTO retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCategoryById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCategoryByIdCompleted(object state) {
            if ((this.GetCategoryByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCategoryByIdCompleted(this, new GetCategoryByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCategoryByIdAsync(int id) {
            this.GetCategoryByIdAsync(id, null);
        }
        
        public void GetCategoryByIdAsync(int id, object userState) {
            if ((this.onBeginGetCategoryByIdDelegate == null)) {
                this.onBeginGetCategoryByIdDelegate = new BeginOperationDelegate(this.OnBeginGetCategoryById);
            }
            if ((this.onEndGetCategoryByIdDelegate == null)) {
                this.onEndGetCategoryByIdDelegate = new EndOperationDelegate(this.OnEndGetCategoryById);
            }
            if ((this.onGetCategoryByIdCompletedDelegate == null)) {
                this.onGetCategoryByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCategoryByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetCategoryByIdDelegate, new object[] {
                        id}, this.onEndGetCategoryByIdDelegate, this.onGetCategoryByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetProductsByKeywords(string Words, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductsByKeywords(Words, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> NopMobile.AppCore.NopAPI.INopService.EndGetProductsByKeywords(System.IAsyncResult result) {
            return base.Channel.EndGetProductsByKeywords(result);
        }
        
        private System.IAsyncResult OnBeginGetProductsByKeywords(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Words = ((string)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetProductsByKeywords(Words, callback, asyncState);
        }
        
        private object[] OnEndGetProductsByKeywords(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetProductsByKeywords(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductsByKeywordsCompleted(object state) {
            if ((this.GetProductsByKeywordsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductsByKeywordsCompleted(this, new GetProductsByKeywordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductsByKeywordsAsync(string Words) {
            this.GetProductsByKeywordsAsync(Words, null);
        }
        
        public void GetProductsByKeywordsAsync(string Words, object userState) {
            if ((this.onBeginGetProductsByKeywordsDelegate == null)) {
                this.onBeginGetProductsByKeywordsDelegate = new BeginOperationDelegate(this.OnBeginGetProductsByKeywords);
            }
            if ((this.onEndGetProductsByKeywordsDelegate == null)) {
                this.onEndGetProductsByKeywordsDelegate = new EndOperationDelegate(this.OnEndGetProductsByKeywords);
            }
            if ((this.onGetProductsByKeywordsCompletedDelegate == null)) {
                this.onGetProductsByKeywordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductsByKeywordsCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductsByKeywordsDelegate, new object[] {
                        Words}, this.onEndGetProductsByKeywordsDelegate, this.onGetProductsByKeywordsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetUserName(string usernameOrEmail, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserName(usernameOrEmail, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string NopMobile.AppCore.NopAPI.INopService.EndGetUserName(System.IAsyncResult result) {
            return base.Channel.EndGetUserName(result);
        }
        
        private System.IAsyncResult OnBeginGetUserName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string usernameOrEmail = ((string)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetUserName(usernameOrEmail, callback, asyncState);
        }
        
        private object[] OnEndGetUserName(System.IAsyncResult result) {
            string retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetUserName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserNameCompleted(object state) {
            if ((this.GetUserNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserNameCompleted(this, new GetUserNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserNameAsync(string usernameOrEmail) {
            this.GetUserNameAsync(usernameOrEmail, null);
        }
        
        public void GetUserNameAsync(string usernameOrEmail, object userState) {
            if ((this.onBeginGetUserNameDelegate == null)) {
                this.onBeginGetUserNameDelegate = new BeginOperationDelegate(this.OnBeginGetUserName);
            }
            if ((this.onEndGetUserNameDelegate == null)) {
                this.onEndGetUserNameDelegate = new EndOperationDelegate(this.OnEndGetUserName);
            }
            if ((this.onGetUserNameCompletedDelegate == null)) {
                this.onGetUserNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserNameDelegate, new object[] {
                        usernameOrEmail}, this.onEndGetUserNameDelegate, this.onGetUserNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetOrders(int storeId, int vendorId, int customerId, int productId, int affiliateId, System.Nullable<NopMobile.AppCore.NopAPI.OrderStatus> os, System.Nullable<NopMobile.AppCore.NopAPI.PaymentStatus> ps, System.Nullable<NopMobile.AppCore.NopAPI.ShippingStatus> ss, string billingEmail, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrders(storeId, vendorId, customerId, productId, affiliateId, os, ps, ss, billingEmail, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderDTO> NopMobile.AppCore.NopAPI.INopService.EndGetOrders(System.IAsyncResult result) {
            return base.Channel.EndGetOrders(result);
        }
        
        private System.IAsyncResult OnBeginGetOrders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int storeId = ((int)(inValues[0]));
            int vendorId = ((int)(inValues[1]));
            int customerId = ((int)(inValues[2]));
            int productId = ((int)(inValues[3]));
            int affiliateId = ((int)(inValues[4]));
            System.Nullable<NopMobile.AppCore.NopAPI.OrderStatus> os = ((System.Nullable<NopMobile.AppCore.NopAPI.OrderStatus>)(inValues[5]));
            System.Nullable<NopMobile.AppCore.NopAPI.PaymentStatus> ps = ((System.Nullable<NopMobile.AppCore.NopAPI.PaymentStatus>)(inValues[6]));
            System.Nullable<NopMobile.AppCore.NopAPI.ShippingStatus> ss = ((System.Nullable<NopMobile.AppCore.NopAPI.ShippingStatus>)(inValues[7]));
            string billingEmail = ((string)(inValues[8]));
            int pageIndex = ((int)(inValues[9]));
            int pageSize = ((int)(inValues[10]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetOrders(storeId, vendorId, customerId, productId, affiliateId, os, ps, ss, billingEmail, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetOrders(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetOrders(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrdersCompleted(object state) {
            if ((this.GetOrdersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrdersCompleted(this, new GetOrdersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrdersAsync(int storeId, int vendorId, int customerId, int productId, int affiliateId, System.Nullable<NopMobile.AppCore.NopAPI.OrderStatus> os, System.Nullable<NopMobile.AppCore.NopAPI.PaymentStatus> ps, System.Nullable<NopMobile.AppCore.NopAPI.ShippingStatus> ss, string billingEmail, int pageIndex, int pageSize) {
            this.GetOrdersAsync(storeId, vendorId, customerId, productId, affiliateId, os, ps, ss, billingEmail, pageIndex, pageSize, null);
        }
        
        public void GetOrdersAsync(int storeId, int vendorId, int customerId, int productId, int affiliateId, System.Nullable<NopMobile.AppCore.NopAPI.OrderStatus> os, System.Nullable<NopMobile.AppCore.NopAPI.PaymentStatus> ps, System.Nullable<NopMobile.AppCore.NopAPI.ShippingStatus> ss, string billingEmail, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetOrdersDelegate == null)) {
                this.onBeginGetOrdersDelegate = new BeginOperationDelegate(this.OnBeginGetOrders);
            }
            if ((this.onEndGetOrdersDelegate == null)) {
                this.onEndGetOrdersDelegate = new EndOperationDelegate(this.OnEndGetOrders);
            }
            if ((this.onGetOrdersCompletedDelegate == null)) {
                this.onGetOrdersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrdersCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrdersDelegate, new object[] {
                        storeId,
                        vendorId,
                        customerId,
                        productId,
                        affiliateId,
                        os,
                        ps,
                        ss,
                        billingEmail,
                        pageIndex,
                        pageSize}, this.onEndGetOrdersDelegate, this.onGetOrdersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetOrderById(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrderById(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NopMobile.AppCore.NopAPI.OrderDTO NopMobile.AppCore.NopAPI.INopService.EndGetOrderById(System.IAsyncResult result) {
            return base.Channel.EndGetOrderById(result);
        }
        
        private System.IAsyncResult OnBeginGetOrderById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetOrderById(id, callback, asyncState);
        }
        
        private object[] OnEndGetOrderById(System.IAsyncResult result) {
            NopMobile.AppCore.NopAPI.OrderDTO retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetOrderById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrderByIdCompleted(object state) {
            if ((this.GetOrderByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrderByIdCompleted(this, new GetOrderByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrderByIdAsync(int id) {
            this.GetOrderByIdAsync(id, null);
        }
        
        public void GetOrderByIdAsync(int id, object userState) {
            if ((this.onBeginGetOrderByIdDelegate == null)) {
                this.onBeginGetOrderByIdDelegate = new BeginOperationDelegate(this.OnBeginGetOrderById);
            }
            if ((this.onEndGetOrderByIdDelegate == null)) {
                this.onEndGetOrderByIdDelegate = new EndOperationDelegate(this.OnEndGetOrderById);
            }
            if ((this.onGetOrderByIdCompletedDelegate == null)) {
                this.onGetOrderByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrderByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrderByIdDelegate, new object[] {
                        id}, this.onEndGetOrderByIdDelegate, this.onGetOrderByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCustomerList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> NopMobile.AppCore.NopAPI.INopService.EndGetCustomerList(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerList(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCustomerList(callback, asyncState);
        }
        
        private object[] OnEndGetCustomerList(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCustomerList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerListCompleted(object state) {
            if ((this.GetCustomerListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerListCompleted(this, new GetCustomerListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerListAsync() {
            this.GetCustomerListAsync(null);
        }
        
        public void GetCustomerListAsync(object userState) {
            if ((this.onBeginGetCustomerListDelegate == null)) {
                this.onBeginGetCustomerListDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerList);
            }
            if ((this.onEndGetCustomerListDelegate == null)) {
                this.onEndGetCustomerListDelegate = new EndOperationDelegate(this.OnEndGetCustomerList);
            }
            if ((this.onGetCustomerListCompletedDelegate == null)) {
                this.onGetCustomerListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerListCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerListDelegate, null, this.onEndGetCustomerListDelegate, this.onGetCustomerListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetPendingTotal(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPendingTotal(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        decimal NopMobile.AppCore.NopAPI.INopService.EndGetPendingTotal(System.IAsyncResult result) {
            return base.Channel.EndGetPendingTotal(result);
        }
        
        private System.IAsyncResult OnBeginGetPendingTotal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetPendingTotal(callback, asyncState);
        }
        
        private object[] OnEndGetPendingTotal(System.IAsyncResult result) {
            decimal retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetPendingTotal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPendingTotalCompleted(object state) {
            if ((this.GetPendingTotalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPendingTotalCompleted(this, new GetPendingTotalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPendingTotalAsync() {
            this.GetPendingTotalAsync(null);
        }
        
        public void GetPendingTotalAsync(object userState) {
            if ((this.onBeginGetPendingTotalDelegate == null)) {
                this.onBeginGetPendingTotalDelegate = new BeginOperationDelegate(this.OnBeginGetPendingTotal);
            }
            if ((this.onEndGetPendingTotalDelegate == null)) {
                this.onEndGetPendingTotalDelegate = new EndOperationDelegate(this.OnEndGetPendingTotal);
            }
            if ((this.onGetPendingTotalCompletedDelegate == null)) {
                this.onGetPendingTotalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPendingTotalCompleted);
            }
            base.InvokeAsync(this.onBeginGetPendingTotalDelegate, null, this.onEndGetPendingTotalDelegate, this.onGetPendingTotalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginEndSession(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEndSession(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NopMobile.AppCore.NopAPI.INopService.EndEndSession(System.IAsyncResult result) {
            base.Channel.EndEndSession(result);
        }
        
        private System.IAsyncResult OnBeginEndSession(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginEndSession(callback, asyncState);
        }
        
        private object[] OnEndEndSession(System.IAsyncResult result) {
            ((NopMobile.AppCore.NopAPI.INopService)(this)).EndEndSession(result);
            return null;
        }
        
        private void OnEndSessionCompleted(object state) {
            if ((this.EndSessionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EndSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EndSessionAsync() {
            this.EndSessionAsync(null);
        }
        
        public void EndSessionAsync(object userState) {
            if ((this.onBeginEndSessionDelegate == null)) {
                this.onBeginEndSessionDelegate = new BeginOperationDelegate(this.OnBeginEndSession);
            }
            if ((this.onEndEndSessionDelegate == null)) {
                this.onEndEndSessionDelegate = new EndOperationDelegate(this.OnEndEndSession);
            }
            if ((this.onEndSessionCompletedDelegate == null)) {
                this.onEndSessionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEndSessionCompleted);
            }
            base.InvokeAsync(this.onBeginEndSessionDelegate, null, this.onEndEndSessionDelegate, this.onEndSessionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCompleteTotal(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompleteTotal(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int NopMobile.AppCore.NopAPI.INopService.EndGetCompleteTotal(System.IAsyncResult result) {
            return base.Channel.EndGetCompleteTotal(result);
        }
        
        private System.IAsyncResult OnBeginGetCompleteTotal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCompleteTotal(callback, asyncState);
        }
        
        private object[] OnEndGetCompleteTotal(System.IAsyncResult result) {
            int retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCompleteTotal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompleteTotalCompleted(object state) {
            if ((this.GetCompleteTotalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompleteTotalCompleted(this, new GetCompleteTotalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompleteTotalAsync() {
            this.GetCompleteTotalAsync(null);
        }
        
        public void GetCompleteTotalAsync(object userState) {
            if ((this.onBeginGetCompleteTotalDelegate == null)) {
                this.onBeginGetCompleteTotalDelegate = new BeginOperationDelegate(this.OnBeginGetCompleteTotal);
            }
            if ((this.onEndGetCompleteTotalDelegate == null)) {
                this.onEndGetCompleteTotalDelegate = new EndOperationDelegate(this.OnEndGetCompleteTotal);
            }
            if ((this.onGetCompleteTotalCompletedDelegate == null)) {
                this.onGetCompleteTotalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompleteTotalCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompleteTotalDelegate, null, this.onEndGetCompleteTotalDelegate, this.onGetCompleteTotalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCancelledTotal(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCancelledTotal(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int NopMobile.AppCore.NopAPI.INopService.EndGetCancelledTotal(System.IAsyncResult result) {
            return base.Channel.EndGetCancelledTotal(result);
        }
        
        private System.IAsyncResult OnBeginGetCancelledTotal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCancelledTotal(callback, asyncState);
        }
        
        private object[] OnEndGetCancelledTotal(System.IAsyncResult result) {
            int retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCancelledTotal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCancelledTotalCompleted(object state) {
            if ((this.GetCancelledTotalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCancelledTotalCompleted(this, new GetCancelledTotalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCancelledTotalAsync() {
            this.GetCancelledTotalAsync(null);
        }
        
        public void GetCancelledTotalAsync(object userState) {
            if ((this.onBeginGetCancelledTotalDelegate == null)) {
                this.onBeginGetCancelledTotalDelegate = new BeginOperationDelegate(this.OnBeginGetCancelledTotal);
            }
            if ((this.onEndGetCancelledTotalDelegate == null)) {
                this.onEndGetCancelledTotalDelegate = new EndOperationDelegate(this.OnEndGetCancelledTotal);
            }
            if ((this.onGetCancelledTotalCompletedDelegate == null)) {
                this.onGetCancelledTotalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCancelledTotalCompleted);
            }
            base.InvokeAsync(this.onBeginGetCancelledTotalDelegate, null, this.onEndGetCancelledTotalDelegate, this.onGetCancelledTotalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetStoreName(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStoreName(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string NopMobile.AppCore.NopAPI.INopService.EndGetStoreName(System.IAsyncResult result) {
            return base.Channel.EndGetStoreName(result);
        }
        
        private System.IAsyncResult OnBeginGetStoreName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetStoreName(callback, asyncState);
        }
        
        private object[] OnEndGetStoreName(System.IAsyncResult result) {
            string retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetStoreName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStoreNameCompleted(object state) {
            if ((this.GetStoreNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStoreNameCompleted(this, new GetStoreNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStoreNameAsync() {
            this.GetStoreNameAsync(null);
        }
        
        public void GetStoreNameAsync(object userState) {
            if ((this.onBeginGetStoreNameDelegate == null)) {
                this.onBeginGetStoreNameDelegate = new BeginOperationDelegate(this.OnBeginGetStoreName);
            }
            if ((this.onEndGetStoreNameDelegate == null)) {
                this.onEndGetStoreNameDelegate = new EndOperationDelegate(this.OnEndGetStoreName);
            }
            if ((this.onGetStoreNameCompletedDelegate == null)) {
                this.onGetStoreNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStoreNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetStoreNameDelegate, null, this.onEndGetStoreNameDelegate, this.onGetStoreNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetRegisteredUsersCountByTime(int days, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRegisteredUsersCountByTime(days, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int NopMobile.AppCore.NopAPI.INopService.EndGetRegisteredUsersCountByTime(System.IAsyncResult result) {
            return base.Channel.EndGetRegisteredUsersCountByTime(result);
        }
        
        private System.IAsyncResult OnBeginGetRegisteredUsersCountByTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int days = ((int)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetRegisteredUsersCountByTime(days, callback, asyncState);
        }
        
        private object[] OnEndGetRegisteredUsersCountByTime(System.IAsyncResult result) {
            int retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetRegisteredUsersCountByTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRegisteredUsersCountByTimeCompleted(object state) {
            if ((this.GetRegisteredUsersCountByTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRegisteredUsersCountByTimeCompleted(this, new GetRegisteredUsersCountByTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRegisteredUsersCountByTimeAsync(int days) {
            this.GetRegisteredUsersCountByTimeAsync(days, null);
        }
        
        public void GetRegisteredUsersCountByTimeAsync(int days, object userState) {
            if ((this.onBeginGetRegisteredUsersCountByTimeDelegate == null)) {
                this.onBeginGetRegisteredUsersCountByTimeDelegate = new BeginOperationDelegate(this.OnBeginGetRegisteredUsersCountByTime);
            }
            if ((this.onEndGetRegisteredUsersCountByTimeDelegate == null)) {
                this.onEndGetRegisteredUsersCountByTimeDelegate = new EndOperationDelegate(this.OnEndGetRegisteredUsersCountByTime);
            }
            if ((this.onGetRegisteredUsersCountByTimeCompletedDelegate == null)) {
                this.onGetRegisteredUsersCountByTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRegisteredUsersCountByTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetRegisteredUsersCountByTimeDelegate, new object[] {
                        days}, this.onEndGetRegisteredUsersCountByTimeDelegate, this.onGetRegisteredUsersCountByTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetTotalSalesByTime(int days, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTotalSalesByTime(days, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        decimal NopMobile.AppCore.NopAPI.INopService.EndGetTotalSalesByTime(System.IAsyncResult result) {
            return base.Channel.EndGetTotalSalesByTime(result);
        }
        
        private System.IAsyncResult OnBeginGetTotalSalesByTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int days = ((int)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetTotalSalesByTime(days, callback, asyncState);
        }
        
        private object[] OnEndGetTotalSalesByTime(System.IAsyncResult result) {
            decimal retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetTotalSalesByTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTotalSalesByTimeCompleted(object state) {
            if ((this.GetTotalSalesByTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTotalSalesByTimeCompleted(this, new GetTotalSalesByTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTotalSalesByTimeAsync(int days) {
            this.GetTotalSalesByTimeAsync(days, null);
        }
        
        public void GetTotalSalesByTimeAsync(int days, object userState) {
            if ((this.onBeginGetTotalSalesByTimeDelegate == null)) {
                this.onBeginGetTotalSalesByTimeDelegate = new BeginOperationDelegate(this.OnBeginGetTotalSalesByTime);
            }
            if ((this.onEndGetTotalSalesByTimeDelegate == null)) {
                this.onEndGetTotalSalesByTimeDelegate = new EndOperationDelegate(this.OnEndGetTotalSalesByTime);
            }
            if ((this.onGetTotalSalesByTimeCompletedDelegate == null)) {
                this.onGetTotalSalesByTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTotalSalesByTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetTotalSalesByTimeDelegate, new object[] {
                        days}, this.onEndGetTotalSalesByTimeDelegate, this.onGetTotalSalesByTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetTotalPendingByReason(string reason, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTotalPendingByReason(reason, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        decimal NopMobile.AppCore.NopAPI.INopService.EndGetTotalPendingByReason(System.IAsyncResult result) {
            return base.Channel.EndGetTotalPendingByReason(result);
        }
        
        private System.IAsyncResult OnBeginGetTotalPendingByReason(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string reason = ((string)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetTotalPendingByReason(reason, callback, asyncState);
        }
        
        private object[] OnEndGetTotalPendingByReason(System.IAsyncResult result) {
            decimal retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetTotalPendingByReason(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTotalPendingByReasonCompleted(object state) {
            if ((this.GetTotalPendingByReasonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTotalPendingByReasonCompleted(this, new GetTotalPendingByReasonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTotalPendingByReasonAsync(string reason) {
            this.GetTotalPendingByReasonAsync(reason, null);
        }
        
        public void GetTotalPendingByReasonAsync(string reason, object userState) {
            if ((this.onBeginGetTotalPendingByReasonDelegate == null)) {
                this.onBeginGetTotalPendingByReasonDelegate = new BeginOperationDelegate(this.OnBeginGetTotalPendingByReason);
            }
            if ((this.onEndGetTotalPendingByReasonDelegate == null)) {
                this.onEndGetTotalPendingByReasonDelegate = new EndOperationDelegate(this.OnEndGetTotalPendingByReason);
            }
            if ((this.onGetTotalPendingByReasonCompletedDelegate == null)) {
                this.onGetTotalPendingByReasonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTotalPendingByReasonCompleted);
            }
            base.InvokeAsync(this.onBeginGetTotalPendingByReasonDelegate, new object[] {
                        reason}, this.onEndGetTotalPendingByReasonDelegate, this.onGetTotalPendingByReasonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetPendingOrdersCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPendingOrdersCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int NopMobile.AppCore.NopAPI.INopService.EndGetPendingOrdersCount(System.IAsyncResult result) {
            return base.Channel.EndGetPendingOrdersCount(result);
        }
        
        private System.IAsyncResult OnBeginGetPendingOrdersCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetPendingOrdersCount(callback, asyncState);
        }
        
        private object[] OnEndGetPendingOrdersCount(System.IAsyncResult result) {
            int retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetPendingOrdersCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPendingOrdersCountCompleted(object state) {
            if ((this.GetPendingOrdersCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPendingOrdersCountCompleted(this, new GetPendingOrdersCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPendingOrdersCountAsync() {
            this.GetPendingOrdersCountAsync(null);
        }
        
        public void GetPendingOrdersCountAsync(object userState) {
            if ((this.onBeginGetPendingOrdersCountDelegate == null)) {
                this.onBeginGetPendingOrdersCountDelegate = new BeginOperationDelegate(this.OnBeginGetPendingOrdersCount);
            }
            if ((this.onEndGetPendingOrdersCountDelegate == null)) {
                this.onEndGetPendingOrdersCountDelegate = new EndOperationDelegate(this.OnEndGetPendingOrdersCount);
            }
            if ((this.onGetPendingOrdersCountCompletedDelegate == null)) {
                this.onGetPendingOrdersCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPendingOrdersCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetPendingOrdersCountDelegate, null, this.onEndGetPendingOrdersCountDelegate, this.onGetPendingOrdersCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCurrentCartsCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentCartsCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int NopMobile.AppCore.NopAPI.INopService.EndGetCurrentCartsCount(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentCartsCount(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentCartsCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCurrentCartsCount(callback, asyncState);
        }
        
        private object[] OnEndGetCurrentCartsCount(System.IAsyncResult result) {
            int retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCurrentCartsCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentCartsCountCompleted(object state) {
            if ((this.GetCurrentCartsCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentCartsCountCompleted(this, new GetCurrentCartsCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentCartsCountAsync() {
            this.GetCurrentCartsCountAsync(null);
        }
        
        public void GetCurrentCartsCountAsync(object userState) {
            if ((this.onBeginGetCurrentCartsCountDelegate == null)) {
                this.onBeginGetCurrentCartsCountDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentCartsCount);
            }
            if ((this.onEndGetCurrentCartsCountDelegate == null)) {
                this.onEndGetCurrentCartsCountDelegate = new EndOperationDelegate(this.OnEndGetCurrentCartsCount);
            }
            if ((this.onGetCurrentCartsCountCompletedDelegate == null)) {
                this.onGetCurrentCartsCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentCartsCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentCartsCountDelegate, null, this.onEndGetCurrentCartsCountDelegate, this.onGetCurrentCartsCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetWishlistCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWishlistCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int NopMobile.AppCore.NopAPI.INopService.EndGetWishlistCount(System.IAsyncResult result) {
            return base.Channel.EndGetWishlistCount(result);
        }
        
        private System.IAsyncResult OnBeginGetWishlistCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetWishlistCount(callback, asyncState);
        }
        
        private object[] OnEndGetWishlistCount(System.IAsyncResult result) {
            int retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetWishlistCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWishlistCountCompleted(object state) {
            if ((this.GetWishlistCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWishlistCountCompleted(this, new GetWishlistCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWishlistCountAsync() {
            this.GetWishlistCountAsync(null);
        }
        
        public void GetWishlistCountAsync(object userState) {
            if ((this.onBeginGetWishlistCountDelegate == null)) {
                this.onBeginGetWishlistCountDelegate = new BeginOperationDelegate(this.OnBeginGetWishlistCount);
            }
            if ((this.onEndGetWishlistCountDelegate == null)) {
                this.onEndGetWishlistCountDelegate = new EndOperationDelegate(this.OnEndGetWishlistCount);
            }
            if ((this.onGetWishlistCountCompletedDelegate == null)) {
                this.onGetWishlistCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWishlistCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetWishlistCountDelegate, null, this.onEndGetWishlistCountDelegate, this.onGetWishlistCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetOnlineCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOnlineCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int NopMobile.AppCore.NopAPI.INopService.EndGetOnlineCount(System.IAsyncResult result) {
            return base.Channel.EndGetOnlineCount(result);
        }
        
        private System.IAsyncResult OnBeginGetOnlineCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetOnlineCount(callback, asyncState);
        }
        
        private object[] OnEndGetOnlineCount(System.IAsyncResult result) {
            int retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetOnlineCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOnlineCountCompleted(object state) {
            if ((this.GetOnlineCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOnlineCountCompleted(this, new GetOnlineCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOnlineCountAsync() {
            this.GetOnlineCountAsync(null);
        }
        
        public void GetOnlineCountAsync(object userState) {
            if ((this.onBeginGetOnlineCountDelegate == null)) {
                this.onBeginGetOnlineCountDelegate = new BeginOperationDelegate(this.OnBeginGetOnlineCount);
            }
            if ((this.onEndGetOnlineCountDelegate == null)) {
                this.onEndGetOnlineCountDelegate = new EndOperationDelegate(this.OnEndGetOnlineCount);
            }
            if ((this.onGetOnlineCountCompletedDelegate == null)) {
                this.onGetOnlineCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOnlineCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetOnlineCountDelegate, null, this.onEndGetOnlineCountDelegate, this.onGetOnlineCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetRegisteredCustomersCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRegisteredCustomersCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int NopMobile.AppCore.NopAPI.INopService.EndGetRegisteredCustomersCount(System.IAsyncResult result) {
            return base.Channel.EndGetRegisteredCustomersCount(result);
        }
        
        private System.IAsyncResult OnBeginGetRegisteredCustomersCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetRegisteredCustomersCount(callback, asyncState);
        }
        
        private object[] OnEndGetRegisteredCustomersCount(System.IAsyncResult result) {
            int retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetRegisteredCustomersCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRegisteredCustomersCountCompleted(object state) {
            if ((this.GetRegisteredCustomersCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRegisteredCustomersCountCompleted(this, new GetRegisteredCustomersCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRegisteredCustomersCountAsync() {
            this.GetRegisteredCustomersCountAsync(null);
        }
        
        public void GetRegisteredCustomersCountAsync(object userState) {
            if ((this.onBeginGetRegisteredCustomersCountDelegate == null)) {
                this.onBeginGetRegisteredCustomersCountDelegate = new BeginOperationDelegate(this.OnBeginGetRegisteredCustomersCount);
            }
            if ((this.onEndGetRegisteredCustomersCountDelegate == null)) {
                this.onEndGetRegisteredCustomersCountDelegate = new EndOperationDelegate(this.OnEndGetRegisteredCustomersCount);
            }
            if ((this.onGetRegisteredCustomersCountCompletedDelegate == null)) {
                this.onGetRegisteredCustomersCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRegisteredCustomersCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetRegisteredCustomersCountDelegate, null, this.onEndGetRegisteredCustomersCountDelegate, this.onGetRegisteredCustomersCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetVendorsCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVendorsCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int NopMobile.AppCore.NopAPI.INopService.EndGetVendorsCount(System.IAsyncResult result) {
            return base.Channel.EndGetVendorsCount(result);
        }
        
        private System.IAsyncResult OnBeginGetVendorsCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetVendorsCount(callback, asyncState);
        }
        
        private object[] OnEndGetVendorsCount(System.IAsyncResult result) {
            int retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetVendorsCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVendorsCountCompleted(object state) {
            if ((this.GetVendorsCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVendorsCountCompleted(this, new GetVendorsCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVendorsCountAsync() {
            this.GetVendorsCountAsync(null);
        }
        
        public void GetVendorsCountAsync(object userState) {
            if ((this.onBeginGetVendorsCountDelegate == null)) {
                this.onBeginGetVendorsCountDelegate = new BeginOperationDelegate(this.OnBeginGetVendorsCount);
            }
            if ((this.onEndGetVendorsCountDelegate == null)) {
                this.onEndGetVendorsCountDelegate = new EndOperationDelegate(this.OnEndGetVendorsCount);
            }
            if ((this.onGetVendorsCountCompletedDelegate == null)) {
                this.onGetVendorsCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVendorsCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetVendorsCountDelegate, null, this.onEndGetVendorsCountDelegate, this.onGetVendorsCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetPopularKeywords(int KeywordNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPopularKeywords(KeywordNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.KeywordDTO> NopMobile.AppCore.NopAPI.INopService.EndGetPopularKeywords(System.IAsyncResult result) {
            return base.Channel.EndGetPopularKeywords(result);
        }
        
        private System.IAsyncResult OnBeginGetPopularKeywords(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int KeywordNumber = ((int)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetPopularKeywords(KeywordNumber, callback, asyncState);
        }
        
        private object[] OnEndGetPopularKeywords(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.KeywordDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetPopularKeywords(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPopularKeywordsCompleted(object state) {
            if ((this.GetPopularKeywordsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPopularKeywordsCompleted(this, new GetPopularKeywordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPopularKeywordsAsync(int KeywordNumber) {
            this.GetPopularKeywordsAsync(KeywordNumber, null);
        }
        
        public void GetPopularKeywordsAsync(int KeywordNumber, object userState) {
            if ((this.onBeginGetPopularKeywordsDelegate == null)) {
                this.onBeginGetPopularKeywordsDelegate = new BeginOperationDelegate(this.OnBeginGetPopularKeywords);
            }
            if ((this.onEndGetPopularKeywordsDelegate == null)) {
                this.onEndGetPopularKeywordsDelegate = new EndOperationDelegate(this.OnEndGetPopularKeywords);
            }
            if ((this.onGetPopularKeywordsCompletedDelegate == null)) {
                this.onGetPopularKeywordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPopularKeywordsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPopularKeywordsDelegate, new object[] {
                        KeywordNumber}, this.onEndGetPopularKeywordsDelegate, this.onGetPopularKeywordsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetBestsellersByAmount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBestsellersByAmount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO> NopMobile.AppCore.NopAPI.INopService.EndGetBestsellersByAmount(System.IAsyncResult result) {
            return base.Channel.EndGetBestsellersByAmount(result);
        }
        
        private System.IAsyncResult OnBeginGetBestsellersByAmount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetBestsellersByAmount(callback, asyncState);
        }
        
        private object[] OnEndGetBestsellersByAmount(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetBestsellersByAmount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBestsellersByAmountCompleted(object state) {
            if ((this.GetBestsellersByAmountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBestsellersByAmountCompleted(this, new GetBestsellersByAmountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBestsellersByAmountAsync() {
            this.GetBestsellersByAmountAsync(null);
        }
        
        public void GetBestsellersByAmountAsync(object userState) {
            if ((this.onBeginGetBestsellersByAmountDelegate == null)) {
                this.onBeginGetBestsellersByAmountDelegate = new BeginOperationDelegate(this.OnBeginGetBestsellersByAmount);
            }
            if ((this.onEndGetBestsellersByAmountDelegate == null)) {
                this.onEndGetBestsellersByAmountDelegate = new EndOperationDelegate(this.OnEndGetBestsellersByAmount);
            }
            if ((this.onGetBestsellersByAmountCompletedDelegate == null)) {
                this.onGetBestsellersByAmountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBestsellersByAmountCompleted);
            }
            base.InvokeAsync(this.onBeginGetBestsellersByAmountDelegate, null, this.onEndGetBestsellersByAmountDelegate, this.onGetBestsellersByAmountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetBestsellersByQuantity(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBestsellersByQuantity(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO> NopMobile.AppCore.NopAPI.INopService.EndGetBestsellersByQuantity(System.IAsyncResult result) {
            return base.Channel.EndGetBestsellersByQuantity(result);
        }
        
        private System.IAsyncResult OnBeginGetBestsellersByQuantity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetBestsellersByQuantity(callback, asyncState);
        }
        
        private object[] OnEndGetBestsellersByQuantity(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetBestsellersByQuantity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBestsellersByQuantityCompleted(object state) {
            if ((this.GetBestsellersByQuantityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBestsellersByQuantityCompleted(this, new GetBestsellersByQuantityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBestsellersByQuantityAsync() {
            this.GetBestsellersByQuantityAsync(null);
        }
        
        public void GetBestsellersByQuantityAsync(object userState) {
            if ((this.onBeginGetBestsellersByQuantityDelegate == null)) {
                this.onBeginGetBestsellersByQuantityDelegate = new BeginOperationDelegate(this.OnBeginGetBestsellersByQuantity);
            }
            if ((this.onEndGetBestsellersByQuantityDelegate == null)) {
                this.onEndGetBestsellersByQuantityDelegate = new EndOperationDelegate(this.OnEndGetBestsellersByQuantity);
            }
            if ((this.onGetBestsellersByQuantityCompletedDelegate == null)) {
                this.onGetBestsellersByQuantityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBestsellersByQuantityCompleted);
            }
            base.InvokeAsync(this.onBeginGetBestsellersByQuantityDelegate, null, this.onEndGetBestsellersByQuantityDelegate, this.onGetBestsellersByQuantityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCurrency(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrency(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string NopMobile.AppCore.NopAPI.INopService.EndGetCurrency(System.IAsyncResult result) {
            return base.Channel.EndGetCurrency(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrency(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCurrency(callback, asyncState);
        }
        
        private object[] OnEndGetCurrency(System.IAsyncResult result) {
            string retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCurrency(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrencyCompleted(object state) {
            if ((this.GetCurrencyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrencyCompleted(this, new GetCurrencyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrencyAsync() {
            this.GetCurrencyAsync(null);
        }
        
        public void GetCurrencyAsync(object userState) {
            if ((this.onBeginGetCurrencyDelegate == null)) {
                this.onBeginGetCurrencyDelegate = new BeginOperationDelegate(this.OnBeginGetCurrency);
            }
            if ((this.onEndGetCurrencyDelegate == null)) {
                this.onEndGetCurrencyDelegate = new EndOperationDelegate(this.OnEndGetCurrency);
            }
            if ((this.onGetCurrencyCompletedDelegate == null)) {
                this.onGetCurrencyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrencyCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrencyDelegate, null, this.onEndGetCurrencyDelegate, this.onGetCurrencyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCustomersByEmail(string Email, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomersByEmail(Email, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> NopMobile.AppCore.NopAPI.INopService.EndGetCustomersByEmail(System.IAsyncResult result) {
            return base.Channel.EndGetCustomersByEmail(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomersByEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Email = ((string)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCustomersByEmail(Email, callback, asyncState);
        }
        
        private object[] OnEndGetCustomersByEmail(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCustomersByEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomersByEmailCompleted(object state) {
            if ((this.GetCustomersByEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomersByEmailCompleted(this, new GetCustomersByEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomersByEmailAsync(string Email) {
            this.GetCustomersByEmailAsync(Email, null);
        }
        
        public void GetCustomersByEmailAsync(string Email, object userState) {
            if ((this.onBeginGetCustomersByEmailDelegate == null)) {
                this.onBeginGetCustomersByEmailDelegate = new BeginOperationDelegate(this.OnBeginGetCustomersByEmail);
            }
            if ((this.onEndGetCustomersByEmailDelegate == null)) {
                this.onEndGetCustomersByEmailDelegate = new EndOperationDelegate(this.OnEndGetCustomersByEmail);
            }
            if ((this.onGetCustomersByEmailCompletedDelegate == null)) {
                this.onGetCustomersByEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomersByEmailCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomersByEmailDelegate, new object[] {
                        Email}, this.onEndGetCustomersByEmailDelegate, this.onGetCustomersByEmailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCustomersByUsername(string Username, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomersByUsername(Username, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> NopMobile.AppCore.NopAPI.INopService.EndGetCustomersByUsername(System.IAsyncResult result) {
            return base.Channel.EndGetCustomersByUsername(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomersByUsername(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Username = ((string)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCustomersByUsername(Username, callback, asyncState);
        }
        
        private object[] OnEndGetCustomersByUsername(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCustomersByUsername(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomersByUsernameCompleted(object state) {
            if ((this.GetCustomersByUsernameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomersByUsernameCompleted(this, new GetCustomersByUsernameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomersByUsernameAsync(string Username) {
            this.GetCustomersByUsernameAsync(Username, null);
        }
        
        public void GetCustomersByUsernameAsync(string Username, object userState) {
            if ((this.onBeginGetCustomersByUsernameDelegate == null)) {
                this.onBeginGetCustomersByUsernameDelegate = new BeginOperationDelegate(this.OnBeginGetCustomersByUsername);
            }
            if ((this.onEndGetCustomersByUsernameDelegate == null)) {
                this.onEndGetCustomersByUsernameDelegate = new EndOperationDelegate(this.OnEndGetCustomersByUsername);
            }
            if ((this.onGetCustomersByUsernameCompletedDelegate == null)) {
                this.onGetCustomersByUsernameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomersByUsernameCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomersByUsernameDelegate, new object[] {
                        Username}, this.onEndGetCustomersByUsernameDelegate, this.onGetCustomersByUsernameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCustomersByFirstname(string Firstname, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomersByFirstname(Firstname, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> NopMobile.AppCore.NopAPI.INopService.EndGetCustomersByFirstname(System.IAsyncResult result) {
            return base.Channel.EndGetCustomersByFirstname(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomersByFirstname(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Firstname = ((string)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCustomersByFirstname(Firstname, callback, asyncState);
        }
        
        private object[] OnEndGetCustomersByFirstname(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCustomersByFirstname(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomersByFirstnameCompleted(object state) {
            if ((this.GetCustomersByFirstnameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomersByFirstnameCompleted(this, new GetCustomersByFirstnameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomersByFirstnameAsync(string Firstname) {
            this.GetCustomersByFirstnameAsync(Firstname, null);
        }
        
        public void GetCustomersByFirstnameAsync(string Firstname, object userState) {
            if ((this.onBeginGetCustomersByFirstnameDelegate == null)) {
                this.onBeginGetCustomersByFirstnameDelegate = new BeginOperationDelegate(this.OnBeginGetCustomersByFirstname);
            }
            if ((this.onEndGetCustomersByFirstnameDelegate == null)) {
                this.onEndGetCustomersByFirstnameDelegate = new EndOperationDelegate(this.OnEndGetCustomersByFirstname);
            }
            if ((this.onGetCustomersByFirstnameCompletedDelegate == null)) {
                this.onGetCustomersByFirstnameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomersByFirstnameCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomersByFirstnameDelegate, new object[] {
                        Firstname}, this.onEndGetCustomersByFirstnameDelegate, this.onGetCustomersByFirstnameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCustomersByLastname(string Lastname, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomersByLastname(Lastname, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> NopMobile.AppCore.NopAPI.INopService.EndGetCustomersByLastname(System.IAsyncResult result) {
            return base.Channel.EndGetCustomersByLastname(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomersByLastname(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Lastname = ((string)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCustomersByLastname(Lastname, callback, asyncState);
        }
        
        private object[] OnEndGetCustomersByLastname(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCustomersByLastname(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomersByLastnameCompleted(object state) {
            if ((this.GetCustomersByLastnameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomersByLastnameCompleted(this, new GetCustomersByLastnameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomersByLastnameAsync(string Lastname) {
            this.GetCustomersByLastnameAsync(Lastname, null);
        }
        
        public void GetCustomersByLastnameAsync(string Lastname, object userState) {
            if ((this.onBeginGetCustomersByLastnameDelegate == null)) {
                this.onBeginGetCustomersByLastnameDelegate = new BeginOperationDelegate(this.OnBeginGetCustomersByLastname);
            }
            if ((this.onEndGetCustomersByLastnameDelegate == null)) {
                this.onEndGetCustomersByLastnameDelegate = new EndOperationDelegate(this.OnEndGetCustomersByLastname);
            }
            if ((this.onGetCustomersByLastnameCompletedDelegate == null)) {
                this.onGetCustomersByLastnameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomersByLastnameCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomersByLastnameDelegate, new object[] {
                        Lastname}, this.onEndGetCustomersByLastnameDelegate, this.onGetCustomersByLastnameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCustomersByFullname(string Fullname, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomersByFullname(Fullname, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> NopMobile.AppCore.NopAPI.INopService.EndGetCustomersByFullname(System.IAsyncResult result) {
            return base.Channel.EndGetCustomersByFullname(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomersByFullname(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Fullname = ((string)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCustomersByFullname(Fullname, callback, asyncState);
        }
        
        private object[] OnEndGetCustomersByFullname(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCustomersByFullname(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomersByFullnameCompleted(object state) {
            if ((this.GetCustomersByFullnameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomersByFullnameCompleted(this, new GetCustomersByFullnameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomersByFullnameAsync(string Fullname) {
            this.GetCustomersByFullnameAsync(Fullname, null);
        }
        
        public void GetCustomersByFullnameAsync(string Fullname, object userState) {
            if ((this.onBeginGetCustomersByFullnameDelegate == null)) {
                this.onBeginGetCustomersByFullnameDelegate = new BeginOperationDelegate(this.OnBeginGetCustomersByFullname);
            }
            if ((this.onEndGetCustomersByFullnameDelegate == null)) {
                this.onEndGetCustomersByFullnameDelegate = new EndOperationDelegate(this.OnEndGetCustomersByFullname);
            }
            if ((this.onGetCustomersByFullnameCompletedDelegate == null)) {
                this.onGetCustomersByFullnameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomersByFullnameCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomersByFullnameDelegate, new object[] {
                        Fullname}, this.onEndGetCustomersByFullnameDelegate, this.onGetCustomersByFullnameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCustomersByCompany(string Company, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomersByCompany(Company, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> NopMobile.AppCore.NopAPI.INopService.EndGetCustomersByCompany(System.IAsyncResult result) {
            return base.Channel.EndGetCustomersByCompany(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomersByCompany(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Company = ((string)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCustomersByCompany(Company, callback, asyncState);
        }
        
        private object[] OnEndGetCustomersByCompany(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCustomersByCompany(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomersByCompanyCompleted(object state) {
            if ((this.GetCustomersByCompanyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomersByCompanyCompleted(this, new GetCustomersByCompanyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomersByCompanyAsync(string Company) {
            this.GetCustomersByCompanyAsync(Company, null);
        }
        
        public void GetCustomersByCompanyAsync(string Company, object userState) {
            if ((this.onBeginGetCustomersByCompanyDelegate == null)) {
                this.onBeginGetCustomersByCompanyDelegate = new BeginOperationDelegate(this.OnBeginGetCustomersByCompany);
            }
            if ((this.onEndGetCustomersByCompanyDelegate == null)) {
                this.onEndGetCustomersByCompanyDelegate = new EndOperationDelegate(this.OnEndGetCustomersByCompany);
            }
            if ((this.onGetCustomersByCompanyCompletedDelegate == null)) {
                this.onGetCustomersByCompanyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomersByCompanyCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomersByCompanyDelegate, new object[] {
                        Company}, this.onEndGetCustomersByCompanyDelegate, this.onGetCustomersByCompanyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCustomersByPhone(string Phone, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomersByPhone(Phone, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> NopMobile.AppCore.NopAPI.INopService.EndGetCustomersByPhone(System.IAsyncResult result) {
            return base.Channel.EndGetCustomersByPhone(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomersByPhone(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Phone = ((string)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCustomersByPhone(Phone, callback, asyncState);
        }
        
        private object[] OnEndGetCustomersByPhone(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCustomersByPhone(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomersByPhoneCompleted(object state) {
            if ((this.GetCustomersByPhoneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomersByPhoneCompleted(this, new GetCustomersByPhoneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomersByPhoneAsync(string Phone) {
            this.GetCustomersByPhoneAsync(Phone, null);
        }
        
        public void GetCustomersByPhoneAsync(string Phone, object userState) {
            if ((this.onBeginGetCustomersByPhoneDelegate == null)) {
                this.onBeginGetCustomersByPhoneDelegate = new BeginOperationDelegate(this.OnBeginGetCustomersByPhone);
            }
            if ((this.onEndGetCustomersByPhoneDelegate == null)) {
                this.onEndGetCustomersByPhoneDelegate = new EndOperationDelegate(this.OnEndGetCustomersByPhone);
            }
            if ((this.onGetCustomersByPhoneCompletedDelegate == null)) {
                this.onGetCustomersByPhoneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomersByPhoneCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomersByPhoneDelegate, new object[] {
                        Phone}, this.onEndGetCustomersByPhoneDelegate, this.onGetCustomersByPhoneCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCustomersByPostalCode(string PostalCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomersByPostalCode(PostalCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> NopMobile.AppCore.NopAPI.INopService.EndGetCustomersByPostalCode(System.IAsyncResult result) {
            return base.Channel.EndGetCustomersByPostalCode(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomersByPostalCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string PostalCode = ((string)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCustomersByPostalCode(PostalCode, callback, asyncState);
        }
        
        private object[] OnEndGetCustomersByPostalCode(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCustomersByPostalCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomersByPostalCodeCompleted(object state) {
            if ((this.GetCustomersByPostalCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomersByPostalCodeCompleted(this, new GetCustomersByPostalCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomersByPostalCodeAsync(string PostalCode) {
            this.GetCustomersByPostalCodeAsync(PostalCode, null);
        }
        
        public void GetCustomersByPostalCodeAsync(string PostalCode, object userState) {
            if ((this.onBeginGetCustomersByPostalCodeDelegate == null)) {
                this.onBeginGetCustomersByPostalCodeDelegate = new BeginOperationDelegate(this.OnBeginGetCustomersByPostalCode);
            }
            if ((this.onEndGetCustomersByPostalCodeDelegate == null)) {
                this.onEndGetCustomersByPostalCodeDelegate = new EndOperationDelegate(this.OnEndGetCustomersByPostalCode);
            }
            if ((this.onGetCustomersByPostalCodeCompletedDelegate == null)) {
                this.onGetCustomersByPostalCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomersByPostalCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomersByPostalCodeDelegate, new object[] {
                        PostalCode}, this.onEndGetCustomersByPostalCodeDelegate, this.onGetCustomersByPostalCodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetCurrentCarts(string Filter, string Email, System.Nullable<int> LowerItems, System.Nullable<int> HigherItems, System.Nullable<decimal> LowerTotal, System.Nullable<decimal> HigherTotal, System.Nullable<bool> Abandoned, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentCarts(Filter, Email, LowerItems, HigherItems, LowerTotal, HigherTotal, Abandoned, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> NopMobile.AppCore.NopAPI.INopService.EndGetCurrentCarts(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentCarts(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentCarts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Filter = ((string)(inValues[0]));
            string Email = ((string)(inValues[1]));
            System.Nullable<int> LowerItems = ((System.Nullable<int>)(inValues[2]));
            System.Nullable<int> HigherItems = ((System.Nullable<int>)(inValues[3]));
            System.Nullable<decimal> LowerTotal = ((System.Nullable<decimal>)(inValues[4]));
            System.Nullable<decimal> HigherTotal = ((System.Nullable<decimal>)(inValues[5]));
            System.Nullable<bool> Abandoned = ((System.Nullable<bool>)(inValues[6]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetCurrentCarts(Filter, Email, LowerItems, HigherItems, LowerTotal, HigherTotal, Abandoned, callback, asyncState);
        }
        
        private object[] OnEndGetCurrentCarts(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetCurrentCarts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentCartsCompleted(object state) {
            if ((this.GetCurrentCartsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentCartsCompleted(this, new GetCurrentCartsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentCartsAsync(string Filter, string Email, System.Nullable<int> LowerItems, System.Nullable<int> HigherItems, System.Nullable<decimal> LowerTotal, System.Nullable<decimal> HigherTotal, System.Nullable<bool> Abandoned) {
            this.GetCurrentCartsAsync(Filter, Email, LowerItems, HigherItems, LowerTotal, HigherTotal, Abandoned, null);
        }
        
        public void GetCurrentCartsAsync(string Filter, string Email, System.Nullable<int> LowerItems, System.Nullable<int> HigherItems, System.Nullable<decimal> LowerTotal, System.Nullable<decimal> HigherTotal, System.Nullable<bool> Abandoned, object userState) {
            if ((this.onBeginGetCurrentCartsDelegate == null)) {
                this.onBeginGetCurrentCartsDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentCarts);
            }
            if ((this.onEndGetCurrentCartsDelegate == null)) {
                this.onEndGetCurrentCartsDelegate = new EndOperationDelegate(this.OnEndGetCurrentCarts);
            }
            if ((this.onGetCurrentCartsCompletedDelegate == null)) {
                this.onGetCurrentCartsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentCartsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentCartsDelegate, new object[] {
                        Filter,
                        Email,
                        LowerItems,
                        HigherItems,
                        LowerTotal,
                        HigherTotal,
                        Abandoned}, this.onEndGetCurrentCartsDelegate, this.onGetCurrentCartsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginGetBestCustomers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBestCustomers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> NopMobile.AppCore.NopAPI.INopService.EndGetBestCustomers(System.IAsyncResult result) {
            return base.Channel.EndGetBestCustomers(result);
        }
        
        private System.IAsyncResult OnBeginGetBestCustomers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginGetBestCustomers(callback, asyncState);
        }
        
        private object[] OnEndGetBestCustomers(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndGetBestCustomers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBestCustomersCompleted(object state) {
            if ((this.GetBestCustomersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBestCustomersCompleted(this, new GetBestCustomersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBestCustomersAsync() {
            this.GetBestCustomersAsync(null);
        }
        
        public void GetBestCustomersAsync(object userState) {
            if ((this.onBeginGetBestCustomersDelegate == null)) {
                this.onBeginGetBestCustomersDelegate = new BeginOperationDelegate(this.OnBeginGetBestCustomers);
            }
            if ((this.onEndGetBestCustomersDelegate == null)) {
                this.onEndGetBestCustomersDelegate = new EndOperationDelegate(this.OnEndGetBestCustomers);
            }
            if ((this.onGetBestCustomersCompletedDelegate == null)) {
                this.onGetBestCustomersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBestCustomersCompleted);
            }
            base.InvokeAsync(this.onBeginGetBestCustomersDelegate, null, this.onEndGetBestCustomersDelegate, this.onGetBestCustomersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginExecuteNonQuery(string sqlStatement, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecuteNonQuery(sqlStatement, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NopMobile.AppCore.NopAPI.INopService.EndExecuteNonQuery(System.IAsyncResult result) {
            base.Channel.EndExecuteNonQuery(result);
        }
        
        private System.IAsyncResult OnBeginExecuteNonQuery(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sqlStatement = ((string)(inValues[0]));
            string usernameOrEmail = ((string)(inValues[1]));
            string userPassword = ((string)(inValues[2]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginExecuteNonQuery(sqlStatement, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        private object[] OnEndExecuteNonQuery(System.IAsyncResult result) {
            ((NopMobile.AppCore.NopAPI.INopService)(this)).EndExecuteNonQuery(result);
            return null;
        }
        
        private void OnExecuteNonQueryCompleted(object state) {
            if ((this.ExecuteNonQueryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteNonQueryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecuteNonQueryAsync(string sqlStatement, string usernameOrEmail, string userPassword) {
            this.ExecuteNonQueryAsync(sqlStatement, usernameOrEmail, userPassword, null);
        }
        
        public void ExecuteNonQueryAsync(string sqlStatement, string usernameOrEmail, string userPassword, object userState) {
            if ((this.onBeginExecuteNonQueryDelegate == null)) {
                this.onBeginExecuteNonQueryDelegate = new BeginOperationDelegate(this.OnBeginExecuteNonQuery);
            }
            if ((this.onEndExecuteNonQueryDelegate == null)) {
                this.onEndExecuteNonQueryDelegate = new EndOperationDelegate(this.OnEndExecuteNonQuery);
            }
            if ((this.onExecuteNonQueryCompletedDelegate == null)) {
                this.onExecuteNonQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteNonQueryCompleted);
            }
            base.InvokeAsync(this.onBeginExecuteNonQueryDelegate, new object[] {
                        sqlStatement,
                        usernameOrEmail,
                        userPassword}, this.onEndExecuteNonQueryDelegate, this.onExecuteNonQueryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginExecuteScalar(string sqlStatement, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecuteScalar(sqlStatement, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        object NopMobile.AppCore.NopAPI.INopService.EndExecuteScalar(System.IAsyncResult result) {
            return base.Channel.EndExecuteScalar(result);
        }
        
        private System.IAsyncResult OnBeginExecuteScalar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sqlStatement = ((string)(inValues[0]));
            string usernameOrEmail = ((string)(inValues[1]));
            string userPassword = ((string)(inValues[2]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginExecuteScalar(sqlStatement, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        private object[] OnEndExecuteScalar(System.IAsyncResult result) {
            object retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndExecuteScalar(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExecuteScalarCompleted(object state) {
            if ((this.ExecuteScalarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteScalarCompleted(this, new ExecuteScalarCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecuteScalarAsync(string sqlStatement, string usernameOrEmail, string userPassword) {
            this.ExecuteScalarAsync(sqlStatement, usernameOrEmail, userPassword, null);
        }
        
        public void ExecuteScalarAsync(string sqlStatement, string usernameOrEmail, string userPassword, object userState) {
            if ((this.onBeginExecuteScalarDelegate == null)) {
                this.onBeginExecuteScalarDelegate = new BeginOperationDelegate(this.OnBeginExecuteScalar);
            }
            if ((this.onEndExecuteScalarDelegate == null)) {
                this.onEndExecuteScalarDelegate = new EndOperationDelegate(this.OnEndExecuteScalar);
            }
            if ((this.onExecuteScalarCompletedDelegate == null)) {
                this.onExecuteScalarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteScalarCompleted);
            }
            base.InvokeAsync(this.onBeginExecuteScalarDelegate, new object[] {
                        sqlStatement,
                        usernameOrEmail,
                        userPassword}, this.onEndExecuteScalarDelegate, this.onExecuteScalarCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginDeleteOrders(System.Collections.Generic.List<int> ordersId, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteOrders(ordersId, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> NopMobile.AppCore.NopAPI.INopService.EndDeleteOrders(System.IAsyncResult result) {
            return base.Channel.EndDeleteOrders(result);
        }
        
        private System.IAsyncResult OnBeginDeleteOrders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<int> ordersId = ((System.Collections.Generic.List<int>)(inValues[0]));
            string usernameOrEmail = ((string)(inValues[1]));
            string userPassword = ((string)(inValues[2]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginDeleteOrders(ordersId, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        private object[] OnEndDeleteOrders(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndDeleteOrders(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteOrdersCompleted(object state) {
            if ((this.DeleteOrdersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteOrdersCompleted(this, new DeleteOrdersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteOrdersAsync(System.Collections.Generic.List<int> ordersId, string usernameOrEmail, string userPassword) {
            this.DeleteOrdersAsync(ordersId, usernameOrEmail, userPassword, null);
        }
        
        public void DeleteOrdersAsync(System.Collections.Generic.List<int> ordersId, string usernameOrEmail, string userPassword, object userState) {
            if ((this.onBeginDeleteOrdersDelegate == null)) {
                this.onBeginDeleteOrdersDelegate = new BeginOperationDelegate(this.OnBeginDeleteOrders);
            }
            if ((this.onEndDeleteOrdersDelegate == null)) {
                this.onEndDeleteOrdersDelegate = new EndOperationDelegate(this.OnEndDeleteOrders);
            }
            if ((this.onDeleteOrdersCompletedDelegate == null)) {
                this.onDeleteOrdersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteOrdersCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteOrdersDelegate, new object[] {
                        ordersId,
                        usernameOrEmail,
                        userPassword}, this.onEndDeleteOrdersDelegate, this.onDeleteOrdersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginDeleteOrdersWithoutUser(System.Collections.Generic.List<int> ordersId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteOrdersWithoutUser(ordersId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> NopMobile.AppCore.NopAPI.INopService.EndDeleteOrdersWithoutUser(System.IAsyncResult result) {
            return base.Channel.EndDeleteOrdersWithoutUser(result);
        }
        
        private System.IAsyncResult OnBeginDeleteOrdersWithoutUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<int> ordersId = ((System.Collections.Generic.List<int>)(inValues[0]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginDeleteOrdersWithoutUser(ordersId, callback, asyncState);
        }
        
        private object[] OnEndDeleteOrdersWithoutUser(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndDeleteOrdersWithoutUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteOrdersWithoutUserCompleted(object state) {
            if ((this.DeleteOrdersWithoutUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteOrdersWithoutUserCompleted(this, new DeleteOrdersWithoutUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteOrdersWithoutUserAsync(System.Collections.Generic.List<int> ordersId) {
            this.DeleteOrdersWithoutUserAsync(ordersId, null);
        }
        
        public void DeleteOrdersWithoutUserAsync(System.Collections.Generic.List<int> ordersId, object userState) {
            if ((this.onBeginDeleteOrdersWithoutUserDelegate == null)) {
                this.onBeginDeleteOrdersWithoutUserDelegate = new BeginOperationDelegate(this.OnBeginDeleteOrdersWithoutUser);
            }
            if ((this.onEndDeleteOrdersWithoutUserDelegate == null)) {
                this.onEndDeleteOrdersWithoutUserDelegate = new EndOperationDelegate(this.OnEndDeleteOrdersWithoutUser);
            }
            if ((this.onDeleteOrdersWithoutUserCompletedDelegate == null)) {
                this.onDeleteOrdersWithoutUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteOrdersWithoutUserCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteOrdersWithoutUserDelegate, new object[] {
                        ordersId}, this.onEndDeleteOrdersWithoutUserDelegate, this.onDeleteOrdersWithoutUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginChangeOrderStatus(int id, NopMobile.AppCore.NopAPI.OrderStatus status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeOrderStatus(id, status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NopMobile.AppCore.NopAPI.INopService.EndChangeOrderStatus(System.IAsyncResult result) {
            base.Channel.EndChangeOrderStatus(result);
        }
        
        private System.IAsyncResult OnBeginChangeOrderStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            NopMobile.AppCore.NopAPI.OrderStatus status = ((NopMobile.AppCore.NopAPI.OrderStatus)(inValues[1]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginChangeOrderStatus(id, status, callback, asyncState);
        }
        
        private object[] OnEndChangeOrderStatus(System.IAsyncResult result) {
            ((NopMobile.AppCore.NopAPI.INopService)(this)).EndChangeOrderStatus(result);
            return null;
        }
        
        private void OnChangeOrderStatusCompleted(object state) {
            if ((this.ChangeOrderStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeOrderStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeOrderStatusAsync(int id, NopMobile.AppCore.NopAPI.OrderStatus status) {
            this.ChangeOrderStatusAsync(id, status, null);
        }
        
        public void ChangeOrderStatusAsync(int id, NopMobile.AppCore.NopAPI.OrderStatus status, object userState) {
            if ((this.onBeginChangeOrderStatusDelegate == null)) {
                this.onBeginChangeOrderStatusDelegate = new BeginOperationDelegate(this.OnBeginChangeOrderStatus);
            }
            if ((this.onEndChangeOrderStatusDelegate == null)) {
                this.onEndChangeOrderStatusDelegate = new EndOperationDelegate(this.OnEndChangeOrderStatus);
            }
            if ((this.onChangeOrderStatusCompletedDelegate == null)) {
                this.onChangeOrderStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeOrderStatusCompleted);
            }
            base.InvokeAsync(this.onBeginChangeOrderStatusDelegate, new object[] {
                        id,
                        status}, this.onEndChangeOrderStatusDelegate, this.onChangeOrderStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginChangePaymentStatus(int id, NopMobile.AppCore.NopAPI.PaymentStatus status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangePaymentStatus(id, status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NopMobile.AppCore.NopAPI.INopService.EndChangePaymentStatus(System.IAsyncResult result) {
            base.Channel.EndChangePaymentStatus(result);
        }
        
        private System.IAsyncResult OnBeginChangePaymentStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            NopMobile.AppCore.NopAPI.PaymentStatus status = ((NopMobile.AppCore.NopAPI.PaymentStatus)(inValues[1]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginChangePaymentStatus(id, status, callback, asyncState);
        }
        
        private object[] OnEndChangePaymentStatus(System.IAsyncResult result) {
            ((NopMobile.AppCore.NopAPI.INopService)(this)).EndChangePaymentStatus(result);
            return null;
        }
        
        private void OnChangePaymentStatusCompleted(object state) {
            if ((this.ChangePaymentStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangePaymentStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangePaymentStatusAsync(int id, NopMobile.AppCore.NopAPI.PaymentStatus status) {
            this.ChangePaymentStatusAsync(id, status, null);
        }
        
        public void ChangePaymentStatusAsync(int id, NopMobile.AppCore.NopAPI.PaymentStatus status, object userState) {
            if ((this.onBeginChangePaymentStatusDelegate == null)) {
                this.onBeginChangePaymentStatusDelegate = new BeginOperationDelegate(this.OnBeginChangePaymentStatus);
            }
            if ((this.onEndChangePaymentStatusDelegate == null)) {
                this.onEndChangePaymentStatusDelegate = new EndOperationDelegate(this.OnEndChangePaymentStatus);
            }
            if ((this.onChangePaymentStatusCompletedDelegate == null)) {
                this.onChangePaymentStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangePaymentStatusCompleted);
            }
            base.InvokeAsync(this.onBeginChangePaymentStatusDelegate, new object[] {
                        id,
                        status}, this.onEndChangePaymentStatusDelegate, this.onChangePaymentStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginChangeShippingStatus(int id, NopMobile.AppCore.NopAPI.ShippingStatus status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeShippingStatus(id, status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NopMobile.AppCore.NopAPI.INopService.EndChangeShippingStatus(System.IAsyncResult result) {
            base.Channel.EndChangeShippingStatus(result);
        }
        
        private System.IAsyncResult OnBeginChangeShippingStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            NopMobile.AppCore.NopAPI.ShippingStatus status = ((NopMobile.AppCore.NopAPI.ShippingStatus)(inValues[1]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginChangeShippingStatus(id, status, callback, asyncState);
        }
        
        private object[] OnEndChangeShippingStatus(System.IAsyncResult result) {
            ((NopMobile.AppCore.NopAPI.INopService)(this)).EndChangeShippingStatus(result);
            return null;
        }
        
        private void OnChangeShippingStatusCompleted(object state) {
            if ((this.ChangeShippingStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeShippingStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeShippingStatusAsync(int id, NopMobile.AppCore.NopAPI.ShippingStatus status) {
            this.ChangeShippingStatusAsync(id, status, null);
        }
        
        public void ChangeShippingStatusAsync(int id, NopMobile.AppCore.NopAPI.ShippingStatus status, object userState) {
            if ((this.onBeginChangeShippingStatusDelegate == null)) {
                this.onBeginChangeShippingStatusDelegate = new BeginOperationDelegate(this.OnBeginChangeShippingStatus);
            }
            if ((this.onEndChangeShippingStatusDelegate == null)) {
                this.onEndChangeShippingStatusDelegate = new EndOperationDelegate(this.OnEndChangeShippingStatus);
            }
            if ((this.onChangeShippingStatusCompletedDelegate == null)) {
                this.onChangeShippingStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeShippingStatusCompleted);
            }
            base.InvokeAsync(this.onBeginChangeShippingStatusDelegate, new object[] {
                        id,
                        status}, this.onEndChangeShippingStatusDelegate, this.onChangeShippingStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginAddCommentToCustomer(string email, string comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddCommentToCustomer(email, comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NopMobile.AppCore.NopAPI.INopService.EndAddCommentToCustomer(System.IAsyncResult result) {
            base.Channel.EndAddCommentToCustomer(result);
        }
        
        private System.IAsyncResult OnBeginAddCommentToCustomer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            string comment = ((string)(inValues[1]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginAddCommentToCustomer(email, comment, callback, asyncState);
        }
        
        private object[] OnEndAddCommentToCustomer(System.IAsyncResult result) {
            ((NopMobile.AppCore.NopAPI.INopService)(this)).EndAddCommentToCustomer(result);
            return null;
        }
        
        private void OnAddCommentToCustomerCompleted(object state) {
            if ((this.AddCommentToCustomerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCommentToCustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddCommentToCustomerAsync(string email, string comment) {
            this.AddCommentToCustomerAsync(email, comment, null);
        }
        
        public void AddCommentToCustomerAsync(string email, string comment, object userState) {
            if ((this.onBeginAddCommentToCustomerDelegate == null)) {
                this.onBeginAddCommentToCustomerDelegate = new BeginOperationDelegate(this.OnBeginAddCommentToCustomer);
            }
            if ((this.onEndAddCommentToCustomerDelegate == null)) {
                this.onEndAddCommentToCustomerDelegate = new EndOperationDelegate(this.OnEndAddCommentToCustomer);
            }
            if ((this.onAddCommentToCustomerCompletedDelegate == null)) {
                this.onAddCommentToCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCommentToCustomerCompleted);
            }
            base.InvokeAsync(this.onBeginAddCommentToCustomerDelegate, new object[] {
                        email,
                        comment}, this.onEndAddCommentToCustomerDelegate, this.onAddCommentToCustomerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginAddOrderNote(int orderId, string note, bool displayToCustomer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddOrderNote(orderId, note, displayToCustomer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NopMobile.AppCore.NopAPI.INopService.EndAddOrderNote(System.IAsyncResult result) {
            base.Channel.EndAddOrderNote(result);
        }
        
        private System.IAsyncResult OnBeginAddOrderNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int orderId = ((int)(inValues[0]));
            string note = ((string)(inValues[1]));
            bool displayToCustomer = ((bool)(inValues[2]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginAddOrderNote(orderId, note, displayToCustomer, callback, asyncState);
        }
        
        private object[] OnEndAddOrderNote(System.IAsyncResult result) {
            ((NopMobile.AppCore.NopAPI.INopService)(this)).EndAddOrderNote(result);
            return null;
        }
        
        private void OnAddOrderNoteCompleted(object state) {
            if ((this.AddOrderNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddOrderNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddOrderNoteAsync(int orderId, string note, bool displayToCustomer) {
            this.AddOrderNoteAsync(orderId, note, displayToCustomer, null);
        }
        
        public void AddOrderNoteAsync(int orderId, string note, bool displayToCustomer, object userState) {
            if ((this.onBeginAddOrderNoteDelegate == null)) {
                this.onBeginAddOrderNoteDelegate = new BeginOperationDelegate(this.OnBeginAddOrderNote);
            }
            if ((this.onEndAddOrderNoteDelegate == null)) {
                this.onEndAddOrderNoteDelegate = new EndOperationDelegate(this.OnEndAddOrderNote);
            }
            if ((this.onAddOrderNoteCompletedDelegate == null)) {
                this.onAddOrderNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddOrderNoteCompleted);
            }
            base.InvokeAsync(this.onBeginAddOrderNoteDelegate, new object[] {
                        orderId,
                        note,
                        displayToCustomer}, this.onEndAddOrderNoteDelegate, this.onAddOrderNoteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginUpdateOrderBillingInfo(
                    int orderId, 
                    string firstName, 
                    string lastName, 
                    string phone, 
                    string email, 
                    string fax, 
                    string company, 
                    string address1, 
                    string address2, 
                    string city, 
                    string region, 
                    string country, 
                    string postalCode, 
                    string usernameOrEmail, 
                    string userPassword, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginUpdateOrderBillingInfo(orderId, firstName, lastName, phone, email, fax, company, address1, address2, city, region, country, postalCode, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NopMobile.AppCore.NopAPI.INopService.EndUpdateOrderBillingInfo(System.IAsyncResult result) {
            base.Channel.EndUpdateOrderBillingInfo(result);
        }
        
        private System.IAsyncResult OnBeginUpdateOrderBillingInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int orderId = ((int)(inValues[0]));
            string firstName = ((string)(inValues[1]));
            string lastName = ((string)(inValues[2]));
            string phone = ((string)(inValues[3]));
            string email = ((string)(inValues[4]));
            string fax = ((string)(inValues[5]));
            string company = ((string)(inValues[6]));
            string address1 = ((string)(inValues[7]));
            string address2 = ((string)(inValues[8]));
            string city = ((string)(inValues[9]));
            string region = ((string)(inValues[10]));
            string country = ((string)(inValues[11]));
            string postalCode = ((string)(inValues[12]));
            string usernameOrEmail = ((string)(inValues[13]));
            string userPassword = ((string)(inValues[14]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginUpdateOrderBillingInfo(orderId, firstName, lastName, phone, email, fax, company, address1, address2, city, region, country, postalCode, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        private object[] OnEndUpdateOrderBillingInfo(System.IAsyncResult result) {
            ((NopMobile.AppCore.NopAPI.INopService)(this)).EndUpdateOrderBillingInfo(result);
            return null;
        }
        
        private void OnUpdateOrderBillingInfoCompleted(object state) {
            if ((this.UpdateOrderBillingInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateOrderBillingInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateOrderBillingInfoAsync(int orderId, string firstName, string lastName, string phone, string email, string fax, string company, string address1, string address2, string city, string region, string country, string postalCode, string usernameOrEmail, string userPassword) {
            this.UpdateOrderBillingInfoAsync(orderId, firstName, lastName, phone, email, fax, company, address1, address2, city, region, country, postalCode, usernameOrEmail, userPassword, null);
        }
        
        public void UpdateOrderBillingInfoAsync(
                    int orderId, 
                    string firstName, 
                    string lastName, 
                    string phone, 
                    string email, 
                    string fax, 
                    string company, 
                    string address1, 
                    string address2, 
                    string city, 
                    string region, 
                    string country, 
                    string postalCode, 
                    string usernameOrEmail, 
                    string userPassword, 
                    object userState) {
            if ((this.onBeginUpdateOrderBillingInfoDelegate == null)) {
                this.onBeginUpdateOrderBillingInfoDelegate = new BeginOperationDelegate(this.OnBeginUpdateOrderBillingInfo);
            }
            if ((this.onEndUpdateOrderBillingInfoDelegate == null)) {
                this.onEndUpdateOrderBillingInfoDelegate = new EndOperationDelegate(this.OnEndUpdateOrderBillingInfo);
            }
            if ((this.onUpdateOrderBillingInfoCompletedDelegate == null)) {
                this.onUpdateOrderBillingInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateOrderBillingInfoCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateOrderBillingInfoDelegate, new object[] {
                        orderId,
                        firstName,
                        lastName,
                        phone,
                        email,
                        fax,
                        company,
                        address1,
                        address2,
                        city,
                        region,
                        country,
                        postalCode,
                        usernameOrEmail,
                        userPassword}, this.onEndUpdateOrderBillingInfoDelegate, this.onUpdateOrderBillingInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginUpdateOrderShippingInfo(
                    int orderId, 
                    string firstName, 
                    string lastName, 
                    string phone, 
                    string email, 
                    string fax, 
                    string company, 
                    string address1, 
                    string address2, 
                    string city, 
                    string region, 
                    string country, 
                    string postalCode, 
                    string usernameOrEmail, 
                    string userPassword, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginUpdateOrderShippingInfo(orderId, firstName, lastName, phone, email, fax, company, address1, address2, city, region, country, postalCode, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NopMobile.AppCore.NopAPI.INopService.EndUpdateOrderShippingInfo(System.IAsyncResult result) {
            base.Channel.EndUpdateOrderShippingInfo(result);
        }
        
        private System.IAsyncResult OnBeginUpdateOrderShippingInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int orderId = ((int)(inValues[0]));
            string firstName = ((string)(inValues[1]));
            string lastName = ((string)(inValues[2]));
            string phone = ((string)(inValues[3]));
            string email = ((string)(inValues[4]));
            string fax = ((string)(inValues[5]));
            string company = ((string)(inValues[6]));
            string address1 = ((string)(inValues[7]));
            string address2 = ((string)(inValues[8]));
            string city = ((string)(inValues[9]));
            string region = ((string)(inValues[10]));
            string country = ((string)(inValues[11]));
            string postalCode = ((string)(inValues[12]));
            string usernameOrEmail = ((string)(inValues[13]));
            string userPassword = ((string)(inValues[14]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginUpdateOrderShippingInfo(orderId, firstName, lastName, phone, email, fax, company, address1, address2, city, region, country, postalCode, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        private object[] OnEndUpdateOrderShippingInfo(System.IAsyncResult result) {
            ((NopMobile.AppCore.NopAPI.INopService)(this)).EndUpdateOrderShippingInfo(result);
            return null;
        }
        
        private void OnUpdateOrderShippingInfoCompleted(object state) {
            if ((this.UpdateOrderShippingInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateOrderShippingInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateOrderShippingInfoAsync(int orderId, string firstName, string lastName, string phone, string email, string fax, string company, string address1, string address2, string city, string region, string country, string postalCode, string usernameOrEmail, string userPassword) {
            this.UpdateOrderShippingInfoAsync(orderId, firstName, lastName, phone, email, fax, company, address1, address2, city, region, country, postalCode, usernameOrEmail, userPassword, null);
        }
        
        public void UpdateOrderShippingInfoAsync(
                    int orderId, 
                    string firstName, 
                    string lastName, 
                    string phone, 
                    string email, 
                    string fax, 
                    string company, 
                    string address1, 
                    string address2, 
                    string city, 
                    string region, 
                    string country, 
                    string postalCode, 
                    string usernameOrEmail, 
                    string userPassword, 
                    object userState) {
            if ((this.onBeginUpdateOrderShippingInfoDelegate == null)) {
                this.onBeginUpdateOrderShippingInfoDelegate = new BeginOperationDelegate(this.OnBeginUpdateOrderShippingInfo);
            }
            if ((this.onEndUpdateOrderShippingInfoDelegate == null)) {
                this.onEndUpdateOrderShippingInfoDelegate = new EndOperationDelegate(this.OnEndUpdateOrderShippingInfo);
            }
            if ((this.onUpdateOrderShippingInfoCompletedDelegate == null)) {
                this.onUpdateOrderShippingInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateOrderShippingInfoCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateOrderShippingInfoDelegate, new object[] {
                        orderId,
                        firstName,
                        lastName,
                        phone,
                        email,
                        fax,
                        company,
                        address1,
                        address2,
                        city,
                        region,
                        country,
                        postalCode,
                        usernameOrEmail,
                        userPassword}, this.onEndUpdateOrderShippingInfoDelegate, this.onUpdateOrderShippingInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginSetOrderPaymentPaid(int orderId, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetOrderPaymentPaid(orderId, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NopMobile.AppCore.NopAPI.INopService.EndSetOrderPaymentPaid(System.IAsyncResult result) {
            base.Channel.EndSetOrderPaymentPaid(result);
        }
        
        private System.IAsyncResult OnBeginSetOrderPaymentPaid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int orderId = ((int)(inValues[0]));
            string usernameOrEmail = ((string)(inValues[1]));
            string userPassword = ((string)(inValues[2]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginSetOrderPaymentPaid(orderId, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        private object[] OnEndSetOrderPaymentPaid(System.IAsyncResult result) {
            ((NopMobile.AppCore.NopAPI.INopService)(this)).EndSetOrderPaymentPaid(result);
            return null;
        }
        
        private void OnSetOrderPaymentPaidCompleted(object state) {
            if ((this.SetOrderPaymentPaidCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetOrderPaymentPaidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetOrderPaymentPaidAsync(int orderId, string usernameOrEmail, string userPassword) {
            this.SetOrderPaymentPaidAsync(orderId, usernameOrEmail, userPassword, null);
        }
        
        public void SetOrderPaymentPaidAsync(int orderId, string usernameOrEmail, string userPassword, object userState) {
            if ((this.onBeginSetOrderPaymentPaidDelegate == null)) {
                this.onBeginSetOrderPaymentPaidDelegate = new BeginOperationDelegate(this.OnBeginSetOrderPaymentPaid);
            }
            if ((this.onEndSetOrderPaymentPaidDelegate == null)) {
                this.onEndSetOrderPaymentPaidDelegate = new EndOperationDelegate(this.OnEndSetOrderPaymentPaid);
            }
            if ((this.onSetOrderPaymentPaidCompletedDelegate == null)) {
                this.onSetOrderPaymentPaidCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetOrderPaymentPaidCompleted);
            }
            base.InvokeAsync(this.onBeginSetOrderPaymentPaidDelegate, new object[] {
                        orderId,
                        usernameOrEmail,
                        userPassword}, this.onEndSetOrderPaymentPaidDelegate, this.onSetOrderPaymentPaidCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginSetOrderPaymentPaidWithMethod(int orderId, string paymentMethodName, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetOrderPaymentPaidWithMethod(orderId, paymentMethodName, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NopMobile.AppCore.NopAPI.INopService.EndSetOrderPaymentPaidWithMethod(System.IAsyncResult result) {
            base.Channel.EndSetOrderPaymentPaidWithMethod(result);
        }
        
        private System.IAsyncResult OnBeginSetOrderPaymentPaidWithMethod(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int orderId = ((int)(inValues[0]));
            string paymentMethodName = ((string)(inValues[1]));
            string usernameOrEmail = ((string)(inValues[2]));
            string userPassword = ((string)(inValues[3]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginSetOrderPaymentPaidWithMethod(orderId, paymentMethodName, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        private object[] OnEndSetOrderPaymentPaidWithMethod(System.IAsyncResult result) {
            ((NopMobile.AppCore.NopAPI.INopService)(this)).EndSetOrderPaymentPaidWithMethod(result);
            return null;
        }
        
        private void OnSetOrderPaymentPaidWithMethodCompleted(object state) {
            if ((this.SetOrderPaymentPaidWithMethodCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetOrderPaymentPaidWithMethodCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetOrderPaymentPaidWithMethodAsync(int orderId, string paymentMethodName, string usernameOrEmail, string userPassword) {
            this.SetOrderPaymentPaidWithMethodAsync(orderId, paymentMethodName, usernameOrEmail, userPassword, null);
        }
        
        public void SetOrderPaymentPaidWithMethodAsync(int orderId, string paymentMethodName, string usernameOrEmail, string userPassword, object userState) {
            if ((this.onBeginSetOrderPaymentPaidWithMethodDelegate == null)) {
                this.onBeginSetOrderPaymentPaidWithMethodDelegate = new BeginOperationDelegate(this.OnBeginSetOrderPaymentPaidWithMethod);
            }
            if ((this.onEndSetOrderPaymentPaidWithMethodDelegate == null)) {
                this.onEndSetOrderPaymentPaidWithMethodDelegate = new EndOperationDelegate(this.OnEndSetOrderPaymentPaidWithMethod);
            }
            if ((this.onSetOrderPaymentPaidWithMethodCompletedDelegate == null)) {
                this.onSetOrderPaymentPaidWithMethodCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetOrderPaymentPaidWithMethodCompleted);
            }
            base.InvokeAsync(this.onBeginSetOrderPaymentPaidWithMethodDelegate, new object[] {
                        orderId,
                        paymentMethodName,
                        usernameOrEmail,
                        userPassword}, this.onEndSetOrderPaymentPaidWithMethodDelegate, this.onSetOrderPaymentPaidWithMethodCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginSetOrderPaymentPending(int orderId, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetOrderPaymentPending(orderId, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NopMobile.AppCore.NopAPI.INopService.EndSetOrderPaymentPending(System.IAsyncResult result) {
            base.Channel.EndSetOrderPaymentPending(result);
        }
        
        private System.IAsyncResult OnBeginSetOrderPaymentPending(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int orderId = ((int)(inValues[0]));
            string usernameOrEmail = ((string)(inValues[1]));
            string userPassword = ((string)(inValues[2]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginSetOrderPaymentPending(orderId, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        private object[] OnEndSetOrderPaymentPending(System.IAsyncResult result) {
            ((NopMobile.AppCore.NopAPI.INopService)(this)).EndSetOrderPaymentPending(result);
            return null;
        }
        
        private void OnSetOrderPaymentPendingCompleted(object state) {
            if ((this.SetOrderPaymentPendingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetOrderPaymentPendingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetOrderPaymentPendingAsync(int orderId, string usernameOrEmail, string userPassword) {
            this.SetOrderPaymentPendingAsync(orderId, usernameOrEmail, userPassword, null);
        }
        
        public void SetOrderPaymentPendingAsync(int orderId, string usernameOrEmail, string userPassword, object userState) {
            if ((this.onBeginSetOrderPaymentPendingDelegate == null)) {
                this.onBeginSetOrderPaymentPendingDelegate = new BeginOperationDelegate(this.OnBeginSetOrderPaymentPending);
            }
            if ((this.onEndSetOrderPaymentPendingDelegate == null)) {
                this.onEndSetOrderPaymentPendingDelegate = new EndOperationDelegate(this.OnEndSetOrderPaymentPending);
            }
            if ((this.onSetOrderPaymentPendingCompletedDelegate == null)) {
                this.onSetOrderPaymentPendingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetOrderPaymentPendingCompleted);
            }
            base.InvokeAsync(this.onBeginSetOrderPaymentPendingDelegate, new object[] {
                        orderId,
                        usernameOrEmail,
                        userPassword}, this.onEndSetOrderPaymentPendingDelegate, this.onSetOrderPaymentPendingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginSetOrderPaymentRefund(int orderId, bool offline, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetOrderPaymentRefund(orderId, offline, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NopMobile.AppCore.NopAPI.INopService.EndSetOrderPaymentRefund(System.IAsyncResult result) {
            base.Channel.EndSetOrderPaymentRefund(result);
        }
        
        private System.IAsyncResult OnBeginSetOrderPaymentRefund(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int orderId = ((int)(inValues[0]));
            bool offline = ((bool)(inValues[1]));
            string usernameOrEmail = ((string)(inValues[2]));
            string userPassword = ((string)(inValues[3]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginSetOrderPaymentRefund(orderId, offline, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        private object[] OnEndSetOrderPaymentRefund(System.IAsyncResult result) {
            ((NopMobile.AppCore.NopAPI.INopService)(this)).EndSetOrderPaymentRefund(result);
            return null;
        }
        
        private void OnSetOrderPaymentRefundCompleted(object state) {
            if ((this.SetOrderPaymentRefundCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetOrderPaymentRefundCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetOrderPaymentRefundAsync(int orderId, bool offline, string usernameOrEmail, string userPassword) {
            this.SetOrderPaymentRefundAsync(orderId, offline, usernameOrEmail, userPassword, null);
        }
        
        public void SetOrderPaymentRefundAsync(int orderId, bool offline, string usernameOrEmail, string userPassword, object userState) {
            if ((this.onBeginSetOrderPaymentRefundDelegate == null)) {
                this.onBeginSetOrderPaymentRefundDelegate = new BeginOperationDelegate(this.OnBeginSetOrderPaymentRefund);
            }
            if ((this.onEndSetOrderPaymentRefundDelegate == null)) {
                this.onEndSetOrderPaymentRefundDelegate = new EndOperationDelegate(this.OnEndSetOrderPaymentRefund);
            }
            if ((this.onSetOrderPaymentRefundCompletedDelegate == null)) {
                this.onSetOrderPaymentRefundCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetOrderPaymentRefundCompleted);
            }
            base.InvokeAsync(this.onBeginSetOrderPaymentRefundDelegate, new object[] {
                        orderId,
                        offline,
                        usernameOrEmail,
                        userPassword}, this.onEndSetOrderPaymentRefundDelegate, this.onSetOrderPaymentRefundCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NopMobile.AppCore.NopAPI.INopService.BeginSetOrdersStatusCanceled(System.Collections.Generic.List<int> ordersId, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetOrdersStatusCanceled(ordersId, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> NopMobile.AppCore.NopAPI.INopService.EndSetOrdersStatusCanceled(System.IAsyncResult result) {
            return base.Channel.EndSetOrdersStatusCanceled(result);
        }
        
        private System.IAsyncResult OnBeginSetOrdersStatusCanceled(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<int> ordersId = ((System.Collections.Generic.List<int>)(inValues[0]));
            string usernameOrEmail = ((string)(inValues[1]));
            string userPassword = ((string)(inValues[2]));
            return ((NopMobile.AppCore.NopAPI.INopService)(this)).BeginSetOrdersStatusCanceled(ordersId, usernameOrEmail, userPassword, callback, asyncState);
        }
        
        private object[] OnEndSetOrdersStatusCanceled(System.IAsyncResult result) {
            System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> retVal = ((NopMobile.AppCore.NopAPI.INopService)(this)).EndSetOrdersStatusCanceled(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetOrdersStatusCanceledCompleted(object state) {
            if ((this.SetOrdersStatusCanceledCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetOrdersStatusCanceledCompleted(this, new SetOrdersStatusCanceledCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetOrdersStatusCanceledAsync(System.Collections.Generic.List<int> ordersId, string usernameOrEmail, string userPassword) {
            this.SetOrdersStatusCanceledAsync(ordersId, usernameOrEmail, userPassword, null);
        }
        
        public void SetOrdersStatusCanceledAsync(System.Collections.Generic.List<int> ordersId, string usernameOrEmail, string userPassword, object userState) {
            if ((this.onBeginSetOrdersStatusCanceledDelegate == null)) {
                this.onBeginSetOrdersStatusCanceledDelegate = new BeginOperationDelegate(this.OnBeginSetOrdersStatusCanceled);
            }
            if ((this.onEndSetOrdersStatusCanceledDelegate == null)) {
                this.onEndSetOrdersStatusCanceledDelegate = new EndOperationDelegate(this.OnEndSetOrdersStatusCanceled);
            }
            if ((this.onSetOrdersStatusCanceledCompletedDelegate == null)) {
                this.onSetOrdersStatusCanceledCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetOrdersStatusCanceledCompleted);
            }
            base.InvokeAsync(this.onBeginSetOrdersStatusCanceledDelegate, new object[] {
                        ordersId,
                        usernameOrEmail,
                        userPassword}, this.onEndSetOrdersStatusCanceledDelegate, this.onSetOrdersStatusCanceledCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override NopMobile.AppCore.NopAPI.INopService CreateChannel() {
            return new NopServiceClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INopService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INopService)) {
                return new System.ServiceModel.EndpointAddress("http://absampaio-001-site1.myasp.net/Plugins/Misc.WebServices/Remote/NopService.s" +
                        "vc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return NopServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_INopService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return NopServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_INopService);
        }
        
        private class NopServiceClientChannel : ChannelBase<NopMobile.AppCore.NopAPI.INopService>, NopMobile.AppCore.NopAPI.INopService {
            
            public NopServiceClientChannel(System.ServiceModel.ClientBase<NopMobile.AppCore.NopAPI.INopService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCheckLogin(string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = usernameOrEmail;
                _args[1] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("CheckLogin", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCheckLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CheckLogin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckLoginClient(string UsernameOrEmail, string UserPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = UsernameOrEmail;
                _args[1] = UserPassword;
                System.IAsyncResult _result = base.BeginInvoke("CheckLoginClient", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCheckLoginClient(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CheckLoginClient", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRegisterClient(bool Male, string Firstname, string Lastname, System.DateTime Birthday, string Email, string Company, string Password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = Male;
                _args[1] = Firstname;
                _args[2] = Lastname;
                _args[3] = Birthday;
                _args[4] = Email;
                _args[5] = Company;
                _args[6] = Password;
                System.IAsyncResult _result = base.BeginInvoke("RegisterClient", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRegisterClient(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RegisterClient", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFeaturedProducts(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("FeaturedProducts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> EndFeaturedProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO>)(base.EndInvoke("FeaturedProducts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRecentlyViewedProducts(int number, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = number;
                System.IAsyncResult _result = base.BeginInvoke("RecentlyViewedProducts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> EndRecentlyViewedProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO>)(base.EndInvoke("RecentlyViewedProducts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMainCategories(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMainCategories", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO> EndGetMainCategories(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO>)(base.EndInvoke("GetMainCategories", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSubCategoriesFromParent(int Id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Id;
                System.IAsyncResult _result = base.BeginInvoke("GetSubCategoriesFromParent", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO> EndGetSubCategoriesFromParent(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CategoryDTO>)(base.EndInvoke("GetSubCategoriesFromParent", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveFromCart(string Username, int CartItemId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = Username;
                _args[1] = CartItemId;
                System.IAsyncResult _result = base.BeginInvoke("RemoveFromCart", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveFromCart(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveFromCart", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStoreUrl(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStoreUrl", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetStoreUrl(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetStoreUrl", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCategoryProductsSortedFiltered(int CatId, bool Sorted, bool Filtered, NopMobile.AppCore.NopAPI.ProductSortingEnum Sorting, decimal Max, decimal Min, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = CatId;
                _args[1] = Sorted;
                _args[2] = Filtered;
                _args[3] = Sorting;
                _args[4] = Max;
                _args[5] = Min;
                System.IAsyncResult _result = base.BeginInvoke("CategoryProductsSortedFiltered", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> EndCategoryProductsSortedFiltered(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO>)(base.EndInvoke("CategoryProductsSortedFiltered", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginShippingMethods(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ShippingMethods", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndShippingMethods(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("ShippingMethods", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPaymentMethods(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("PaymentMethods", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndPaymentMethods(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("PaymentMethods", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetShippingFees(int CustomerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = CustomerId;
                System.IAsyncResult _result = base.BeginInvoke("GetShippingFees", _args, callback, asyncState);
                return _result;
            }
            
            public decimal EndGetShippingFees(System.IAsyncResult result) {
                object[] _args = new object[0];
                decimal _result = ((decimal)(base.EndInvoke("GetShippingFees", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTaxFees(int CustomerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = CustomerId;
                System.IAsyncResult _result = base.BeginInvoke("GetTaxFees", _args, callback, asyncState);
                return _result;
            }
            
            public decimal EndGetTaxFees(System.IAsyncResult result) {
                object[] _args = new object[0];
                decimal _result = ((decimal)(base.EndInvoke("GetTaxFees", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReOrder(int OrderId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = OrderId;
                System.IAsyncResult _result = base.BeginInvoke("ReOrder", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndReOrder(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ReOrder", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPdfInvoice(int OrderId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = OrderId;
                System.IAsyncResult _result = base.BeginInvoke("GetPdfInvoice", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetPdfInvoice(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetPdfInvoice", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddAddress(string Email, string Firstname, string Lastname, string CountryName, string Province, string City, string Street, string PostalCode, string PhoneNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = Email;
                _args[1] = Firstname;
                _args[2] = Lastname;
                _args[3] = CountryName;
                _args[4] = Province;
                _args[5] = City;
                _args[6] = Street;
                _args[7] = PostalCode;
                _args[8] = PhoneNumber;
                System.IAsyncResult _result = base.BeginInvoke("AddAddress", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddAddress(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddAddress", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllCountries(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllCountries", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CountryDTO> EndGetAllCountries(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CountryDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CountryDTO>)(base.EndInvoke("GetAllCountries", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddNewOrder(int CustomerId, int BillingAddressId, int ShippingAddressId, string ShippingMethod, string PaymentMethod, bool GiftWrap, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = CustomerId;
                _args[1] = BillingAddressId;
                _args[2] = ShippingAddressId;
                _args[3] = ShippingMethod;
                _args[4] = PaymentMethod;
                _args[5] = GiftWrap;
                System.IAsyncResult _result = base.BeginInvoke("AddNewOrder", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndAddNewOrder(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("AddNewOrder", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddToCart(string Username, int ProdId, int Quantity, System.Collections.Generic.List<string> Attributes, NopMobile.AppCore.NopAPI.ShoppingCartType Type, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = Username;
                _args[1] = ProdId;
                _args[2] = Quantity;
                _args[3] = Attributes;
                _args[4] = Type;
                System.IAsyncResult _result = base.BeginInvoke("AddToCart", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddToCart(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddToCart", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProductById(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetProductById", _args, callback, asyncState);
                return _result;
            }
            
            public NopMobile.AppCore.NopAPI.ProductDTO EndGetProductById(System.IAsyncResult result) {
                object[] _args = new object[0];
                NopMobile.AppCore.NopAPI.ProductDTO _result = ((NopMobile.AppCore.NopAPI.ProductDTO)(base.EndInvoke("GetProductById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllProductsFromCategory(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetAllProductsFromCategory", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> EndGetAllProductsFromCategory(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO>)(base.EndInvoke("GetAllProductsFromCategory", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCategoryById(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetCategoryById", _args, callback, asyncState);
                return _result;
            }
            
            public NopMobile.AppCore.NopAPI.CategoryDTO EndGetCategoryById(System.IAsyncResult result) {
                object[] _args = new object[0];
                NopMobile.AppCore.NopAPI.CategoryDTO _result = ((NopMobile.AppCore.NopAPI.CategoryDTO)(base.EndInvoke("GetCategoryById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProductsByKeywords(string Words, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Words;
                System.IAsyncResult _result = base.BeginInvoke("GetProductsByKeywords", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> EndGetProductsByKeywords(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.ProductDTO>)(base.EndInvoke("GetProductsByKeywords", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserName(string usernameOrEmail, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = usernameOrEmail;
                System.IAsyncResult _result = base.BeginInvoke("GetUserName", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetUserName(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetUserName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOrders(int storeId, int vendorId, int customerId, int productId, int affiliateId, System.Nullable<NopMobile.AppCore.NopAPI.OrderStatus> os, System.Nullable<NopMobile.AppCore.NopAPI.PaymentStatus> ps, System.Nullable<NopMobile.AppCore.NopAPI.ShippingStatus> ss, string billingEmail, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[11];
                _args[0] = storeId;
                _args[1] = vendorId;
                _args[2] = customerId;
                _args[3] = productId;
                _args[4] = affiliateId;
                _args[5] = os;
                _args[6] = ps;
                _args[7] = ss;
                _args[8] = billingEmail;
                _args[9] = pageIndex;
                _args[10] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetOrders", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderDTO> EndGetOrders(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderDTO>)(base.EndInvoke("GetOrders", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOrderById(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetOrderById", _args, callback, asyncState);
                return _result;
            }
            
            public NopMobile.AppCore.NopAPI.OrderDTO EndGetOrderById(System.IAsyncResult result) {
                object[] _args = new object[0];
                NopMobile.AppCore.NopAPI.OrderDTO _result = ((NopMobile.AppCore.NopAPI.OrderDTO)(base.EndInvoke("GetOrderById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomerList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCustomerList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomerList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(base.EndInvoke("GetCustomerList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPendingTotal(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPendingTotal", _args, callback, asyncState);
                return _result;
            }
            
            public decimal EndGetPendingTotal(System.IAsyncResult result) {
                object[] _args = new object[0];
                decimal _result = ((decimal)(base.EndInvoke("GetPendingTotal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEndSession(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("EndSession", _args, callback, asyncState);
                return _result;
            }
            
            public void EndEndSession(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("EndSession", _args, result);
            }
            
            public System.IAsyncResult BeginGetCompleteTotal(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCompleteTotal", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetCompleteTotal(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetCompleteTotal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCancelledTotal(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCancelledTotal", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetCancelledTotal(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetCancelledTotal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStoreName(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStoreName", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetStoreName(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetStoreName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRegisteredUsersCountByTime(int days, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = days;
                System.IAsyncResult _result = base.BeginInvoke("GetRegisteredUsersCountByTime", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetRegisteredUsersCountByTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetRegisteredUsersCountByTime", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTotalSalesByTime(int days, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = days;
                System.IAsyncResult _result = base.BeginInvoke("GetTotalSalesByTime", _args, callback, asyncState);
                return _result;
            }
            
            public decimal EndGetTotalSalesByTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                decimal _result = ((decimal)(base.EndInvoke("GetTotalSalesByTime", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTotalPendingByReason(string reason, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = reason;
                System.IAsyncResult _result = base.BeginInvoke("GetTotalPendingByReason", _args, callback, asyncState);
                return _result;
            }
            
            public decimal EndGetTotalPendingByReason(System.IAsyncResult result) {
                object[] _args = new object[0];
                decimal _result = ((decimal)(base.EndInvoke("GetTotalPendingByReason", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPendingOrdersCount(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPendingOrdersCount", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetPendingOrdersCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetPendingOrdersCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCurrentCartsCount(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCurrentCartsCount", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetCurrentCartsCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetCurrentCartsCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWishlistCount(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetWishlistCount", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetWishlistCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetWishlistCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOnlineCount(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetOnlineCount", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetOnlineCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetOnlineCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRegisteredCustomersCount(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetRegisteredCustomersCount", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetRegisteredCustomersCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetRegisteredCustomersCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVendorsCount(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetVendorsCount", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetVendorsCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetVendorsCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPopularKeywords(int KeywordNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = KeywordNumber;
                System.IAsyncResult _result = base.BeginInvoke("GetPopularKeywords", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.KeywordDTO> EndGetPopularKeywords(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.KeywordDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.KeywordDTO>)(base.EndInvoke("GetPopularKeywords", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBestsellersByAmount(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBestsellersByAmount", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO> EndGetBestsellersByAmount(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO>)(base.EndInvoke("GetBestsellersByAmount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBestsellersByQuantity(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBestsellersByQuantity", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO> EndGetBestsellersByQuantity(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.BestsellerDTO>)(base.EndInvoke("GetBestsellersByQuantity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCurrency(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCurrency", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetCurrency(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetCurrency", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomersByEmail(string Email, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Email;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomersByEmail", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByEmail(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(base.EndInvoke("GetCustomersByEmail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomersByUsername(string Username, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Username;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomersByUsername", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByUsername(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(base.EndInvoke("GetCustomersByUsername", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomersByFirstname(string Firstname, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Firstname;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomersByFirstname", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByFirstname(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(base.EndInvoke("GetCustomersByFirstname", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomersByLastname(string Lastname, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Lastname;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomersByLastname", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByLastname(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(base.EndInvoke("GetCustomersByLastname", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomersByFullname(string Fullname, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Fullname;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomersByFullname", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByFullname(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(base.EndInvoke("GetCustomersByFullname", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomersByCompany(string Company, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Company;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomersByCompany", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByCompany(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(base.EndInvoke("GetCustomersByCompany", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomersByPhone(string Phone, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Phone;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomersByPhone", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByPhone(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(base.EndInvoke("GetCustomersByPhone", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomersByPostalCode(string PostalCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PostalCode;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomersByPostalCode", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCustomersByPostalCode(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(base.EndInvoke("GetCustomersByPostalCode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCurrentCarts(string Filter, string Email, System.Nullable<int> LowerItems, System.Nullable<int> HigherItems, System.Nullable<decimal> LowerTotal, System.Nullable<decimal> HigherTotal, System.Nullable<bool> Abandoned, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = Filter;
                _args[1] = Email;
                _args[2] = LowerItems;
                _args[3] = HigherItems;
                _args[4] = LowerTotal;
                _args[5] = HigherTotal;
                _args[6] = Abandoned;
                System.IAsyncResult _result = base.BeginInvoke("GetCurrentCarts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetCurrentCarts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(base.EndInvoke("GetCurrentCarts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBestCustomers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBestCustomers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> EndGetBestCustomers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.CustomerDTO>)(base.EndInvoke("GetBestCustomers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExecuteNonQuery(string sqlStatement, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = sqlStatement;
                _args[1] = usernameOrEmail;
                _args[2] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("ExecuteNonQuery", _args, callback, asyncState);
                return _result;
            }
            
            public void EndExecuteNonQuery(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ExecuteNonQuery", _args, result);
            }
            
            public System.IAsyncResult BeginExecuteScalar(string sqlStatement, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = sqlStatement;
                _args[1] = usernameOrEmail;
                _args[2] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("ExecuteScalar", _args, callback, asyncState);
                return _result;
            }
            
            public object EndExecuteScalar(System.IAsyncResult result) {
                object[] _args = new object[0];
                object _result = ((object)(base.EndInvoke("ExecuteScalar", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteOrders(System.Collections.Generic.List<int> ordersId, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ordersId;
                _args[1] = usernameOrEmail;
                _args[2] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("DeleteOrders", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> EndDeleteOrders(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError>)(base.EndInvoke("DeleteOrders", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteOrdersWithoutUser(System.Collections.Generic.List<int> ordersId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ordersId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteOrdersWithoutUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> EndDeleteOrdersWithoutUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError>)(base.EndInvoke("DeleteOrdersWithoutUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginChangeOrderStatus(int id, NopMobile.AppCore.NopAPI.OrderStatus status, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = status;
                System.IAsyncResult _result = base.BeginInvoke("ChangeOrderStatus", _args, callback, asyncState);
                return _result;
            }
            
            public void EndChangeOrderStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ChangeOrderStatus", _args, result);
            }
            
            public System.IAsyncResult BeginChangePaymentStatus(int id, NopMobile.AppCore.NopAPI.PaymentStatus status, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = status;
                System.IAsyncResult _result = base.BeginInvoke("ChangePaymentStatus", _args, callback, asyncState);
                return _result;
            }
            
            public void EndChangePaymentStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ChangePaymentStatus", _args, result);
            }
            
            public System.IAsyncResult BeginChangeShippingStatus(int id, NopMobile.AppCore.NopAPI.ShippingStatus status, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = status;
                System.IAsyncResult _result = base.BeginInvoke("ChangeShippingStatus", _args, callback, asyncState);
                return _result;
            }
            
            public void EndChangeShippingStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ChangeShippingStatus", _args, result);
            }
            
            public System.IAsyncResult BeginAddCommentToCustomer(string email, string comment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = email;
                _args[1] = comment;
                System.IAsyncResult _result = base.BeginInvoke("AddCommentToCustomer", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddCommentToCustomer(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddCommentToCustomer", _args, result);
            }
            
            public System.IAsyncResult BeginAddOrderNote(int orderId, string note, bool displayToCustomer, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = orderId;
                _args[1] = note;
                _args[2] = displayToCustomer;
                System.IAsyncResult _result = base.BeginInvoke("AddOrderNote", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddOrderNote(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddOrderNote", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateOrderBillingInfo(
                        int orderId, 
                        string firstName, 
                        string lastName, 
                        string phone, 
                        string email, 
                        string fax, 
                        string company, 
                        string address1, 
                        string address2, 
                        string city, 
                        string region, 
                        string country, 
                        string postalCode, 
                        string usernameOrEmail, 
                        string userPassword, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[15];
                _args[0] = orderId;
                _args[1] = firstName;
                _args[2] = lastName;
                _args[3] = phone;
                _args[4] = email;
                _args[5] = fax;
                _args[6] = company;
                _args[7] = address1;
                _args[8] = address2;
                _args[9] = city;
                _args[10] = region;
                _args[11] = country;
                _args[12] = postalCode;
                _args[13] = usernameOrEmail;
                _args[14] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("UpdateOrderBillingInfo", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateOrderBillingInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateOrderBillingInfo", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateOrderShippingInfo(
                        int orderId, 
                        string firstName, 
                        string lastName, 
                        string phone, 
                        string email, 
                        string fax, 
                        string company, 
                        string address1, 
                        string address2, 
                        string city, 
                        string region, 
                        string country, 
                        string postalCode, 
                        string usernameOrEmail, 
                        string userPassword, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[15];
                _args[0] = orderId;
                _args[1] = firstName;
                _args[2] = lastName;
                _args[3] = phone;
                _args[4] = email;
                _args[5] = fax;
                _args[6] = company;
                _args[7] = address1;
                _args[8] = address2;
                _args[9] = city;
                _args[10] = region;
                _args[11] = country;
                _args[12] = postalCode;
                _args[13] = usernameOrEmail;
                _args[14] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("UpdateOrderShippingInfo", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateOrderShippingInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateOrderShippingInfo", _args, result);
            }
            
            public System.IAsyncResult BeginSetOrderPaymentPaid(int orderId, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = orderId;
                _args[1] = usernameOrEmail;
                _args[2] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("SetOrderPaymentPaid", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetOrderPaymentPaid(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetOrderPaymentPaid", _args, result);
            }
            
            public System.IAsyncResult BeginSetOrderPaymentPaidWithMethod(int orderId, string paymentMethodName, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = orderId;
                _args[1] = paymentMethodName;
                _args[2] = usernameOrEmail;
                _args[3] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("SetOrderPaymentPaidWithMethod", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetOrderPaymentPaidWithMethod(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetOrderPaymentPaidWithMethod", _args, result);
            }
            
            public System.IAsyncResult BeginSetOrderPaymentPending(int orderId, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = orderId;
                _args[1] = usernameOrEmail;
                _args[2] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("SetOrderPaymentPending", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetOrderPaymentPending(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetOrderPaymentPending", _args, result);
            }
            
            public System.IAsyncResult BeginSetOrderPaymentRefund(int orderId, bool offline, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = orderId;
                _args[1] = offline;
                _args[2] = usernameOrEmail;
                _args[3] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("SetOrderPaymentRefund", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetOrderPaymentRefund(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetOrderPaymentRefund", _args, result);
            }
            
            public System.IAsyncResult BeginSetOrdersStatusCanceled(System.Collections.Generic.List<int> ordersId, string usernameOrEmail, string userPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ordersId;
                _args[1] = usernameOrEmail;
                _args[2] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("SetOrdersStatusCanceled", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> EndSetOrdersStatusCanceled(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError> _result = ((System.Collections.Generic.List<NopMobile.AppCore.NopAPI.OrderError>)(base.EndInvoke("SetOrdersStatusCanceled", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_INopService,
        }
    }
}
