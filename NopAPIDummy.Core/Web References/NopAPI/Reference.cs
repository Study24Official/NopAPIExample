//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace NopMobile.Core.NopAPI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_INopService", Namespace="http://tempuri.org/")]
    public partial class NopService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPendingTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompleteTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCancelledTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStoreNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegisteredUsersCountByTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalSalesByTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalPendingByReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPendingOrdersCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentCartsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWishlistCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOnlineCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegisteredCustomersCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPopularKeywordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBestsellersByAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBestsellersByQuantityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersByUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersByFirstnameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersByLastnameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersByFullnameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersByCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersByPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersByPostalCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentCartsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBestCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteNonQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteScalarOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrdersWithoutUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeOrderStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePaymentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeShippingStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCommentToCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrderNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrderBillingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrderShippingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOrderPaymentPaidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOrderPaymentPaidWithMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOrderPaymentPendingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOrderPaymentRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOrdersStatusCanceledOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NopService() {
            this.Url = "http://absampaio-001-site1.myasp.net/Plugins/Misc.WebServices/Remote/NopService.s" +
                "vc";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPaymentMethodCompletedEventHandler GetPaymentMethodCompleted;
        
        /// <remarks/>
        public event CheckLoginCompletedEventHandler CheckLoginCompleted;
        
        /// <remarks/>
        public event GetUserNameCompletedEventHandler GetUserNameCompleted;
        
        /// <remarks/>
        public event GetOrdersCompletedEventHandler GetOrdersCompleted;
        
        /// <remarks/>
        public event GetOrderByIdCompletedEventHandler GetOrderByIdCompleted;
        
        /// <remarks/>
        public event GetCustomerListCompletedEventHandler GetCustomerListCompleted;
        
        /// <remarks/>
        public event GetPendingTotalCompletedEventHandler GetPendingTotalCompleted;
        
        /// <remarks/>
        public event EndSessionCompletedEventHandler EndSessionCompleted;
        
        /// <remarks/>
        public event GetCompleteTotalCompletedEventHandler GetCompleteTotalCompleted;
        
        /// <remarks/>
        public event GetCancelledTotalCompletedEventHandler GetCancelledTotalCompleted;
        
        /// <remarks/>
        public event GetStoreNameCompletedEventHandler GetStoreNameCompleted;
        
        /// <remarks/>
        public event GetRegisteredUsersCountByTimeCompletedEventHandler GetRegisteredUsersCountByTimeCompleted;
        
        /// <remarks/>
        public event GetTotalSalesByTimeCompletedEventHandler GetTotalSalesByTimeCompleted;
        
        /// <remarks/>
        public event GetTotalPendingByReasonCompletedEventHandler GetTotalPendingByReasonCompleted;
        
        /// <remarks/>
        public event GetPendingOrdersCountCompletedEventHandler GetPendingOrdersCountCompleted;
        
        /// <remarks/>
        public event GetCurrentCartsCountCompletedEventHandler GetCurrentCartsCountCompleted;
        
        /// <remarks/>
        public event GetWishlistCountCompletedEventHandler GetWishlistCountCompleted;
        
        /// <remarks/>
        public event GetOnlineCountCompletedEventHandler GetOnlineCountCompleted;
        
        /// <remarks/>
        public event GetRegisteredCustomersCountCompletedEventHandler GetRegisteredCustomersCountCompleted;
        
        /// <remarks/>
        public event GetVendorsCountCompletedEventHandler GetVendorsCountCompleted;
        
        /// <remarks/>
        public event GetPopularKeywordsCompletedEventHandler GetPopularKeywordsCompleted;
        
        /// <remarks/>
        public event GetBestsellersByAmountCompletedEventHandler GetBestsellersByAmountCompleted;
        
        /// <remarks/>
        public event GetBestsellersByQuantityCompletedEventHandler GetBestsellersByQuantityCompleted;
        
        /// <remarks/>
        public event GetCurrencyCompletedEventHandler GetCurrencyCompleted;
        
        /// <remarks/>
        public event GetCustomersByEmailCompletedEventHandler GetCustomersByEmailCompleted;
        
        /// <remarks/>
        public event GetCustomersByUsernameCompletedEventHandler GetCustomersByUsernameCompleted;
        
        /// <remarks/>
        public event GetCustomersByFirstnameCompletedEventHandler GetCustomersByFirstnameCompleted;
        
        /// <remarks/>
        public event GetCustomersByLastnameCompletedEventHandler GetCustomersByLastnameCompleted;
        
        /// <remarks/>
        public event GetCustomersByFullnameCompletedEventHandler GetCustomersByFullnameCompleted;
        
        /// <remarks/>
        public event GetCustomersByCompanyCompletedEventHandler GetCustomersByCompanyCompleted;
        
        /// <remarks/>
        public event GetCustomersByPhoneCompletedEventHandler GetCustomersByPhoneCompleted;
        
        /// <remarks/>
        public event GetCustomersByPostalCodeCompletedEventHandler GetCustomersByPostalCodeCompleted;
        
        /// <remarks/>
        public event GetCurrentCartsCompletedEventHandler GetCurrentCartsCompleted;
        
        /// <remarks/>
        public event GetBestCustomersCompletedEventHandler GetBestCustomersCompleted;
        
        /// <remarks/>
        public event ExecuteDataSetCompletedEventHandler ExecuteDataSetCompleted;
        
        /// <remarks/>
        public event ExecuteNonQueryCompletedEventHandler ExecuteNonQueryCompleted;
        
        /// <remarks/>
        public event ExecuteScalarCompletedEventHandler ExecuteScalarCompleted;
        
        /// <remarks/>
        public event DeleteOrdersCompletedEventHandler DeleteOrdersCompleted;
        
        /// <remarks/>
        public event DeleteOrdersWithoutUserCompletedEventHandler DeleteOrdersWithoutUserCompleted;
        
        /// <remarks/>
        public event ChangeOrderStatusCompletedEventHandler ChangeOrderStatusCompleted;
        
        /// <remarks/>
        public event ChangePaymentStatusCompletedEventHandler ChangePaymentStatusCompleted;
        
        /// <remarks/>
        public event ChangeShippingStatusCompletedEventHandler ChangeShippingStatusCompleted;
        
        /// <remarks/>
        public event AddCommentToCustomerCompletedEventHandler AddCommentToCustomerCompleted;
        
        /// <remarks/>
        public event AddOrderNoteCompletedEventHandler AddOrderNoteCompleted;
        
        /// <remarks/>
        public event UpdateOrderBillingInfoCompletedEventHandler UpdateOrderBillingInfoCompleted;
        
        /// <remarks/>
        public event UpdateOrderShippingInfoCompletedEventHandler UpdateOrderShippingInfoCompleted;
        
        /// <remarks/>
        public event SetOrderPaymentPaidCompletedEventHandler SetOrderPaymentPaidCompleted;
        
        /// <remarks/>
        public event SetOrderPaymentPaidWithMethodCompletedEventHandler SetOrderPaymentPaidWithMethodCompleted;
        
        /// <remarks/>
        public event SetOrderPaymentPendingCompletedEventHandler SetOrderPaymentPendingCompleted;
        
        /// <remarks/>
        public event SetOrderPaymentRefundCompletedEventHandler SetOrderPaymentRefundCompleted;
        
        /// <remarks/>
        public event SetOrdersStatusCanceledCompletedEventHandler SetOrdersStatusCanceledCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetPaymentMethod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPaymentMethod(string usernameOrEmail, string userPassword) {
            object[] results = this.Invoke("GetPaymentMethod", new object[] {
                        usernameOrEmail,
                        userPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentMethodAsync(string usernameOrEmail, string userPassword) {
            this.GetPaymentMethodAsync(usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void GetPaymentMethodAsync(string usernameOrEmail, string userPassword, object userState) {
            if ((this.GetPaymentMethodOperationCompleted == null)) {
                this.GetPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("GetPaymentMethod", new object[] {
                        usernameOrEmail,
                        userPassword}, this.GetPaymentMethodOperationCompleted, userState);
        }
        
        private void OnGetPaymentMethodOperationCompleted(object arg) {
            if ((this.GetPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentMethodCompleted(this, new GetPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/CheckLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckLogin(string usernameOrEmail, string userPassword) {
            this.Invoke("CheckLogin", new object[] {
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void CheckLoginAsync(string usernameOrEmail, string userPassword) {
            this.CheckLoginAsync(usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void CheckLoginAsync(string usernameOrEmail, string userPassword, object userState) {
            if ((this.CheckLoginOperationCompleted == null)) {
                this.CheckLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLoginOperationCompleted);
            }
            this.InvokeAsync("CheckLogin", new object[] {
                        usernameOrEmail,
                        userPassword}, this.CheckLoginOperationCompleted, userState);
        }
        
        private void OnCheckLoginOperationCompleted(object arg) {
            if ((this.CheckLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetUserName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserName(string usernameOrEmail) {
            object[] results = this.Invoke("GetUserName", new object[] {
                        usernameOrEmail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserNameAsync(string usernameOrEmail) {
            this.GetUserNameAsync(usernameOrEmail, null);
        }
        
        /// <remarks/>
        public void GetUserNameAsync(string usernameOrEmail, object userState) {
            if ((this.GetUserNameOperationCompleted == null)) {
                this.GetUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserNameOperationCompleted);
            }
            this.InvokeAsync("GetUserName", new object[] {
                        usernameOrEmail}, this.GetUserNameOperationCompleted, userState);
        }
        
        private void OnGetUserNameOperationCompleted(object arg) {
            if ((this.GetUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserNameCompleted(this, new GetUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderDTO[] GetOrders(int storeId, int vendorId, int customerId, int productId, int affiliateId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderStatus> os, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<PaymentStatus> ps, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<ShippingStatus> ss, string billingEmail, int pageIndex, int pageSize) {
            object[] results = this.Invoke("GetOrders", new object[] {
                        storeId,
                        vendorId,
                        customerId,
                        productId,
                        affiliateId,
                        os,
                        ps,
                        ss,
                        billingEmail,
                        pageIndex,
                        pageSize});
            return ((OrderDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersAsync(int storeId, int vendorId, int customerId, int productId, int affiliateId, System.Nullable<OrderStatus> os, System.Nullable<PaymentStatus> ps, System.Nullable<ShippingStatus> ss, string billingEmail, int pageIndex, int pageSize) {
            this.GetOrdersAsync(storeId, vendorId, customerId, productId, affiliateId, os, ps, ss, billingEmail, pageIndex, pageSize, null);
        }
        
        /// <remarks/>
        public void GetOrdersAsync(int storeId, int vendorId, int customerId, int productId, int affiliateId, System.Nullable<OrderStatus> os, System.Nullable<PaymentStatus> ps, System.Nullable<ShippingStatus> ss, string billingEmail, int pageIndex, int pageSize, object userState) {
            if ((this.GetOrdersOperationCompleted == null)) {
                this.GetOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersOperationCompleted);
            }
            this.InvokeAsync("GetOrders", new object[] {
                        storeId,
                        vendorId,
                        customerId,
                        productId,
                        affiliateId,
                        os,
                        ps,
                        ss,
                        billingEmail,
                        pageIndex,
                        pageSize}, this.GetOrdersOperationCompleted, userState);
        }
        
        private void OnGetOrdersOperationCompleted(object arg) {
            if ((this.GetOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersCompleted(this, new GetOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetOrderById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderDTO GetOrderById(int id) {
            object[] results = this.Invoke("GetOrderById", new object[] {
                        id});
            return ((OrderDTO)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderByIdAsync(int id) {
            this.GetOrderByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetOrderByIdAsync(int id, object userState) {
            if ((this.GetOrderByIdOperationCompleted == null)) {
                this.GetOrderByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderByIdOperationCompleted);
            }
            this.InvokeAsync("GetOrderById", new object[] {
                        id}, this.GetOrderByIdOperationCompleted, userState);
        }
        
        private void OnGetOrderByIdOperationCompleted(object arg) {
            if ((this.GetOrderByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderByIdCompleted(this, new GetOrderByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCustomerList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDTO[] GetCustomerList() {
            object[] results = this.Invoke("GetCustomerList", new object[0]);
            return ((CustomerDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerListAsync() {
            this.GetCustomerListAsync(null);
        }
        
        /// <remarks/>
        public void GetCustomerListAsync(object userState) {
            if ((this.GetCustomerListOperationCompleted == null)) {
                this.GetCustomerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerListOperationCompleted);
            }
            this.InvokeAsync("GetCustomerList", new object[0], this.GetCustomerListOperationCompleted, userState);
        }
        
        private void OnGetCustomerListOperationCompleted(object arg) {
            if ((this.GetCustomerListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerListCompleted(this, new GetCustomerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetPendingTotal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetPendingTotal() {
            object[] results = this.Invoke("GetPendingTotal", new object[0]);
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetPendingTotalAsync() {
            this.GetPendingTotalAsync(null);
        }
        
        /// <remarks/>
        public void GetPendingTotalAsync(object userState) {
            if ((this.GetPendingTotalOperationCompleted == null)) {
                this.GetPendingTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPendingTotalOperationCompleted);
            }
            this.InvokeAsync("GetPendingTotal", new object[0], this.GetPendingTotalOperationCompleted, userState);
        }
        
        private void OnGetPendingTotalOperationCompleted(object arg) {
            if ((this.GetPendingTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPendingTotalCompleted(this, new GetPendingTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/EndSession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EndSession() {
            this.Invoke("EndSession", new object[0]);
        }
        
        /// <remarks/>
        public void EndSessionAsync() {
            this.EndSessionAsync(null);
        }
        
        /// <remarks/>
        public void EndSessionAsync(object userState) {
            if ((this.EndSessionOperationCompleted == null)) {
                this.EndSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndSessionOperationCompleted);
            }
            this.InvokeAsync("EndSession", new object[0], this.EndSessionOperationCompleted, userState);
        }
        
        private void OnEndSessionOperationCompleted(object arg) {
            if ((this.EndSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCompleteTotal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCompleteTotal() {
            object[] results = this.Invoke("GetCompleteTotal", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompleteTotalAsync() {
            this.GetCompleteTotalAsync(null);
        }
        
        /// <remarks/>
        public void GetCompleteTotalAsync(object userState) {
            if ((this.GetCompleteTotalOperationCompleted == null)) {
                this.GetCompleteTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompleteTotalOperationCompleted);
            }
            this.InvokeAsync("GetCompleteTotal", new object[0], this.GetCompleteTotalOperationCompleted, userState);
        }
        
        private void OnGetCompleteTotalOperationCompleted(object arg) {
            if ((this.GetCompleteTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompleteTotalCompleted(this, new GetCompleteTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCancelledTotal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCancelledTotal() {
            object[] results = this.Invoke("GetCancelledTotal", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCancelledTotalAsync() {
            this.GetCancelledTotalAsync(null);
        }
        
        /// <remarks/>
        public void GetCancelledTotalAsync(object userState) {
            if ((this.GetCancelledTotalOperationCompleted == null)) {
                this.GetCancelledTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCancelledTotalOperationCompleted);
            }
            this.InvokeAsync("GetCancelledTotal", new object[0], this.GetCancelledTotalOperationCompleted, userState);
        }
        
        private void OnGetCancelledTotalOperationCompleted(object arg) {
            if ((this.GetCancelledTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCancelledTotalCompleted(this, new GetCancelledTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetStoreName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStoreName() {
            object[] results = this.Invoke("GetStoreName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStoreNameAsync() {
            this.GetStoreNameAsync(null);
        }
        
        /// <remarks/>
        public void GetStoreNameAsync(object userState) {
            if ((this.GetStoreNameOperationCompleted == null)) {
                this.GetStoreNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoreNameOperationCompleted);
            }
            this.InvokeAsync("GetStoreName", new object[0], this.GetStoreNameOperationCompleted, userState);
        }
        
        private void OnGetStoreNameOperationCompleted(object arg) {
            if ((this.GetStoreNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoreNameCompleted(this, new GetStoreNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetRegisteredUsersCountByTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRegisteredUsersCountByTime(int days) {
            object[] results = this.Invoke("GetRegisteredUsersCountByTime", new object[] {
                        days});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegisteredUsersCountByTimeAsync(int days) {
            this.GetRegisteredUsersCountByTimeAsync(days, null);
        }
        
        /// <remarks/>
        public void GetRegisteredUsersCountByTimeAsync(int days, object userState) {
            if ((this.GetRegisteredUsersCountByTimeOperationCompleted == null)) {
                this.GetRegisteredUsersCountByTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegisteredUsersCountByTimeOperationCompleted);
            }
            this.InvokeAsync("GetRegisteredUsersCountByTime", new object[] {
                        days}, this.GetRegisteredUsersCountByTimeOperationCompleted, userState);
        }
        
        private void OnGetRegisteredUsersCountByTimeOperationCompleted(object arg) {
            if ((this.GetRegisteredUsersCountByTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegisteredUsersCountByTimeCompleted(this, new GetRegisteredUsersCountByTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetTotalSalesByTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetTotalSalesByTime(int days) {
            object[] results = this.Invoke("GetTotalSalesByTime", new object[] {
                        days});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalSalesByTimeAsync(int days) {
            this.GetTotalSalesByTimeAsync(days, null);
        }
        
        /// <remarks/>
        public void GetTotalSalesByTimeAsync(int days, object userState) {
            if ((this.GetTotalSalesByTimeOperationCompleted == null)) {
                this.GetTotalSalesByTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalSalesByTimeOperationCompleted);
            }
            this.InvokeAsync("GetTotalSalesByTime", new object[] {
                        days}, this.GetTotalSalesByTimeOperationCompleted, userState);
        }
        
        private void OnGetTotalSalesByTimeOperationCompleted(object arg) {
            if ((this.GetTotalSalesByTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalSalesByTimeCompleted(this, new GetTotalSalesByTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetTotalPendingByReason", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetTotalPendingByReason(string reason) {
            object[] results = this.Invoke("GetTotalPendingByReason", new object[] {
                        reason});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalPendingByReasonAsync(string reason) {
            this.GetTotalPendingByReasonAsync(reason, null);
        }
        
        /// <remarks/>
        public void GetTotalPendingByReasonAsync(string reason, object userState) {
            if ((this.GetTotalPendingByReasonOperationCompleted == null)) {
                this.GetTotalPendingByReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalPendingByReasonOperationCompleted);
            }
            this.InvokeAsync("GetTotalPendingByReason", new object[] {
                        reason}, this.GetTotalPendingByReasonOperationCompleted, userState);
        }
        
        private void OnGetTotalPendingByReasonOperationCompleted(object arg) {
            if ((this.GetTotalPendingByReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalPendingByReasonCompleted(this, new GetTotalPendingByReasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetPendingOrdersCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPendingOrdersCount() {
            object[] results = this.Invoke("GetPendingOrdersCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPendingOrdersCountAsync() {
            this.GetPendingOrdersCountAsync(null);
        }
        
        /// <remarks/>
        public void GetPendingOrdersCountAsync(object userState) {
            if ((this.GetPendingOrdersCountOperationCompleted == null)) {
                this.GetPendingOrdersCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPendingOrdersCountOperationCompleted);
            }
            this.InvokeAsync("GetPendingOrdersCount", new object[0], this.GetPendingOrdersCountOperationCompleted, userState);
        }
        
        private void OnGetPendingOrdersCountOperationCompleted(object arg) {
            if ((this.GetPendingOrdersCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPendingOrdersCountCompleted(this, new GetPendingOrdersCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCurrentCartsCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCurrentCartsCount() {
            object[] results = this.Invoke("GetCurrentCartsCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentCartsCountAsync() {
            this.GetCurrentCartsCountAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentCartsCountAsync(object userState) {
            if ((this.GetCurrentCartsCountOperationCompleted == null)) {
                this.GetCurrentCartsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentCartsCountOperationCompleted);
            }
            this.InvokeAsync("GetCurrentCartsCount", new object[0], this.GetCurrentCartsCountOperationCompleted, userState);
        }
        
        private void OnGetCurrentCartsCountOperationCompleted(object arg) {
            if ((this.GetCurrentCartsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentCartsCountCompleted(this, new GetCurrentCartsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetWishlistCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetWishlistCount() {
            object[] results = this.Invoke("GetWishlistCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetWishlistCountAsync() {
            this.GetWishlistCountAsync(null);
        }
        
        /// <remarks/>
        public void GetWishlistCountAsync(object userState) {
            if ((this.GetWishlistCountOperationCompleted == null)) {
                this.GetWishlistCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWishlistCountOperationCompleted);
            }
            this.InvokeAsync("GetWishlistCount", new object[0], this.GetWishlistCountOperationCompleted, userState);
        }
        
        private void OnGetWishlistCountOperationCompleted(object arg) {
            if ((this.GetWishlistCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWishlistCountCompleted(this, new GetWishlistCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetOnlineCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOnlineCount() {
            object[] results = this.Invoke("GetOnlineCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOnlineCountAsync() {
            this.GetOnlineCountAsync(null);
        }
        
        /// <remarks/>
        public void GetOnlineCountAsync(object userState) {
            if ((this.GetOnlineCountOperationCompleted == null)) {
                this.GetOnlineCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOnlineCountOperationCompleted);
            }
            this.InvokeAsync("GetOnlineCount", new object[0], this.GetOnlineCountOperationCompleted, userState);
        }
        
        private void OnGetOnlineCountOperationCompleted(object arg) {
            if ((this.GetOnlineCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOnlineCountCompleted(this, new GetOnlineCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetRegisteredCustomersCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRegisteredCustomersCount() {
            object[] results = this.Invoke("GetRegisteredCustomersCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegisteredCustomersCountAsync() {
            this.GetRegisteredCustomersCountAsync(null);
        }
        
        /// <remarks/>
        public void GetRegisteredCustomersCountAsync(object userState) {
            if ((this.GetRegisteredCustomersCountOperationCompleted == null)) {
                this.GetRegisteredCustomersCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegisteredCustomersCountOperationCompleted);
            }
            this.InvokeAsync("GetRegisteredCustomersCount", new object[0], this.GetRegisteredCustomersCountOperationCompleted, userState);
        }
        
        private void OnGetRegisteredCustomersCountOperationCompleted(object arg) {
            if ((this.GetRegisteredCustomersCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegisteredCustomersCountCompleted(this, new GetRegisteredCustomersCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetVendorsCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVendorsCount() {
            object[] results = this.Invoke("GetVendorsCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorsCountAsync() {
            this.GetVendorsCountAsync(null);
        }
        
        /// <remarks/>
        public void GetVendorsCountAsync(object userState) {
            if ((this.GetVendorsCountOperationCompleted == null)) {
                this.GetVendorsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorsCountOperationCompleted);
            }
            this.InvokeAsync("GetVendorsCount", new object[0], this.GetVendorsCountOperationCompleted, userState);
        }
        
        private void OnGetVendorsCountOperationCompleted(object arg) {
            if ((this.GetVendorsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorsCountCompleted(this, new GetVendorsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetPopularKeywords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetPopularKeywords(int KeywordNumber) {
            object[] results = this.Invoke("GetPopularKeywords", new object[] {
                        KeywordNumber});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPopularKeywordsAsync(int KeywordNumber) {
            this.GetPopularKeywordsAsync(KeywordNumber, null);
        }
        
        /// <remarks/>
        public void GetPopularKeywordsAsync(int KeywordNumber, object userState) {
            if ((this.GetPopularKeywordsOperationCompleted == null)) {
                this.GetPopularKeywordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPopularKeywordsOperationCompleted);
            }
            this.InvokeAsync("GetPopularKeywords", new object[] {
                        KeywordNumber}, this.GetPopularKeywordsOperationCompleted, userState);
        }
        
        private void OnGetPopularKeywordsOperationCompleted(object arg) {
            if ((this.GetPopularKeywordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPopularKeywordsCompleted(this, new GetPopularKeywordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetBestsellersByAmount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetBestsellersByAmount() {
            object[] results = this.Invoke("GetBestsellersByAmount", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBestsellersByAmountAsync() {
            this.GetBestsellersByAmountAsync(null);
        }
        
        /// <remarks/>
        public void GetBestsellersByAmountAsync(object userState) {
            if ((this.GetBestsellersByAmountOperationCompleted == null)) {
                this.GetBestsellersByAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBestsellersByAmountOperationCompleted);
            }
            this.InvokeAsync("GetBestsellersByAmount", new object[0], this.GetBestsellersByAmountOperationCompleted, userState);
        }
        
        private void OnGetBestsellersByAmountOperationCompleted(object arg) {
            if ((this.GetBestsellersByAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBestsellersByAmountCompleted(this, new GetBestsellersByAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetBestsellersByQuantity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetBestsellersByQuantity() {
            object[] results = this.Invoke("GetBestsellersByQuantity", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBestsellersByQuantityAsync() {
            this.GetBestsellersByQuantityAsync(null);
        }
        
        /// <remarks/>
        public void GetBestsellersByQuantityAsync(object userState) {
            if ((this.GetBestsellersByQuantityOperationCompleted == null)) {
                this.GetBestsellersByQuantityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBestsellersByQuantityOperationCompleted);
            }
            this.InvokeAsync("GetBestsellersByQuantity", new object[0], this.GetBestsellersByQuantityOperationCompleted, userState);
        }
        
        private void OnGetBestsellersByQuantityOperationCompleted(object arg) {
            if ((this.GetBestsellersByQuantityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBestsellersByQuantityCompleted(this, new GetBestsellersByQuantityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCurrency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrency() {
            object[] results = this.Invoke("GetCurrency", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyAsync() {
            this.GetCurrencyAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrencyAsync(object userState) {
            if ((this.GetCurrencyOperationCompleted == null)) {
                this.GetCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyOperationCompleted);
            }
            this.InvokeAsync("GetCurrency", new object[0], this.GetCurrencyOperationCompleted, userState);
        }
        
        private void OnGetCurrencyOperationCompleted(object arg) {
            if ((this.GetCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyCompleted(this, new GetCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCustomersByEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDTO[] GetCustomersByEmail(string Email) {
            object[] results = this.Invoke("GetCustomersByEmail", new object[] {
                        Email});
            return ((CustomerDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersByEmailAsync(string Email) {
            this.GetCustomersByEmailAsync(Email, null);
        }
        
        /// <remarks/>
        public void GetCustomersByEmailAsync(string Email, object userState) {
            if ((this.GetCustomersByEmailOperationCompleted == null)) {
                this.GetCustomersByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersByEmailOperationCompleted);
            }
            this.InvokeAsync("GetCustomersByEmail", new object[] {
                        Email}, this.GetCustomersByEmailOperationCompleted, userState);
        }
        
        private void OnGetCustomersByEmailOperationCompleted(object arg) {
            if ((this.GetCustomersByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersByEmailCompleted(this, new GetCustomersByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCustomersByUsername", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDTO[] GetCustomersByUsername(string Username) {
            object[] results = this.Invoke("GetCustomersByUsername", new object[] {
                        Username});
            return ((CustomerDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersByUsernameAsync(string Username) {
            this.GetCustomersByUsernameAsync(Username, null);
        }
        
        /// <remarks/>
        public void GetCustomersByUsernameAsync(string Username, object userState) {
            if ((this.GetCustomersByUsernameOperationCompleted == null)) {
                this.GetCustomersByUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersByUsernameOperationCompleted);
            }
            this.InvokeAsync("GetCustomersByUsername", new object[] {
                        Username}, this.GetCustomersByUsernameOperationCompleted, userState);
        }
        
        private void OnGetCustomersByUsernameOperationCompleted(object arg) {
            if ((this.GetCustomersByUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersByUsernameCompleted(this, new GetCustomersByUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCustomersByFirstname", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDTO[] GetCustomersByFirstname(string Firstname) {
            object[] results = this.Invoke("GetCustomersByFirstname", new object[] {
                        Firstname});
            return ((CustomerDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersByFirstnameAsync(string Firstname) {
            this.GetCustomersByFirstnameAsync(Firstname, null);
        }
        
        /// <remarks/>
        public void GetCustomersByFirstnameAsync(string Firstname, object userState) {
            if ((this.GetCustomersByFirstnameOperationCompleted == null)) {
                this.GetCustomersByFirstnameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersByFirstnameOperationCompleted);
            }
            this.InvokeAsync("GetCustomersByFirstname", new object[] {
                        Firstname}, this.GetCustomersByFirstnameOperationCompleted, userState);
        }
        
        private void OnGetCustomersByFirstnameOperationCompleted(object arg) {
            if ((this.GetCustomersByFirstnameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersByFirstnameCompleted(this, new GetCustomersByFirstnameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCustomersByLastname", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDTO[] GetCustomersByLastname(string Lastname) {
            object[] results = this.Invoke("GetCustomersByLastname", new object[] {
                        Lastname});
            return ((CustomerDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersByLastnameAsync(string Lastname) {
            this.GetCustomersByLastnameAsync(Lastname, null);
        }
        
        /// <remarks/>
        public void GetCustomersByLastnameAsync(string Lastname, object userState) {
            if ((this.GetCustomersByLastnameOperationCompleted == null)) {
                this.GetCustomersByLastnameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersByLastnameOperationCompleted);
            }
            this.InvokeAsync("GetCustomersByLastname", new object[] {
                        Lastname}, this.GetCustomersByLastnameOperationCompleted, userState);
        }
        
        private void OnGetCustomersByLastnameOperationCompleted(object arg) {
            if ((this.GetCustomersByLastnameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersByLastnameCompleted(this, new GetCustomersByLastnameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCustomersByFullname", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDTO[] GetCustomersByFullname(string Fullname) {
            object[] results = this.Invoke("GetCustomersByFullname", new object[] {
                        Fullname});
            return ((CustomerDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersByFullnameAsync(string Fullname) {
            this.GetCustomersByFullnameAsync(Fullname, null);
        }
        
        /// <remarks/>
        public void GetCustomersByFullnameAsync(string Fullname, object userState) {
            if ((this.GetCustomersByFullnameOperationCompleted == null)) {
                this.GetCustomersByFullnameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersByFullnameOperationCompleted);
            }
            this.InvokeAsync("GetCustomersByFullname", new object[] {
                        Fullname}, this.GetCustomersByFullnameOperationCompleted, userState);
        }
        
        private void OnGetCustomersByFullnameOperationCompleted(object arg) {
            if ((this.GetCustomersByFullnameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersByFullnameCompleted(this, new GetCustomersByFullnameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCustomersByCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDTO[] GetCustomersByCompany(string Company) {
            object[] results = this.Invoke("GetCustomersByCompany", new object[] {
                        Company});
            return ((CustomerDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersByCompanyAsync(string Company) {
            this.GetCustomersByCompanyAsync(Company, null);
        }
        
        /// <remarks/>
        public void GetCustomersByCompanyAsync(string Company, object userState) {
            if ((this.GetCustomersByCompanyOperationCompleted == null)) {
                this.GetCustomersByCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersByCompanyOperationCompleted);
            }
            this.InvokeAsync("GetCustomersByCompany", new object[] {
                        Company}, this.GetCustomersByCompanyOperationCompleted, userState);
        }
        
        private void OnGetCustomersByCompanyOperationCompleted(object arg) {
            if ((this.GetCustomersByCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersByCompanyCompleted(this, new GetCustomersByCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCustomersByPhone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDTO[] GetCustomersByPhone(string Phone) {
            object[] results = this.Invoke("GetCustomersByPhone", new object[] {
                        Phone});
            return ((CustomerDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersByPhoneAsync(string Phone) {
            this.GetCustomersByPhoneAsync(Phone, null);
        }
        
        /// <remarks/>
        public void GetCustomersByPhoneAsync(string Phone, object userState) {
            if ((this.GetCustomersByPhoneOperationCompleted == null)) {
                this.GetCustomersByPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersByPhoneOperationCompleted);
            }
            this.InvokeAsync("GetCustomersByPhone", new object[] {
                        Phone}, this.GetCustomersByPhoneOperationCompleted, userState);
        }
        
        private void OnGetCustomersByPhoneOperationCompleted(object arg) {
            if ((this.GetCustomersByPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersByPhoneCompleted(this, new GetCustomersByPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCustomersByPostalCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDTO[] GetCustomersByPostalCode(string PostalCode) {
            object[] results = this.Invoke("GetCustomersByPostalCode", new object[] {
                        PostalCode});
            return ((CustomerDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersByPostalCodeAsync(string PostalCode) {
            this.GetCustomersByPostalCodeAsync(PostalCode, null);
        }
        
        /// <remarks/>
        public void GetCustomersByPostalCodeAsync(string PostalCode, object userState) {
            if ((this.GetCustomersByPostalCodeOperationCompleted == null)) {
                this.GetCustomersByPostalCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersByPostalCodeOperationCompleted);
            }
            this.InvokeAsync("GetCustomersByPostalCode", new object[] {
                        PostalCode}, this.GetCustomersByPostalCodeOperationCompleted, userState);
        }
        
        private void OnGetCustomersByPostalCodeOperationCompleted(object arg) {
            if ((this.GetCustomersByPostalCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersByPostalCodeCompleted(this, new GetCustomersByPostalCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetCurrentCarts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDTO[] GetCurrentCarts(string Filter, string Email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> LowerItems, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> HigherItems, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> LowerTotal, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> HigherTotal, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> Abandoned) {
            object[] results = this.Invoke("GetCurrentCarts", new object[] {
                        Filter,
                        Email,
                        LowerItems,
                        HigherItems,
                        LowerTotal,
                        HigherTotal,
                        Abandoned});
            return ((CustomerDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentCartsAsync(string Filter, string Email, System.Nullable<int> LowerItems, System.Nullable<int> HigherItems, System.Nullable<decimal> LowerTotal, System.Nullable<decimal> HigherTotal, System.Nullable<bool> Abandoned) {
            this.GetCurrentCartsAsync(Filter, Email, LowerItems, HigherItems, LowerTotal, HigherTotal, Abandoned, null);
        }
        
        /// <remarks/>
        public void GetCurrentCartsAsync(string Filter, string Email, System.Nullable<int> LowerItems, System.Nullable<int> HigherItems, System.Nullable<decimal> LowerTotal, System.Nullable<decimal> HigherTotal, System.Nullable<bool> Abandoned, object userState) {
            if ((this.GetCurrentCartsOperationCompleted == null)) {
                this.GetCurrentCartsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentCartsOperationCompleted);
            }
            this.InvokeAsync("GetCurrentCarts", new object[] {
                        Filter,
                        Email,
                        LowerItems,
                        HigherItems,
                        LowerTotal,
                        HigherTotal,
                        Abandoned}, this.GetCurrentCartsOperationCompleted, userState);
        }
        
        private void OnGetCurrentCartsOperationCompleted(object arg) {
            if ((this.GetCurrentCartsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentCartsCompleted(this, new GetCurrentCartsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/GetBestCustomers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerDTO[] GetBestCustomers() {
            object[] results = this.Invoke("GetBestCustomers", new object[0]);
            return ((CustomerDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBestCustomersAsync() {
            this.GetBestCustomersAsync(null);
        }
        
        /// <remarks/>
        public void GetBestCustomersAsync(object userState) {
            if ((this.GetBestCustomersOperationCompleted == null)) {
                this.GetBestCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBestCustomersOperationCompleted);
            }
            this.InvokeAsync("GetBestCustomers", new object[0], this.GetBestCustomersOperationCompleted, userState);
        }
        
        private void OnGetBestCustomersOperationCompleted(object arg) {
            if ((this.GetBestCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBestCustomersCompleted(this, new GetBestCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/ExecuteDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExecuteDataSet(string[] sqlStatements, string usernameOrEmail, string userPassword) {
            object[] results = this.Invoke("ExecuteDataSet", new object[] {
                        sqlStatements,
                        usernameOrEmail,
                        userPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteDataSetAsync(string[] sqlStatements, string usernameOrEmail, string userPassword) {
            this.ExecuteDataSetAsync(sqlStatements, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void ExecuteDataSetAsync(string[] sqlStatements, string usernameOrEmail, string userPassword, object userState) {
            if ((this.ExecuteDataSetOperationCompleted == null)) {
                this.ExecuteDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteDataSetOperationCompleted);
            }
            this.InvokeAsync("ExecuteDataSet", new object[] {
                        sqlStatements,
                        usernameOrEmail,
                        userPassword}, this.ExecuteDataSetOperationCompleted, userState);
        }
        
        private void OnExecuteDataSetOperationCompleted(object arg) {
            if ((this.ExecuteDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteDataSetCompleted(this, new ExecuteDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/ExecuteNonQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteNonQuery(string sqlStatement, string usernameOrEmail, string userPassword) {
            this.Invoke("ExecuteNonQuery", new object[] {
                        sqlStatement,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(string sqlStatement, string usernameOrEmail, string userPassword) {
            this.ExecuteNonQueryAsync(sqlStatement, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(string sqlStatement, string usernameOrEmail, string userPassword, object userState) {
            if ((this.ExecuteNonQueryOperationCompleted == null)) {
                this.ExecuteNonQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteNonQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteNonQuery", new object[] {
                        sqlStatement,
                        usernameOrEmail,
                        userPassword}, this.ExecuteNonQueryOperationCompleted, userState);
        }
        
        private void OnExecuteNonQueryOperationCompleted(object arg) {
            if ((this.ExecuteNonQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteNonQueryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/ExecuteScalar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object ExecuteScalar(string sqlStatement, string usernameOrEmail, string userPassword) {
            object[] results = this.Invoke("ExecuteScalar", new object[] {
                        sqlStatement,
                        usernameOrEmail,
                        userPassword});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteScalarAsync(string sqlStatement, string usernameOrEmail, string userPassword) {
            this.ExecuteScalarAsync(sqlStatement, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void ExecuteScalarAsync(string sqlStatement, string usernameOrEmail, string userPassword, object userState) {
            if ((this.ExecuteScalarOperationCompleted == null)) {
                this.ExecuteScalarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteScalarOperationCompleted);
            }
            this.InvokeAsync("ExecuteScalar", new object[] {
                        sqlStatement,
                        usernameOrEmail,
                        userPassword}, this.ExecuteScalarOperationCompleted, userState);
        }
        
        private void OnExecuteScalarOperationCompleted(object arg) {
            if ((this.ExecuteScalarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteScalarCompleted(this, new ExecuteScalarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/DeleteOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderError[] DeleteOrders(int[] ordersId, string usernameOrEmail, string userPassword) {
            object[] results = this.Invoke("DeleteOrders", new object[] {
                        ordersId,
                        usernameOrEmail,
                        userPassword});
            return ((OrderError[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrdersAsync(int[] ordersId, string usernameOrEmail, string userPassword) {
            this.DeleteOrdersAsync(ordersId, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteOrdersAsync(int[] ordersId, string usernameOrEmail, string userPassword, object userState) {
            if ((this.DeleteOrdersOperationCompleted == null)) {
                this.DeleteOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrdersOperationCompleted);
            }
            this.InvokeAsync("DeleteOrders", new object[] {
                        ordersId,
                        usernameOrEmail,
                        userPassword}, this.DeleteOrdersOperationCompleted, userState);
        }
        
        private void OnDeleteOrdersOperationCompleted(object arg) {
            if ((this.DeleteOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrdersCompleted(this, new DeleteOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/DeleteOrdersWithoutUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderError[] DeleteOrdersWithoutUser(int[] ordersId) {
            object[] results = this.Invoke("DeleteOrdersWithoutUser", new object[] {
                        ordersId});
            return ((OrderError[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrdersWithoutUserAsync(int[] ordersId) {
            this.DeleteOrdersWithoutUserAsync(ordersId, null);
        }
        
        /// <remarks/>
        public void DeleteOrdersWithoutUserAsync(int[] ordersId, object userState) {
            if ((this.DeleteOrdersWithoutUserOperationCompleted == null)) {
                this.DeleteOrdersWithoutUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrdersWithoutUserOperationCompleted);
            }
            this.InvokeAsync("DeleteOrdersWithoutUser", new object[] {
                        ordersId}, this.DeleteOrdersWithoutUserOperationCompleted, userState);
        }
        
        private void OnDeleteOrdersWithoutUserOperationCompleted(object arg) {
            if ((this.DeleteOrdersWithoutUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrdersWithoutUserCompleted(this, new DeleteOrdersWithoutUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/ChangeOrderStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeOrderStatus(int id, OrderStatus status) {
            this.Invoke("ChangeOrderStatus", new object[] {
                        id,
                        status});
        }
        
        /// <remarks/>
        public void ChangeOrderStatusAsync(int id, OrderStatus status) {
            this.ChangeOrderStatusAsync(id, status, null);
        }
        
        /// <remarks/>
        public void ChangeOrderStatusAsync(int id, OrderStatus status, object userState) {
            if ((this.ChangeOrderStatusOperationCompleted == null)) {
                this.ChangeOrderStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeOrderStatusOperationCompleted);
            }
            this.InvokeAsync("ChangeOrderStatus", new object[] {
                        id,
                        status}, this.ChangeOrderStatusOperationCompleted, userState);
        }
        
        private void OnChangeOrderStatusOperationCompleted(object arg) {
            if ((this.ChangeOrderStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeOrderStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/ChangePaymentStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangePaymentStatus(int id, PaymentStatus status) {
            this.Invoke("ChangePaymentStatus", new object[] {
                        id,
                        status});
        }
        
        /// <remarks/>
        public void ChangePaymentStatusAsync(int id, PaymentStatus status) {
            this.ChangePaymentStatusAsync(id, status, null);
        }
        
        /// <remarks/>
        public void ChangePaymentStatusAsync(int id, PaymentStatus status, object userState) {
            if ((this.ChangePaymentStatusOperationCompleted == null)) {
                this.ChangePaymentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePaymentStatusOperationCompleted);
            }
            this.InvokeAsync("ChangePaymentStatus", new object[] {
                        id,
                        status}, this.ChangePaymentStatusOperationCompleted, userState);
        }
        
        private void OnChangePaymentStatusOperationCompleted(object arg) {
            if ((this.ChangePaymentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePaymentStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/ChangeShippingStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeShippingStatus(int id, ShippingStatus status) {
            this.Invoke("ChangeShippingStatus", new object[] {
                        id,
                        status});
        }
        
        /// <remarks/>
        public void ChangeShippingStatusAsync(int id, ShippingStatus status) {
            this.ChangeShippingStatusAsync(id, status, null);
        }
        
        /// <remarks/>
        public void ChangeShippingStatusAsync(int id, ShippingStatus status, object userState) {
            if ((this.ChangeShippingStatusOperationCompleted == null)) {
                this.ChangeShippingStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeShippingStatusOperationCompleted);
            }
            this.InvokeAsync("ChangeShippingStatus", new object[] {
                        id,
                        status}, this.ChangeShippingStatusOperationCompleted, userState);
        }
        
        private void OnChangeShippingStatusOperationCompleted(object arg) {
            if ((this.ChangeShippingStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeShippingStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/AddCommentToCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddCommentToCustomer(string email, string comment) {
            this.Invoke("AddCommentToCustomer", new object[] {
                        email,
                        comment});
        }
        
        /// <remarks/>
        public void AddCommentToCustomerAsync(string email, string comment) {
            this.AddCommentToCustomerAsync(email, comment, null);
        }
        
        /// <remarks/>
        public void AddCommentToCustomerAsync(string email, string comment, object userState) {
            if ((this.AddCommentToCustomerOperationCompleted == null)) {
                this.AddCommentToCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommentToCustomerOperationCompleted);
            }
            this.InvokeAsync("AddCommentToCustomer", new object[] {
                        email,
                        comment}, this.AddCommentToCustomerOperationCompleted, userState);
        }
        
        private void OnAddCommentToCustomerOperationCompleted(object arg) {
            if ((this.AddCommentToCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCommentToCustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/AddOrderNote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOrderNote(int orderId, string note, bool displayToCustomer, string usernameOrEmail, string userPassword) {
            this.Invoke("AddOrderNote", new object[] {
                        orderId,
                        note,
                        displayToCustomer,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void AddOrderNoteAsync(int orderId, string note, bool displayToCustomer, string usernameOrEmail, string userPassword) {
            this.AddOrderNoteAsync(orderId, note, displayToCustomer, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void AddOrderNoteAsync(int orderId, string note, bool displayToCustomer, string usernameOrEmail, string userPassword, object userState) {
            if ((this.AddOrderNoteOperationCompleted == null)) {
                this.AddOrderNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrderNoteOperationCompleted);
            }
            this.InvokeAsync("AddOrderNote", new object[] {
                        orderId,
                        note,
                        displayToCustomer,
                        usernameOrEmail,
                        userPassword}, this.AddOrderNoteOperationCompleted, userState);
        }
        
        private void OnAddOrderNoteOperationCompleted(object arg) {
            if ((this.AddOrderNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrderNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/UpdateOrderBillingInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrderBillingInfo(int orderId, string firstName, string lastName, string phone, string email, string fax, string company, string address1, string address2, string city, string region, string country, string postalCode, string usernameOrEmail, string userPassword) {
            this.Invoke("UpdateOrderBillingInfo", new object[] {
                        orderId,
                        firstName,
                        lastName,
                        phone,
                        email,
                        fax,
                        company,
                        address1,
                        address2,
                        city,
                        region,
                        country,
                        postalCode,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void UpdateOrderBillingInfoAsync(int orderId, string firstName, string lastName, string phone, string email, string fax, string company, string address1, string address2, string city, string region, string country, string postalCode, string usernameOrEmail, string userPassword) {
            this.UpdateOrderBillingInfoAsync(orderId, firstName, lastName, phone, email, fax, company, address1, address2, city, region, country, postalCode, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void UpdateOrderBillingInfoAsync(
                    int orderId, 
                    string firstName, 
                    string lastName, 
                    string phone, 
                    string email, 
                    string fax, 
                    string company, 
                    string address1, 
                    string address2, 
                    string city, 
                    string region, 
                    string country, 
                    string postalCode, 
                    string usernameOrEmail, 
                    string userPassword, 
                    object userState) {
            if ((this.UpdateOrderBillingInfoOperationCompleted == null)) {
                this.UpdateOrderBillingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrderBillingInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateOrderBillingInfo", new object[] {
                        orderId,
                        firstName,
                        lastName,
                        phone,
                        email,
                        fax,
                        company,
                        address1,
                        address2,
                        city,
                        region,
                        country,
                        postalCode,
                        usernameOrEmail,
                        userPassword}, this.UpdateOrderBillingInfoOperationCompleted, userState);
        }
        
        private void OnUpdateOrderBillingInfoOperationCompleted(object arg) {
            if ((this.UpdateOrderBillingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrderBillingInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/UpdateOrderShippingInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrderShippingInfo(int orderId, string firstName, string lastName, string phone, string email, string fax, string company, string address1, string address2, string city, string region, string country, string postalCode, string usernameOrEmail, string userPassword) {
            this.Invoke("UpdateOrderShippingInfo", new object[] {
                        orderId,
                        firstName,
                        lastName,
                        phone,
                        email,
                        fax,
                        company,
                        address1,
                        address2,
                        city,
                        region,
                        country,
                        postalCode,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void UpdateOrderShippingInfoAsync(int orderId, string firstName, string lastName, string phone, string email, string fax, string company, string address1, string address2, string city, string region, string country, string postalCode, string usernameOrEmail, string userPassword) {
            this.UpdateOrderShippingInfoAsync(orderId, firstName, lastName, phone, email, fax, company, address1, address2, city, region, country, postalCode, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void UpdateOrderShippingInfoAsync(
                    int orderId, 
                    string firstName, 
                    string lastName, 
                    string phone, 
                    string email, 
                    string fax, 
                    string company, 
                    string address1, 
                    string address2, 
                    string city, 
                    string region, 
                    string country, 
                    string postalCode, 
                    string usernameOrEmail, 
                    string userPassword, 
                    object userState) {
            if ((this.UpdateOrderShippingInfoOperationCompleted == null)) {
                this.UpdateOrderShippingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrderShippingInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateOrderShippingInfo", new object[] {
                        orderId,
                        firstName,
                        lastName,
                        phone,
                        email,
                        fax,
                        company,
                        address1,
                        address2,
                        city,
                        region,
                        country,
                        postalCode,
                        usernameOrEmail,
                        userPassword}, this.UpdateOrderShippingInfoOperationCompleted, userState);
        }
        
        private void OnUpdateOrderShippingInfoOperationCompleted(object arg) {
            if ((this.UpdateOrderShippingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrderShippingInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/SetOrderPaymentPaid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOrderPaymentPaid(int orderId, string usernameOrEmail, string userPassword) {
            this.Invoke("SetOrderPaymentPaid", new object[] {
                        orderId,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void SetOrderPaymentPaidAsync(int orderId, string usernameOrEmail, string userPassword) {
            this.SetOrderPaymentPaidAsync(orderId, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void SetOrderPaymentPaidAsync(int orderId, string usernameOrEmail, string userPassword, object userState) {
            if ((this.SetOrderPaymentPaidOperationCompleted == null)) {
                this.SetOrderPaymentPaidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOrderPaymentPaidOperationCompleted);
            }
            this.InvokeAsync("SetOrderPaymentPaid", new object[] {
                        orderId,
                        usernameOrEmail,
                        userPassword}, this.SetOrderPaymentPaidOperationCompleted, userState);
        }
        
        private void OnSetOrderPaymentPaidOperationCompleted(object arg) {
            if ((this.SetOrderPaymentPaidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOrderPaymentPaidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/SetOrderPaymentPaidWithMethod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOrderPaymentPaidWithMethod(int orderId, string paymentMethodName, string usernameOrEmail, string userPassword) {
            this.Invoke("SetOrderPaymentPaidWithMethod", new object[] {
                        orderId,
                        paymentMethodName,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void SetOrderPaymentPaidWithMethodAsync(int orderId, string paymentMethodName, string usernameOrEmail, string userPassword) {
            this.SetOrderPaymentPaidWithMethodAsync(orderId, paymentMethodName, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void SetOrderPaymentPaidWithMethodAsync(int orderId, string paymentMethodName, string usernameOrEmail, string userPassword, object userState) {
            if ((this.SetOrderPaymentPaidWithMethodOperationCompleted == null)) {
                this.SetOrderPaymentPaidWithMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOrderPaymentPaidWithMethodOperationCompleted);
            }
            this.InvokeAsync("SetOrderPaymentPaidWithMethod", new object[] {
                        orderId,
                        paymentMethodName,
                        usernameOrEmail,
                        userPassword}, this.SetOrderPaymentPaidWithMethodOperationCompleted, userState);
        }
        
        private void OnSetOrderPaymentPaidWithMethodOperationCompleted(object arg) {
            if ((this.SetOrderPaymentPaidWithMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOrderPaymentPaidWithMethodCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/SetOrderPaymentPending", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOrderPaymentPending(int orderId, string usernameOrEmail, string userPassword) {
            this.Invoke("SetOrderPaymentPending", new object[] {
                        orderId,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void SetOrderPaymentPendingAsync(int orderId, string usernameOrEmail, string userPassword) {
            this.SetOrderPaymentPendingAsync(orderId, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void SetOrderPaymentPendingAsync(int orderId, string usernameOrEmail, string userPassword, object userState) {
            if ((this.SetOrderPaymentPendingOperationCompleted == null)) {
                this.SetOrderPaymentPendingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOrderPaymentPendingOperationCompleted);
            }
            this.InvokeAsync("SetOrderPaymentPending", new object[] {
                        orderId,
                        usernameOrEmail,
                        userPassword}, this.SetOrderPaymentPendingOperationCompleted, userState);
        }
        
        private void OnSetOrderPaymentPendingOperationCompleted(object arg) {
            if ((this.SetOrderPaymentPendingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOrderPaymentPendingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/SetOrderPaymentRefund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOrderPaymentRefund(int orderId, bool offline, string usernameOrEmail, string userPassword) {
            this.Invoke("SetOrderPaymentRefund", new object[] {
                        orderId,
                        offline,
                        usernameOrEmail,
                        userPassword});
        }
        
        /// <remarks/>
        public void SetOrderPaymentRefundAsync(int orderId, bool offline, string usernameOrEmail, string userPassword) {
            this.SetOrderPaymentRefundAsync(orderId, offline, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void SetOrderPaymentRefundAsync(int orderId, bool offline, string usernameOrEmail, string userPassword, object userState) {
            if ((this.SetOrderPaymentRefundOperationCompleted == null)) {
                this.SetOrderPaymentRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOrderPaymentRefundOperationCompleted);
            }
            this.InvokeAsync("SetOrderPaymentRefund", new object[] {
                        orderId,
                        offline,
                        usernameOrEmail,
                        userPassword}, this.SetOrderPaymentRefundOperationCompleted, userState);
        }
        
        private void OnSetOrderPaymentRefundOperationCompleted(object arg) {
            if ((this.SetOrderPaymentRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOrderPaymentRefundCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INopService/SetOrdersStatusCanceled", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderError[] SetOrdersStatusCanceled(int[] ordersId, string usernameOrEmail, string userPassword) {
            object[] results = this.Invoke("SetOrdersStatusCanceled", new object[] {
                        ordersId,
                        usernameOrEmail,
                        userPassword});
            return ((OrderError[])(results[0]));
        }
        
        /// <remarks/>
        public void SetOrdersStatusCanceledAsync(int[] ordersId, string usernameOrEmail, string userPassword) {
            this.SetOrdersStatusCanceledAsync(ordersId, usernameOrEmail, userPassword, null);
        }
        
        /// <remarks/>
        public void SetOrdersStatusCanceledAsync(int[] ordersId, string usernameOrEmail, string userPassword, object userState) {
            if ((this.SetOrdersStatusCanceledOperationCompleted == null)) {
                this.SetOrdersStatusCanceledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOrdersStatusCanceledOperationCompleted);
            }
            this.InvokeAsync("SetOrdersStatusCanceled", new object[] {
                        ordersId,
                        usernameOrEmail,
                        userPassword}, this.SetOrdersStatusCanceledOperationCompleted, userState);
        }
        
        private void OnSetOrdersStatusCanceledOperationCompleted(object arg) {
            if ((this.SetOrdersStatusCanceledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOrdersStatusCanceledCompleted(this, new SetOrdersStatusCanceledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum OrderStatus {
        
        /// <remarks/>
        Pending,
        
        /// <remarks/>
        Processing,
        
        /// <remarks/>
        Complete,
        
        /// <remarks/>
        Cancelled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum PaymentStatus {
        
        /// <remarks/>
        Pending,
        
        /// <remarks/>
        Authorized,
        
        /// <remarks/>
        Paid,
        
        /// <remarks/>
        PartiallyRefunded,
        
        /// <remarks/>
        Refunded,
        
        /// <remarks/>
        Voided,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ShippingStatus {
        
        /// <remarks/>
        ShippingNotRequired,
        
        /// <remarks/>
        NotYetShipped,
        
        /// <remarks/>
        PartiallyShipped,
        
        /// <remarks/>
        Shipped,
        
        /// <remarks/>
        Delivered,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrderDTO {
        
        private int orderIDField;
        
        private System.DateTime createDateField;
        
        private OrderStatus orderStatusField;
        
        private PaymentStatus payStatusField;
        
        private string orderEmailField;
        
        private OrderItemDTO[] productsListField;
        
        private string addressField;
        
        private ShippingStatus shippingStatusField;
        
        /// <remarks/>
        public int OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public OrderStatus OrderStatus {
            get {
                return this.orderStatusField;
            }
            set {
                this.orderStatusField = value;
            }
        }
        
        /// <remarks/>
        public PaymentStatus PayStatus {
            get {
                return this.payStatusField;
            }
            set {
                this.payStatusField = value;
            }
        }
        
        /// <remarks/>
        public string OrderEmail {
            get {
                return this.orderEmailField;
            }
            set {
                this.orderEmailField = value;
            }
        }
        
        /// <remarks/>
        public OrderItemDTO[] ProductsList {
            get {
                return this.productsListField;
            }
            set {
                this.productsListField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public ShippingStatus ShippingStatus {
            get {
                return this.shippingStatusField;
            }
            set {
                this.shippingStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrderItemDTO {
        
        private int orderIdField;
        
        private int productIdField;
        
        private int quantityField;
        
        private ProductDTO productField;
        
        /// <remarks/>
        public int OrderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public ProductDTO Product {
            get {
                return this.productField;
            }
            set {
                this.productField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProductDTO {
        
        private string nameField;
        
        private decimal priceField;
        
        private int idField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrderError {
        
        private int orderIdField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int OrderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CartItemDTO {
        
        private ProductDTO productField;
        
        private int quantityField;
        
        /// <remarks/>
        public ProductDTO Product {
            get {
                return this.productField;
            }
            set {
                this.productField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerDTO {
        
        private int idField;
        
        private string usernameField;
        
        private string emailField;
        
        private string adminCommentField;
        
        private string phoneField;
        
        private string fullNameField;
        
        private bool isAdminField;
        
        private CartItemDTO[] shoppingCartField;
        
        private bool activeField;
        
        private string companyField;
        
        private string genderField;
        
        private System.DateTime activityField;
        
        private string birthdayField;
        
        private string[] addressesField;
        
        private CartItemDTO[] wishlistField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string AdminComment {
            get {
                return this.adminCommentField;
            }
            set {
                this.adminCommentField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAdmin {
            get {
                return this.isAdminField;
            }
            set {
                this.isAdminField = value;
            }
        }
        
        /// <remarks/>
        public CartItemDTO[] ShoppingCart {
            get {
                return this.shoppingCartField;
            }
            set {
                this.shoppingCartField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Activity {
            get {
                return this.activityField;
            }
            set {
                this.activityField = value;
            }
        }
        
        /// <remarks/>
        public string Birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
            }
        }
        
        /// <remarks/>
        public string[] Addresses {
            get {
                return this.addressesField;
            }
            set {
                this.addressesField = value;
            }
        }
        
        /// <remarks/>
        public CartItemDTO[] Wishlist {
            get {
                return this.wishlistField;
            }
            set {
                this.wishlistField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPaymentMethodCompletedEventHandler(object sender, GetPaymentMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CheckLoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserNameCompletedEventHandler(object sender, GetUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetOrdersCompletedEventHandler(object sender, GetOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetOrderByIdCompletedEventHandler(object sender, GetOrderByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCustomerListCompletedEventHandler(object sender, GetCustomerListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPendingTotalCompletedEventHandler(object sender, GetPendingTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPendingTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPendingTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void EndSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCompleteTotalCompletedEventHandler(object sender, GetCompleteTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompleteTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompleteTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCancelledTotalCompletedEventHandler(object sender, GetCancelledTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCancelledTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCancelledTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetStoreNameCompletedEventHandler(object sender, GetStoreNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoreNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoreNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetRegisteredUsersCountByTimeCompletedEventHandler(object sender, GetRegisteredUsersCountByTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegisteredUsersCountByTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegisteredUsersCountByTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetTotalSalesByTimeCompletedEventHandler(object sender, GetTotalSalesByTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalSalesByTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalSalesByTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetTotalPendingByReasonCompletedEventHandler(object sender, GetTotalPendingByReasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalPendingByReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalPendingByReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPendingOrdersCountCompletedEventHandler(object sender, GetPendingOrdersCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPendingOrdersCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPendingOrdersCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCurrentCartsCountCompletedEventHandler(object sender, GetCurrentCartsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentCartsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentCartsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetWishlistCountCompletedEventHandler(object sender, GetWishlistCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWishlistCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWishlistCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetOnlineCountCompletedEventHandler(object sender, GetOnlineCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOnlineCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOnlineCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetRegisteredCustomersCountCompletedEventHandler(object sender, GetRegisteredCustomersCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegisteredCustomersCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegisteredCustomersCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetVendorsCountCompletedEventHandler(object sender, GetVendorsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPopularKeywordsCompletedEventHandler(object sender, GetPopularKeywordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPopularKeywordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPopularKeywordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBestsellersByAmountCompletedEventHandler(object sender, GetBestsellersByAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBestsellersByAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBestsellersByAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBestsellersByQuantityCompletedEventHandler(object sender, GetBestsellersByQuantityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBestsellersByQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBestsellersByQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCurrencyCompletedEventHandler(object sender, GetCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCustomersByEmailCompletedEventHandler(object sender, GetCustomersByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCustomersByUsernameCompletedEventHandler(object sender, GetCustomersByUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCustomersByFirstnameCompletedEventHandler(object sender, GetCustomersByFirstnameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersByFirstnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersByFirstnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCustomersByLastnameCompletedEventHandler(object sender, GetCustomersByLastnameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersByLastnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersByLastnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCustomersByFullnameCompletedEventHandler(object sender, GetCustomersByFullnameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersByFullnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersByFullnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCustomersByCompanyCompletedEventHandler(object sender, GetCustomersByCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersByCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersByCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCustomersByPhoneCompletedEventHandler(object sender, GetCustomersByPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersByPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersByPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCustomersByPostalCodeCompletedEventHandler(object sender, GetCustomersByPostalCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersByPostalCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersByPostalCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCurrentCartsCompletedEventHandler(object sender, GetCurrentCartsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentCartsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentCartsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBestCustomersCompletedEventHandler(object sender, GetBestCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBestCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBestCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteDataSetCompletedEventHandler(object sender, ExecuteDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteNonQueryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExecuteScalarCompletedEventHandler(object sender, ExecuteScalarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteScalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteScalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteOrdersCompletedEventHandler(object sender, DeleteOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderError[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderError[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteOrdersWithoutUserCompletedEventHandler(object sender, DeleteOrdersWithoutUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrdersWithoutUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrdersWithoutUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderError[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderError[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ChangeOrderStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ChangePaymentStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ChangeShippingStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddCommentToCustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddOrderNoteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateOrderBillingInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateOrderShippingInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SetOrderPaymentPaidCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SetOrderPaymentPaidWithMethodCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SetOrderPaymentPendingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SetOrderPaymentRefundCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SetOrdersStatusCanceledCompletedEventHandler(object sender, SetOrdersStatusCanceledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetOrdersStatusCanceledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetOrdersStatusCanceledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderError[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderError[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591